{
 "robocop":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.comments":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.documentation":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.duplications":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.errors":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.lengths":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.misc":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.naming":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.spacing":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.tags":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.config":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.exceptions":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.files":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.compare_runs_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.file_stats_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.json_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.return_status_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.robocop_version_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.rules_by_id_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.rules_by_severity_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.sarif_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.time_taken_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.timestamp_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.rules":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.run":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.disablers":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.file_types":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.misc":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.pylama_parse":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.run_keywords":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.utils":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.version_matching":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.version":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocrys":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys._version":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.adapter":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.cli":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.component":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.condenser":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.fingerprint":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.mineral":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.molecule":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.site":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_component":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_fingerprint":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_mineral":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_molecule":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_site":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_structure":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe.adapter":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe.describer":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe.tests":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe.tests.test_adapter":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe.tests.test_description":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.featurize":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.featurize.adapter":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.featurize.featurizer":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.tests":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.tests.adapter":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.tests.test_cli":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.tests.test_util":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.util":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 }
}