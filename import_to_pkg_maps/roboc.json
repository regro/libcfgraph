{
 "robocop":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.comments":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.documentation":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.duplications":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.errors":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.lengths":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.misc":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.naming":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.spacing":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.checkers.tags":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.config":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.exceptions":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.files":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.compare_runs_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.file_stats_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.json_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.return_status_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.robocop_version_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.rules_by_id_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.rules_by_severity_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.sarif_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.time_taken_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.reports.timestamp_report":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.rules":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.run":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.disablers":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.file_types":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.misc":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.pylama_parse":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.run_keywords":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.utils":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.utils.version_matching":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocop.version":{
  "__set__":true,
  "elements":[
   "robotframework-robocop"
  ]
 },
 "robocorp.excel":{
  "__set__":true,
  "elements":[
   "robocorp-excel"
  ]
 },
 "robocorp.excel._types":{
  "__set__":true,
  "elements":[
   "robocorp-excel"
  ]
 },
 "robocorp.excel._workbooks":{
  "__set__":true,
  "elements":[
   "robocorp-excel"
  ]
 },
 "robocorp.excel.excel":{
  "__set__":true,
  "elements":[
   "robocorp-excel"
  ]
 },
 "robocorp.excel.tables":{
  "__set__":true,
  "elements":[
   "robocorp-excel"
  ]
 },
 "robocorp.excel.workbook":{
  "__set__":true,
  "elements":[
   "robocorp-excel"
  ]
 },
 "robocorp.excel.worksheet":{
  "__set__":true,
  "elements":[
   "robocorp-excel"
  ]
 },
 "robocorp.log":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._ast_utils":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._auto_logging_setup":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._config":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._convert_units":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._decoder":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._decoder_spec":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._index_v3":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._lifecycle_hooks":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._logger_instances":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._null":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._obj_info_repr":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._on_exit_context_manager":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._rewrite_ast_add_callbacks":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._rewrite_filtering":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._rewrite_importhook":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._robo_logger":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._robo_output_impl":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._sensitive_variable_names":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log._suppress_helper":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log.console":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log.protocols":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log.pyproject_config":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.log.redirect":{
  "__set__":true,
  "elements":[
   "robocorp-log"
  ]
 },
 "robocorp.storage":{
  "__set__":true,
  "elements":[
   "robocorp-storage"
  ]
 },
 "robocorp.storage._client":{
  "__set__":true,
  "elements":[
   "robocorp-storage"
  ]
 },
 "robocorp.storage._environment":{
  "__set__":true,
  "elements":[
   "robocorp-storage"
  ]
 },
 "robocorp.storage._requests":{
  "__set__":true,
  "elements":[
   "robocorp-storage"
  ]
 },
 "robocorp.storage._types":{
  "__set__":true,
  "elements":[
   "robocorp-storage"
  ]
 },
 "robocorp.storage._utils":{
  "__set__":true,
  "elements":[
   "robocorp-storage"
  ]
 },
 "robocorp.tasks":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._argdispatch":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._callback":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._collect_tasks":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._commands":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._config":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._exceptions":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._hooks":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._lifecycle":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._log_auto_setup":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._log_output_setup":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._protocols":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks._task":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.tasks.cli":{
  "__set__":true,
  "elements":[
   "robocorp-tasks"
  ]
 },
 "robocorp.vault":{
  "__set__":true,
  "elements":[
   "robocorp-vault"
  ]
 },
 "robocorp.vault._adapters":{
  "__set__":true,
  "elements":[
   "robocorp-vault"
  ]
 },
 "robocorp.vault._errors":{
  "__set__":true,
  "elements":[
   "robocorp-vault"
  ]
 },
 "robocorp.vault._requests":{
  "__set__":true,
  "elements":[
   "robocorp-vault"
  ]
 },
 "robocorp.vault._secrets":{
  "__set__":true,
  "elements":[
   "robocorp-vault"
  ]
 },
 "robocorp.vault._utils":{
  "__set__":true,
  "elements":[
   "robocorp-vault"
  ]
 },
 "robocorp.vault._vault":{
  "__set__":true,
  "elements":[
   "robocorp-vault"
  ]
 },
 "robocorp.workitems":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocorp.workitems._adapters":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocorp.workitems._adapters._base":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocorp.workitems._adapters._file":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocorp.workitems._adapters._robocorp":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocorp.workitems._context":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocorp.workitems._exceptions":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocorp.workitems._requests":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocorp.workitems._types":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocorp.workitems._utils":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocorp.workitems._workitem":{
  "__set__":true,
  "elements":[
   "robocorp-workitems"
  ]
 },
 "robocrys":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys._version":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.adapter":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.cli":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.component":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.condenser":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.fingerprint":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.mineral":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.molecule":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.site":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_component":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_fingerprint":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_mineral":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_molecule":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_site":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.condense.tests.test_structure":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe.adapter":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe.describer":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe.tests":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe.tests.test_adapter":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.describe.tests.test_description":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.featurize":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.featurize.adapter":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.featurize.featurizer":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.tests":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.tests.adapter":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.tests.test_cli":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.tests.test_util":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 },
 "robocrys.util":{
  "__set__":true,
  "elements":[
   "robocrys"
  ]
 }
}