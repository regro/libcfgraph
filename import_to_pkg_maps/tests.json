{
 "Tests":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "Tests.hybrid36":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "Tests.pkacalc_test":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "Tests.runtest":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "tests":{
  "__set__":true,
  "elements":[
   "ablog",
   "acorns",
   "adagio",
   "adversarial-robustness-toolbox",
   "aesara",
   "afwizard",
   "aiida-castep",
   "aiida-core",
   "aiida-gaussian-datatypes",
   "aiida-pseudo",
   "aimsim",
   "aiobotocore",
   "aiocache",
   "aiohttp",
   "aiomcache",
   "aiomysql",
   "airflow",
   "airflow-provider-great-expectations",
   "alive-progress",
   "amset",
   "andes",
   "anyscale",
   "arelle-release",
   "arosics",
   "artificial-adversary",
   "ascii_magic",
   "astroid",
   "atlassian-python-api",
   "atom",
   "autodynatrace",
   "autouri",
   "avalanche-lib",
   "awacs",
   "aws-parallelcluster",
   "awslogs",
   "backstage",
   "bamnostic",
   "bar_chart_race",
   "baycomp",
   "bdsim",
   "benchmark-4dn",
   "bertopic",
   "binary",
   "biom-format",
   "bionc",
   "biothings_client",
   "birch",
   "birdy",
   "blackjax",
   "blimpy",
   "borb",
   "bqplot",
   "brainbox-ibl",
   "btrack",
   "buildver",
   "bulk",
   "burau",
   "cachecontrol",
   "cachy",
   "cadquery",
   "caper",
   "causalml",
   "cbsyst",
   "cellpy",
   "chebfun",
   "chemex",
   "climix",
   "clisops",
   "cloudpathlib",
   "cmip6_preprocessing",
   "cmreshandler",
   "cmyt",
   "codext",
   "compaction",
   "conda-docker",
   "conda-store-server",
   "condorpy",
   "conservedwatersearch",
   "crccheck",
   "crossref_commons_py",
   "crystals",
   "csv-diff",
   "ctrl-benchmark",
   "cyberpandas",
   "cyberpunk-theme",
   "daops",
   "dask-geopandas",
   "dask_groupby",
   "dataframe_image",
   "dbt",
   "dbxfs",
   "dcm2bids",
   "decaylanguage",
   "deepchecks",
   "deepforest",
   "deepgram-sdk",
   "deeptime",
   "dexplot",
   "dice-ml",
   "diffprivlib",
   "disk-objectstore",
   "django-controlcenter",
   "django-filebrowser",
   "django-hosts",
   "django-pwa",
   "django-tinymce",
   "django-versatileimagefield",
   "djangocms-admin-style",
   "dlint",
   "docarray",
   "docker-map",
   "doppel-cli",
   "dphtools",
   "dpu-utils",
   "dtw",
   "dvclive",
   "e3sm_diags",
   "edgedb-python",
   "edgetest",
   "edgetest-conda",
   "edgetest-hub",
   "edgetest-pip-tools",
   "embetter",
   "emperor",
   "enstat",
   "erdantic",
   "esmlab",
   "eventkit",
   "explainerdashboard",
   "extract_model",
   "ezyrb",
   "fair-research-login",
   "fancylog",
   "farmos",
   "fasttsne",
   "felling",
   "ffx",
   "fiona",
   "flake8-simplify",
   "flask-compress",
   "flask-restless",
   "flask-restplus",
   "flask-security-too",
   "flask_simplelogin",
   "flox",
   "focal-stats",
   "foundry_ml",
   "fps",
   "fugue",
   "gemgis",
   "genestboost",
   "geoarray",
   "geofileops",
   "ghost.py",
   "gitflow",
   "glidertools",
   "globus-cli",
   "globus-compute-endpoint",
   "globus-sdk",
   "glymur",
   "goes2go",
   "google-cloud-appengine-logging",
   "google-cloud-bigquery",
   "google-cloud-monitoring",
   "google-cloud-recommendations-ai",
   "google-cloud-resource-manager",
   "goosebib",
   "goosehdf5",
   "goosempl",
   "gpflow",
   "gputools",
   "graspy",
   "graypy",
   "grayskull",
   "greedy",
   "gridtest",
   "gruut",
   "gruut-ipa",
   "guidance",
   "gw-sklearn-xarray",
   "hackernote",
   "hcloud",
   "herbie-data",
   "hickle",
   "histogrammar",
   "human-learn",
   "hydra-core",
   "hydrofunctions",
   "hyram",
   "ibm_db",
   "icet",
   "igl",
   "imagedataextractor",
   "implicit",
   "inflect",
   "intake-accumulo",
   "intake-astro",
   "intake-avro",
   "intake-cmip",
   "intake-elasticsearch",
   "intake-esm",
   "intake-geopandas",
   "intake-iris",
   "intake-parquet",
   "intake-spark",
   "intake-xarray",
   "iohexperimenter",
   "ioos_qc",
   "ipychart",
   "ipygany",
   "ipyvue",
   "ipywebrtc",
   "isofit",
   "iteround",
   "jacqq",
   "jaws",
   "jazal",
   "jesth",
   "jhub-client",
   "jigsawpy",
   "json5",
   "jsondate",
   "jupytab",
   "jupytab-server",
   "jupyter-packaging",
   "jupyter_server",
   "jupyter_telemetry",
   "jupyter_to_medium",
   "jupyterlab-git",
   "jupyterlab-pullrequests",
   "jupytext",
   "kbatch",
   "kedro-neptune",
   "keras-radam",
   "kim-convergence",
   "kim-edn",
   "kim-property",
   "kim_edn",
   "kim_property",
   "kinbot",
   "kit4dl",
   "kotsu",
   "kurl",
   "kylinpy",
   "labelme",
   "landlab",
   "larch",
   "lava",
   "lava-dl",
   "lava-dnf",
   "lava-optimization",
   "lifelines",
   "lightwood",
   "litedao",
   "litemark",
   "llama-index",
   "llnl-sina",
   "localtileserver",
   "looker-sdk",
   "lume-model",
   "lux-api",
   "magicgui",
   "magpylib",
   "maml",
   "marinvaders",
   "markdown-it-py",
   "markdownify",
   "markov_draftjs",
   "marquez-python",
   "mastercard-oauth1-signer",
   "matrixprofile",
   "mdv",
   "medcam",
   "megawidget",
   "memo",
   "mesa",
   "mesmerize-core",
   "metocean-api",
   "metocean-stats",
   "metview-python",
   "mf2",
   "micrometa",
   "mikeio",
   "mktestdocs",
   "mlconjug3",
   "mleap",
   "mmsegmentation",
   "model-index",
   "modelbase",
   "modelparameters",
   "mofchecker",
   "mols2grid",
   "molsets",
   "moviepy",
   "movingpandas",
   "mpire",
   "mpl-interactions",
   "mpl_plotter",
   "msal",
   "multiprocessing-logging",
   "muttlib",
   "mvt",
   "mythx-models",
   "n2v",
   "napkin",
   "nappy",
   "nb_cron",
   "nbclassic",
   "nbgitpuller-link",
   "nbsmoke",
   "ncar-jobqueue",
   "neptune-client",
   "neptune-notebooks",
   "neurokit2",
   "neutronics_material_maker",
   "nlptest",
   "notion-client",
   "nr.types",
   "numba_celltree",
   "o365",
   "oauth2",
   "oceans",
   "oddt",
   "ogh",
   "onnx-caffe2",
   "onnxmltools",
   "ooipy",
   "open3spn2",
   "openamundsen",
   "openfisca-france",
   "openmichrom",
   "opensimplex",
   "openskill",
   "optimade",
   "optuna",
   "orbit-ml",
   "orsopy",
   "oscan",
   "osmapi",
   "otwrapy",
   "overpy",
   "pampy",
   "panda3d_viewer",
   "pandera",
   "pandera-core",
   "pandora-geno",
   "panedr",
   "pangeo-forge-recipes",
   "param_persist",
   "parsevasp",
   "pastel",
   "pathy",
   "pcdswidgets",
   "pcmdi_metrics",
   "pdfme",
   "pdpipe",
   "pennylane-qchem",
   "peppy",
   "pfapack",
   "pgraph-python",
   "phasespace",
   "phonenumbers",
   "piecewise-regression",
   "planetary-computer",
   "plantcv",
   "plasmaboundaries",
   "plateau",
   "platformio",
   "plonk",
   "plotext",
   "plottable",
   "plum-dispatch",
   "plurmy",
   "point_cloud_utils",
   "polyfempy",
   "polygon-geohasher",
   "popfinder",
   "portalocker",
   "poster",
   "privy",
   "probed",
   "prolif",
   "propka",
   "psmpy",
   "py-cordex",
   "py-tools-ds",
   "pyale",
   "pyannote.core",
   "pyathena",
   "pybtex",
   "pycircstat",
   "pycroscopy",
   "pycsep",
   "pydeck",
   "pydifact",
   "pydrill",
   "pyessv",
   "pyet",
   "pygeoapi",
   "pygls",
   "pygments",
   "pygml",
   "pygpcca",
   "pygrametl",
   "pykafka",
   "pylama",
   "pylexique",
   "pyls-memestra",
   "pymace",
   "pymagewell",
   "pymapd",
   "pymapvbvd",
   "pymatsolver",
   "pymc-bart",
   "pymc-base",
   "pymonetdb",
   "pymp-pypi",
   "pynlp-lib",
   "pynsee",
   "pyomeca",
   "pyomniscidb",
   "pyoos",
   "pyopenrivercam",
   "pypandoc",
   "pyprocessmacro",
   "pyproject-metadata",
   "pyprojroot",
   "pyproprop",
   "pypythia",
   "pyradios",
   "pyremo",
   "pyrobuf",
   "pyrootutils",
   "pyrsmq",
   "pysentiment2",
   "pystac",
   "pystac-client",
   "pystardb",
   "pysyncrosim",
   "pytermgui",
   "pytest-openfiles",
   "pytest-remotedata",
   "python-barcode",
   "python-benedict",
   "python-docker",
   "python-flair",
   "python-fsutil",
   "python-geotiff",
   "python-gitlab",
   "python-lambda-4dn",
   "python-utils",
   "pythx",
   "pytmc",
   "pyturbo",
   "pyusid",
   "pyvista-xarray",
   "pyxel-sim",
   "qhub",
   "qme",
   "qpd",
   "quacc",
   "quickle",
   "quilt",
   "quilt3",
   "rabpro",
   "radioactivedecay",
   "raven-wps",
   "rdfpy",
   "reacnetgenerator",
   "reciprocalspaceship",
   "recordwhat",
   "redframes",
   "redis-semaphore",
   "redisgraph-py",
   "regressio",
   "remove_dagmc_tags",
   "responsibleai",
   "riccati",
   "rivgraph",
   "rocketpy",
   "rockpool",
   "rse",
   "rtfde",
   "rubicon-ml",
   "sanic",
   "sanic-ext",
   "saws",
   "scikit-lego",
   "scikit-partial",
   "scikit-posthocs",
   "scikit-time",
   "scrapy-contrib-bigexporters",
   "scvelo",
   "sed-plume",
   "seqlike",
   "server-thread",
   "servicestack",
   "setupinit",
   "shakenbreak",
   "shared",
   "sheet2dict",
   "shtab",
   "sigpy",
   "simwrapper",
   "sketchnu",
   "skutil",
   "small-text",
   "smdebug-rulesconfig",
   "snntoolbox",
   "sparkypandy",
   "spatialmath-python",
   "spec2nii",
   "spectate",
   "spectrumdevice",
   "sphinx-js",
   "squidpy",
   "stanza",
   "starfile",
   "stateplane",
   "stitchm",
   "stuf",
   "subrun",
   "suds-jurko",
   "suggestion",
   "sumy",
   "superset",
   "suspect",
   "swagger-django-generator",
   "swot_simulator",
   "technical",
   "tempeh",
   "terrainbento",
   "tesspy",
   "texplain",
   "texthero",
   "textnets",
   "theano-pymc",
   "theseus-ai",
   "threadom",
   "thredds_crawler",
   "tifftools",
   "tinydb",
   "tkf",
   "tkstyle",
   "tkutil",
   "tomlkit",
   "torch-optimizer",
   "tranquilizer",
   "triad",
   "trio-aiohttp",
   "trio-asyncio",
   "trio_asyncio",
   "tsfresh",
   "tsod",
   "typhos",
   "tyssue",
   "ukpopulation",
   "uncertainty-toolbox",
   "unifhy",
   "uranography",
   "verta",
   "viewable",
   "vizlo",
   "waternetworkanalysis",
   "waybackpy",
   "web.py",
   "webdavclient3",
   "weldx",
   "winter-theme",
   "wrighttools",
   "xclim",
   "xcube_geodb",
   "xdmfwrite_h5py",
   "xmip",
   "xopt",
   "xpersist",
   "xplique",
   "xrd_simulator",
   "xsum",
   "xugrid",
   "xymol",
   "xyzservices",
   "yarg",
   "yggdrasil",
   "yodapy",
   "yodatools",
   "yt_astro_analysis",
   "zarr-tools",
   "zfit"
  ]
 },
 "tests.TestCQGI":{
  "__set__":true,
  "elements":[
   "cadquery"
  ]
 },
 "tests.TestCQSelectors":{
  "__set__":true,
  "elements":[
   "cadquery"
  ]
 },
 "tests.TestCadObjects":{
  "__set__":true,
  "elements":[
   "cadquery"
  ]
 },
 "tests.TestCadQuery":{
  "__set__":true,
  "elements":[
   "cadquery"
  ]
 },
 "tests.TestExporters":{
  "__set__":true,
  "elements":[
   "cadquery"
  ]
 },
 "tests.TestImporters":{
  "__set__":true,
  "elements":[
   "cadquery"
  ]
 },
 "tests.TestLogging":{
  "__set__":true,
  "elements":[
   "cadquery"
  ]
 },
 "tests.TestWorkplanes":{
  "__set__":true,
  "elements":[
   "cadquery"
  ]
 },
 "tests._common":{
  "__set__":true,
  "elements":[
   "clisops",
   "daops"
  ]
 },
 "tests._constants":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests._exporter_targets":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests._helpers":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "weldx"
  ]
 },
 "tests._test_core_strings":{
  "__set__":true,
  "elements":[
   "emperor"
  ]
 },
 "tests._test_format_strings":{
  "__set__":true,
  "elements":[
   "emperor"
  ]
 },
 "tests._testutils":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests._util":{
  "__set__":true,
  "elements":[
   "mpl-interactions"
  ]
 },
 "tests._utils":{
  "__set__":true,
  "elements":[
   "btrack"
  ]
 },
 "tests.acceptance":{
  "__set__":true,
  "elements":[
   "aiocache",
   "inquirer",
   "readchar"
  ]
 },
 "tests.acceptance.conftest":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.acceptance.test_base":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.acceptance.test_checkbox":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.acceptance.test_decorators":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.acceptance.test_factory":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.acceptance.test_list":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.acceptance.test_lock":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.acceptance.test_password":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.acceptance.test_plugins":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.acceptance.test_pre_answers":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.acceptance.test_serializers":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.acceptance.test_shortcuts":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.acceptance.test_text":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.access_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.actions":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.actions.conftest":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.actions.test_core_actions":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.actions.test_store_metric_action":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.actions.test_validation_operators":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.actions.test_validation_operators_in_data_context":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.admin":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.agent":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.agent.openai":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.agent.openai.test_openai_agent":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.agent.react":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.agent.react.test_react_agent":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.agent.react.test_react_output_parser":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.aggregate_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.aiotest":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.conftest":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_add_reader":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_callback":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_coroutine":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_network":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_thread":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_timer":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.alf":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.alf.test_alf_io":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.all_sets_nightly_model_vs_model":{
  "__set__":true,
  "elements":[
   "e3sm_diags"
  ]
 },
 "tests.all_sets_nightly_model_vs_obs":{
  "__set__":true,
  "elements":[
   "e3sm_diags"
  ]
 },
 "tests.all_tests":{
  "__set__":true,
  "elements":[
   "emperor"
  ]
 },
 "tests.als_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.animations":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.animations.test_bars":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.animations.test_spinners":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.animations.test_utils":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.api":{
  "__set__":true,
  "elements":[
   "airflow",
   "ocsmesh"
  ]
 },
 "tests.api.client":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.api.client.local_client":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.api.common":{
  "__set__":true,
  "elements":[
   "airflow",
   "ocsmesh"
  ]
 },
 "tests.api.common.mark_tasks":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.api.driver":{
  "__set__":true,
  "elements":[
   "ocsmesh"
  ]
 },
 "tests.api.features":{
  "__set__":true,
  "elements":[
   "ocsmesh"
  ]
 },
 "tests.api.geom":{
  "__set__":true,
  "elements":[
   "ocsmesh"
  ]
 },
 "tests.api.hfun":{
  "__set__":true,
  "elements":[
   "ocsmesh"
  ]
 },
 "tests.api.mesh":{
  "__set__":true,
  "elements":[
   "ocsmesh"
  ]
 },
 "tests.api.raster":{
  "__set__":true,
  "elements":[
   "ocsmesh"
  ]
 },
 "tests.api.utils":{
  "__set__":true,
  "elements":[
   "ocsmesh"
  ]
 },
 "tests.api_utils":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.api_utils.conftest":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.api_utils.test_job_logs_util":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.api_utils.test_job_util":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.api_utils.test_logs_util":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.app":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.approximate_als_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.apps":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.bowsr":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.bowsr.test_acquisition":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.bowsr.test_bowsr_preprocessing":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.bowsr.test_optimizer":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.bowsr.test_perturbation":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.bowsr.test_target_space":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.gbe":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.gbe.test_describer":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.gbe.test_utils":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.pes":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.pes.test_calcs":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.pes.test_gap":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.pes.test_mtp":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.pes.test_nnp":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.pes.test_snap":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.symbolic":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.symbolic.test_feature_generator":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.symbolic.test_selectors":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.apps.symbolic.test_sis":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.args":{
  "__set__":true,
  "elements":[
   "metview-python"
  ]
 },
 "tests.asdf_tests":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.asdf_tests.test_asdf_aws_schema":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.asdf_tests.test_asdf_core":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.asdf_tests.test_asdf_gmaw_process":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.asdf_tests.test_asdf_groove":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.asdf_tests.test_asdf_time":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.asdf_tests.test_asdf_types":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.asdf_tests.test_asdf_validators":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.asyncmock":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.asyoutypetest":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.attacks":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.conftest":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.conftest":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_adversarial_asr":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_adversarial_texture_pytorch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_auto_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_auto_conjugate_gradient":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_auto_projected_gradient_descent":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_boundary":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_brendel_and_bethge":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_dpatch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_dpatch_robust":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_fast_gradient":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_feature_adversaries":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_frame_saliency":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_geometric_decision_based_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_imperceptible_asr":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_imperceptible_asr_pytorch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_laser_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_lowprofool":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_momentum_iterative_method":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_over_the_air":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_pe_malware_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_shadow_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_sign_opt":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_square_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_baseline":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_black_box":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_meminf_based":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_true_label_baseline":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_white_box_decision_tree":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_white_box_lifestyle_decision_tree":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference.test_black_box":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference.test_black_box_rule_based":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference.test_label_only_boundary_distance":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference.test_label_only_gap_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference.test_shadow_models":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.model_inversion":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.model_inversion.test_mi_face":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.test_attribute_inference":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.test_membership_inference":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.test_model_inversion":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.test_reconstruction":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_audio_perturbations":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_backdoor_attack_dgm_red":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_backdoor_attack_dgm_trail":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_bullseye_polytope_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_clean_label_backdoor_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_gradient_matching_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_hidden_trigger_backdoor":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_image_perturbations":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_sleeper_agent_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_adversarial_embedding":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_adversarial_patch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_backdoor_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_carlini":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_copycat_cnn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_decision_tree_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_deepfool":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_elastic_net":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_feature_collision":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_functionally_equivalent_extraction":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_graphite":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_hclu":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_hop_skip_jump":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_input_filter":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_iterative_method":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_knockoff_nets":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_newtonfool":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_pixel_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_poisoning_attack_svm":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_projected_gradient_descent":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_saliency_map":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_shapeshifter":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_simba":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_spatial_transformation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_targeted_universal_perturbation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_threshold_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_universal_perturbation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_virtual_adversarial":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_wasserstein":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_zoo":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.utils":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attributions":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_callable":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_common":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_deconvnet":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_forgrad":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_grad_cam":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_grad_cam_pp":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_gradient_input":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_guided_backprop":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_hsic":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_integrated_gradients":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_kernel_shap":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_lime":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_object_detector":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_occlusion":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_rise":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_saliency":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_smoothgrad":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_sobol":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_tabular_data":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.audio_test":{
  "__set__":true,
  "elements":[
   "pynlp-lib"
  ]
 },
 "tests.auth":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.auth.test_login":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.auth.test_security":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.authcode":{
  "__set__":true,
  "elements":[
   "msal"
  ]
 },
 "tests.avro":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.data_gen":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.mock_registry":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.mock_schema_registry_client":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.test_avro_producer":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.test_cached_client":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.test_message_serializer":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.test_mock_client":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.test_util":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.backend":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.conftest":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.test_generators":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.test_handlers":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.test_operators":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.topology":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.topology.abc_test_topology":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.topology.conftest":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.topology.test_pyramid":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.topology.test_random":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.topology.test_ring":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.topology.test_star":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend.topology.test_von_neumann":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.backend_test":{
  "__set__":true,
  "elements":[
   "llnl-sina",
   "pybtex"
  ]
 },
 "tests.backends":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "pymc-base"
  ]
 },
 "tests.backends.aiida_django":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.conftest":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0037_attributes_extras_settings_json":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0038_data_migration_legacy_job_calculations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0040_data_migration_legacy_process_attributes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0041_seal_unsealed_processes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0043_default_link_label":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0044_dbgroup_type_string":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_common":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_many":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.test_generic":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.conftest":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_generic":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_migrations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_nodes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_query":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_schema":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_session":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.fixtures":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.backends.test_arviz":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.backends.test_base":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.backends.test_mcbackend":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.backends.test_ndarray":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.bad_steps_app":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.bad_steps_app.features.steps":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.bad_steps_app_2":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.bad_steps_app_2.features":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.bad_steps_app_2.features.steps":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.base":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "deeptime",
   "django-hosts",
   "grayskull",
   "maml",
   "scikit-time",
   "wrighttools"
  ]
 },
 "tests.base.test_base_interface":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_base_recipe":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_base_utils":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_cached_property":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_capi":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_dl_utils":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_extra":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_factory":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_feature_batch":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.base.test_github":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_immutale_data":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_model":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.base.test_pickling":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.base.test_pkg_info":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_recipe_item":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_sections":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_sklearn_compat":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.base.test_track_packages":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base_class":{
  "__set__":true,
  "elements":[
   "overpy"
  ]
 },
 "tests.base_client_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.base_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.bases":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.bases.test_deployable_entity":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.bases.test_paginated_iterable":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.basic_no_subbasin_stats":{
  "__set__":true,
  "elements":[
   "rabpro"
  ]
 },
 "tests.basic_stages":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_app_context_enricher":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_col_drop":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_col_dtype_enforcer":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_col_rename":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_col_reorder":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_condition_validator":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_drop_duplicates":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_dropna":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_freq_drop":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_row_drop":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_schematize":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_set_index":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_val_drop":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_val_keep":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basis":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.basis.test_base":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.basis.test_monomials":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.behaviors":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.behaviors.test_sheet_events":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.bench_uuid":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.benchmark":{
  "__set__":true,
  "elements":[
   "crccheck",
   "qpd"
  ]
 },
 "tests.benchmark.test_pandas":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.benchmark_opensimplex":{
  "__set__":true,
  "elements":[
   "opensimplex"
  ]
 },
 "tests.benchmarks":{
  "__set__":true,
  "elements":[
   "avalanche-lib",
   "histolab"
  ]
 },
 "tests.benchmarks.scenarios":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.scenarios.test_classification_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.scenarios.test_generic_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.scenarios.test_online_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.scenarios.test_rl_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.scenarios.test_scenarios_typechecks":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.test_avalanche_dataset":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.test_benchmarks":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.benchmarks.test_data_attribute":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.test_flat_data":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.test_replay_loader":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.bending":{
  "__set__":true,
  "elements":[
   "polyfempy"
  ]
 },
 "tests.bfgs":{
  "__set__":true,
  "elements":[
   "kinbot"
  ]
 },
 "tests.bibtex_parser_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.binary_serialization_test":{
  "__set__":true,
  "elements":[
   "bqplot",
   "ipywebrtc"
  ]
 },
 "tests.bindings":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.geojson_layer":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.geojson_layer_with_gmaps":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.hexagon_layer_function":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.minimal":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.multilayers":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.scatterplot":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.stacked":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.test_deck":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.test_layer":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.boosted_model_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.boto_tests":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.boto_tests.helpers":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.boto_tests.test_credentials":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.boto_tests.test_signers":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.boto_tests.test_utils":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.bpr_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.brainbox":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.brainbox.test_behavior":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.brainbox.test_core":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.brainbox.test_processing":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.broken_module":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.browser":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.browser.image_diff":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.browser.screenshot_utils":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.browser.test_examples":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.browser.test_html_renderer":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bst_parser_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.bst_parser_test.apacite":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.bst_parser_test.bst_parser_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.bst_parser_test.jurabib":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.bst_parser_test.plain":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.ca":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.ca.cts_model":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.ca.grain_hill":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.ca.lattice_grain":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.ca.test_celllab_cts":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.ca.test_user_guide_example":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.cache":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.cache_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.caffe2_ref_test":{
  "__set__":true,
  "elements":[
   "onnx-caffe2"
  ]
 },
 "tests.calculators":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.calculators.vasp":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.calculators.vasp.test_smartvasp":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.callbacks":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.callbacks.test_llama_debug":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.callbacks.test_token_counter":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.callbacks_app":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.callbacks_app.features":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.callbacks_app.features.steps":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.capabilities_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.carriertest":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.case_0_":{
  "__set__":true,
  "elements":[
   "jigsawpy"
  ]
 },
 "tests.case_1_":{
  "__set__":true,
  "elements":[
   "jigsawpy"
  ]
 },
 "tests.case_2_":{
  "__set__":true,
  "elements":[
   "jigsawpy"
  ]
 },
 "tests.case_3_":{
  "__set__":true,
  "elements":[
   "jigsawpy"
  ]
 },
 "tests.case_4_":{
  "__set__":true,
  "elements":[
   "jigsawpy"
  ]
 },
 "tests.case_5_":{
  "__set__":true,
  "elements":[
   "jigsawpy"
  ]
 },
 "tests.case_6_":{
  "__set__":true,
  "elements":[
   "jigsawpy"
  ]
 },
 "tests.case_7_":{
  "__set__":true,
  "elements":[
   "jigsawpy"
  ]
 },
 "tests.case_8_":{
  "__set__":true,
  "elements":[
   "jigsawpy"
  ]
 },
 "tests.cases":{
  "__set__":true,
  "elements":[
   "arosics"
  ]
 },
 "tests.cass_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.causal":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.causal.conftest":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.causal.test_causal_constants":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.causal.test_causal_different_data_types":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.causal.test_causal_general":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.causal.test_causal_manager":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.causal.test_causal_result":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.causal.test_causal_result_versioning":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.causal_estimators":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.base":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.mock_external_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.test_causalml_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.test_econml_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.test_generalized_linear_model_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.test_instrumental_variable_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.test_linear_regression_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.test_propensity_score_matching_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.test_propensity_score_stratification_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.test_propensity_score_weighting_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.test_regression_discontinuity_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_estimators.test_two_stage_regression_estimator":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_identifiers":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_identifiers.base":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_identifiers.example_graphs":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_identifiers.test_backdoor_identifier":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_identifiers.test_id_identifier":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_identifiers.test_optimize_backdoor":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_manager_validator":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.causal_refuters":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_refuters.base":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_refuters.test_add_unobserved_common_cause":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_refuters.test_bootstrap_refuter":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_refuters.test_data_subset_refuter":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_refuters.test_dummy_outcome_refuter":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.causal_refuters.test_placebo_refuter":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.celery_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.changeset_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.chart":{
  "__set__":true,
  "elements":[
   "ipychart"
  ]
 },
 "tests.chart.test_init":{
  "__set__":true,
  "elements":[
   "ipychart"
  ]
 },
 "tests.chart.test_properties":{
  "__set__":true,
  "elements":[
   "ipychart"
  ]
 },
 "tests.chart.test_style":{
  "__set__":true,
  "elements":[
   "ipychart"
  ]
 },
 "tests.chat_engine":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.chat_engine.test_condense_question":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.chat_engine.test_simple":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.check_examples":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.check_vals":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.checks":{
  "__set__":true,
  "elements":[
   "deepchecks",
   "pymc-base"
  ]
 },
 "tests.checks.distribution":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.checks.distribution.train_test_feature_drift_test":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.checks.distribution.train_test_label_drift_test":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.checks.distribution.trust_score_comparison_test":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.checks.distribution.whole_dataset_drift_test":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.checks.utils":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.cheese_shop":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.cheese_shop_publish":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.chem":{
  "__set__":true,
  "elements":[
   "biothings_client"
  ]
 },
 "tests.cheminfo":{
  "__set__":true,
  "elements":[
   "kinbot"
  ]
 },
 "tests.ci_checks":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.ci_checks.test_bitbucket":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.ci_checks.test_checker":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.ci_checks.test_circle":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.ci_checks.test_frigg":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.ci_checks.test_gitlab":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.ci_checks.test_jenkins":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.ci_checks.test_semaphore":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.ci_checks.test_travis":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.classes":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classes.test_cls_dict":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classes.test_cls_function":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classes.test_literal_meta":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classes.test_something":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classes.test_subscribtable_type":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classifiersFrameworks":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.classifiersFrameworks.test_keras":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.classifiersFrameworks.test_tensorflow":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.classifiersFrameworks.utils":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.clean_test_accounts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.cli":{
  "__set__":true,
  "elements":[
   "aiida-pseudo",
   "conda-auth",
   "grayskull",
   "great-expectations",
   "kit4dl",
   "llnl-sina"
  ]
 },
 "tests.cli.diff_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.cli.driver_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.cli.params":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.params.test_types":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.tap":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_app":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.cli.test_cli":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_cli_cmds":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.cli.test_cli_recipes":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.cli.test_datasource_pandas":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_datasource_sqlite":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_docs":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_family":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.test_group":{
  "__set__":true,
  "elements":[
   "conda-auth"
  ]
 },
 "tests.cli.test_init":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_init_missing_libraries":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_init_pandas":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_init_sqlite":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_install":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.test_list":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.test_login":{
  "__set__":true,
  "elements":[
   "conda-auth"
  ]
 },
 "tests.cli.test_logout":{
  "__set__":true,
  "elements":[
   "conda-auth"
  ]
 },
 "tests.cli.test_parser":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.cli.test_project":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_root":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.test_stdout":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.cli.test_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_suite":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_taps_pandas":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.test_validation_operator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.utils":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.client":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.cluster":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.cluster.conftest":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.cluster.test_cluster":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.cluster.test_cluster_insight":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.cluster.test_clustering_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.clustering":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.clustering.test_box_discretization":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.clustering.test_clustering":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.clustering.test_kmeans":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.clustering.test_mini_batch_kmeans":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.clustering.test_regspace":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.clustering.util":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.cmdline":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_calcjob":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_code":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_comment":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_computer":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_config":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_daemon":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_data":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_database":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_export":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_graph":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_group":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_group_ls":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_help":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_import":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_process":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_profile":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_rehash":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_restapi":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_run":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_setup":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_status":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_user":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_verdi":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.options":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.options.test_conditional":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.options.test_interactive":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_calculation":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_code":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_computer":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_data":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_group":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_identifier":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_path":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_plugin":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.utils.test_common":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.utils.test_daemon":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.utils.test_multiline":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.codeutils":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.codeutils.test_code_range":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.codeutils.test_identifiersplitting":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.collections":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.collections.test_dict":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.collections.test_fs":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.collections.test_function_wrapper":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.collections.test_schema":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.collectors":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_awc_rest":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_collector":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_coops_sos":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_hads":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_ndbc_sos":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_nerrs":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_usgs":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_wqp":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.colorgrids":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.column_aggregate_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_aggregate_expectations.test_column_aggregate_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_aggregate_expectations_distributional":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_aggregate_expectations_distributional.test_pandas_dataset_distributional_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_map_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_map_expectations.test_column_map_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_pair_map_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_pair_map_expectations.test_column_pair_map_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.combine_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.commands":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_account_org_team":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_boards":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_check":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_ci":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_init":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_lib":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_lib_complex":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_platform":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_settings":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_test":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands.test_update":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.commands_test":{
  "__set__":true,
  "elements":[
   "aiomcache"
  ]
 },
 "tests.common":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "birdy",
   "mvt",
   "nappy",
   "pythx",
   "raven-wps"
  ]
 },
 "tests.common.test_escaping":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_extendeddicts":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_folders":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_hashing":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_indicators":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.common.test_lang":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_links":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_logging":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_serialize":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_timezone":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common_utils":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.commons":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.commons.test_data_conversion":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.commons.test_model_override":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.commons.test_operators":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.communication":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.filters":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.filters.test_FilterBase":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_AsciiFileComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_AsciiTableComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_BufferComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_CommBase":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_FileComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_ForkComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_IPCComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_MPIComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_PandasFileComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_RESTComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_RMQAsyncComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_RMQComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_ServerComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_ValueComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_ZMQComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.transforms":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.transforms.test_TransformBase":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.compare":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.compat":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.compile":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.function":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.function.test_function":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.function.test_pfunc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.function.test_types":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_builders":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_debugmode":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_function":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_function_module":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_function_name":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_misc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_mode":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_modes":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_monitormode":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_nanguardmode":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_ops":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_pfunc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_profiling":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_shared":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compiler":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.LLL":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.LLL.test_compile_lll":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.LLL.test_optimize_lll":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.LLL.test_repeat":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.LLL.test_with":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.ir":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.ir.test_compile_ir":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.ir.test_optimize_ir":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.ir.test_repeat":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.ir.test_with":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_bytecode_runtime":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_calldatacopy":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_clamps":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_compile_code":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_opcodes":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_pre_parser":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_sha3_32":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_source_map":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.complete_run":{
  "__set__":true,
  "elements":[
   "e3sm_diags"
  ]
 },
 "tests.components":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.components.chi_index":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.chi_index.test_chi_finder":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.depth_dependent_diffusion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.depth_dependent_diffusion.test_depth_dependent_diffuser":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.depth_dependent_taylor_soil_creep":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.depth_dependent_taylor_soil_creep.test_depth_dependent_taylor_diffuser":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.diffusion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.diffusion.test_sniff_diffusion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.dimensionless_discharge":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.dimensionless_discharge.test_dimensionless_discharge":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.drainage_density":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.drainage_density.test_drainage_density":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flexure":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flexure.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flexure.test_api":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flexure.test_flexure":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flexure.test_flexure_1d":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum.test_flow_accums":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum.test_flow_accumulator":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum.test_flow_routing":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum.test_lossy_flow_accumulator":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_director":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_director.test_dinf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_director.test_flow_director":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_director.test_mfd":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_router.ext.single_flow.priority_routing.test_breach_c":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.fracture_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.fracture_grid.test_fracture_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.hack_calculator":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.hack_calculator.test_hack":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.landslides":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.landslides.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.landslides.test_landslide_probability":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_abrasion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_active_layer_methods":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_filo":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_init":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_parcel_leaves":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_pulse_sediment":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_recycling":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_transport":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.nonlinear_diffusion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.nonlinear_diffusion.test_sniff_nldiff":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.openwater":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.components.openwater.dummy":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.components.overland_flow":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_active_links_at_node":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_bates_overland_flow":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_dealmeida_overland_flow":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_kinwave":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_kinwave_implicit":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_linear_diffusion_overland_flow":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.pet":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.pet.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.pet.test_pet":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.plant_competition_ca":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.plant_competition_ca.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.plant_competition_ca.test_plant_competition_ca":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.potentiality_flowrouting":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.potentiality_flowrouting.test_sniff_pot_fr":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.priority_flood_flow_router":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.priority_flood_flow_router.test_priority_flood_flow_router":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.radiation":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.radiation.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.radiation.test_radiation":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.sink_fill":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.sink_fill.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.sink_fill.test_sink_filler":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.soil_moisture":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.soil_moisture.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.soil_moisture.test_green_ampt_infil":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.soil_moisture.test_soil_moisture":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.spatial_precip":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.spatial_precip.test_spatial_storm_generator":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.steepness_index":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.steepness_index.test_steepness_finder":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_fastscape":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_not_implemented_errors":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_sed_flux_dep":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_simple":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_smooth_thresh":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_sp_driver_discharges":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_sp_driver_widths":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_sp_storms":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_voronoi_sp":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.subsurface":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.components.subsurface.dummy":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.components.surfacelayer":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.components.surfacelayer.dummy":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.components.taylor_nonlinear_hillslope_flux":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.taylor_nonlinear_hillslope_flux.test_taylor_nonlinear_hillslope_flux":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.transport_length_diffusion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.transport_length_diffusion.test_tl_hill_diff":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.vegetation_dynamics":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.vegetation_dynamics.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.vegetation_dynamics.test_vegetation_dynamics":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.weathering":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.weathering.test_exponential_weatherer":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.weathering.test_exponential_weathering_integrated":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.concepts":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.concepts.test_cav":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.concepts.test_tcav":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.cond":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.cond.custom_tests":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.cond.test_cond_example":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.cond.test_cond_unit_tests":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.conda_env":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.installers":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.installers.test_pip":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.specs":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.specs.test_base":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.specs.test_binstar":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.specs.test_requirements":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.specs.test_yaml_file":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.test_cli":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.test_create":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.test_env":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.test_pip_util":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.conda_env.utils":{
  "__set__":true,
  "elements":[
   "conda"
  ]
 },
 "tests.config":{
  "__set__":true,
  "elements":[
   "atsim-potentials",
   "servicestack",
   "tyssue",
   "xyzspaces"
  ]
 },
 "tests.config._common":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_config":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.config.test_config_potential_form_builder":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_config_potential_form_registry":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_configparser":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_configuration_eam":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_configuration_eam_fs":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_configuration_pair":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_define_potential_form_instances":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_json_parser":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.config.test_modifiers":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_potable":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_pymath_functions":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.config.test_spline_modifier":{
  "__set__":true,
  "elements":[
   "atsim-potentials"
  ]
 },
 "tests.configuration":{
  "__set__":true,
  "elements":[
   "airflow",
   "spectrumdevice"
  ]
 },
 "tests.conftest":{
  "__set__":true,
  "elements":[
   "ablog",
   "afwizard",
   "aiida-castep",
   "aiida-core",
   "aiida-gaussian-datatypes",
   "aiida-pseudo",
   "aiobotocore",
   "aiohttp",
   "aiomcache",
   "aiomysql",
   "alive-progress",
   "amset",
   "anyscale",
   "autouri",
   "bertopic",
   "bqplot",
   "btrack",
   "cachecontrol",
   "caper",
   "causalml",
   "climix",
   "clisops",
   "cloudpathlib",
   "cmip6_preprocessing",
   "cmyt",
   "conda-docker",
   "daops",
   "deepchecks",
   "deepforest",
   "deepgram-sdk",
   "deeptime",
   "dice-ml",
   "disk-objectstore",
   "docarray",
   "dvclive",
   "edgetest",
   "esmlab",
   "explainerdashboard",
   "farmos",
   "fiona",
   "flask-security-too",
   "flask_simplelogin",
   "fps",
   "genestboost",
   "globus-compute-endpoint",
   "grayskull",
   "histogrammar",
   "human-learn",
   "icet",
   "intake-esm",
   "intake-xarray",
   "ipywebrtc",
   "jhub-client",
   "jupyter-packaging",
   "jupyter_server",
   "kedro-neptune",
   "kylinpy",
   "landlab",
   "lifelines",
   "llama-index",
   "localtileserver",
   "looker-sdk",
   "lume-model",
   "lux-api",
   "magicgui",
   "memo",
   "mikeio",
   "mktestdocs",
   "modelbase",
   "mofchecker",
   "mvt",
   "nappy",
   "nbclassic",
   "nbsmoke",
   "notion-client",
   "open3spn2",
   "openamundsen",
   "optimade",
   "orbit-ml",
   "osmapi",
   "pandera",
   "pandera-core",
   "pandora-geno",
   "pangeo-forge-recipes",
   "pastel",
   "pathy",
   "pcdswidgets",
   "pdpipe",
   "pennylane-qchem",
   "peppy",
   "phasespace",
   "plantcv",
   "plateau",
   "platformio",
   "plottable",
   "portalocker",
   "prolif",
   "pyathena",
   "pydeck",
   "pydrill",
   "pygls",
   "pygpcca",
   "pykafka",
   "pymagewell",
   "pymapd",
   "pymc-base",
   "pyomniscidb",
   "pyopenrivercam",
   "pyproject-metadata",
   "pyproprop",
   "pyrobuf",
   "pyrootutils",
   "pytest-remotedata",
   "python-flair",
   "pytmc",
   "pyvista-xarray",
   "pyxel-sim",
   "quilt",
   "quilt3",
   "raven-wps",
   "reciprocalspaceship",
   "responsibleai",
   "rocketpy",
   "sanic",
   "sanic-ext",
   "scikit-lego",
   "scvelo",
   "server-thread",
   "sheet2dict",
   "snntoolbox",
   "sparkypandy",
   "sphinx-js",
   "squidpy",
   "suds-jurko",
   "technical",
   "tempeh",
   "terrainbento",
   "textnets",
   "tinydb",
   "tomlkit",
   "torch-optimizer",
   "trio-aiohttp",
   "trio-asyncio",
   "trio_asyncio",
   "typhos",
   "verta",
   "weldx",
   "xclim",
   "xmip",
   "yggdrasil",
   "zfit"
  ]
 },
 "tests.conn_args_test":{
  "__set__":true,
  "elements":[
   "aiomcache"
  ]
 },
 "tests.const":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.constants":{
  "__set__":true,
  "elements":[
   "starfile",
   "verta"
  ]
 },
 "tests.context":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.contrib":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.aws_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.bigquery_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.emr_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.gcp_dataflow_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.spark_submit_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.test_ftp_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.test_jira_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.dataflow_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.ecs_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.emr_add_steps_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.emr_create_job_flow_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.emr_terminate_job_flow_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.fs_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.hipchat_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.jira_operator_test":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.spark_submit_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.ssh_execute_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.datadog_sensor":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.emr_base_sensor":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.emr_job_flow_sensor":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.emr_step_sensor":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.hdfs_sensors":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.jira_sensor_test":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.controllers":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_auth_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_base_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_cloud_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_cloud_functional_verification_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_cluster_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_cluster_env_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_compute_config_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_config_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_job_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_list_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_logs_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_machine_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_project_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_schedule_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.controllers.test_service_controller":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.conversion":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.conversion_test":{
  "__set__":true,
  "elements":[
   "onnx-caffe2"
  ]
 },
 "tests.convolve":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_convolve":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_convolve_sep":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_convolve_spatial":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_convolve_spatial_rl":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_gaussian":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_generic_separable_filters":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_median":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_strides":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.core":{
  "__set__":true,
  "elements":[
   "airflow",
   "alive-progress",
   "amset",
   "clisops",
   "gputools",
   "great-expectations",
   "landlab",
   "modelbase",
   "pandera",
   "pandera-core",
   "pdpipe",
   "pycroscopy",
   "python-benedict",
   "scvelo",
   "smdebug-rulesconfig",
   "theseus-ai",
   "tyssue",
   "xcube_geodb"
  ]
 },
 "tests.core.actions":{
  "__set__":true,
  "elements":[
   "smdebug-rulesconfig"
  ]
 },
 "tests.core.actions.test_actions":{
  "__set__":true,
  "elements":[
   "smdebug-rulesconfig"
  ]
 },
 "tests.core.actions.utils":{
  "__set__":true,
  "elements":[
   "smdebug-rulesconfig"
  ]
 },
 "tests.core.algebraic":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.algebraic.test_algebraic_mixin":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.algebraic.test_derived_compounds":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.algebraic.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.algebraic.test_sort_module":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.algebraic.test_update_algebraic_module":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.checks_fixtures":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.common":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.compounds":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.compounds.test_compound_mixin":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.compounds.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.conftest":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.functions":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.functions.test_functions":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.functions.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.io":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_dtype_utils":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_hdf_utils":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_io_utils":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_numpy_translator":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_pycro_dataset":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_write_utils":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.parameters":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.parameters.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.parameters.test_parameter_mixin":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.rate":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.rate.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.rate.test_rate_mixin":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.rate.test_update_rate":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.test_adhoc_stage":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.core.test_anndata":{
  "__set__":true,
  "elements":[
   "scvelo"
  ]
 },
 "tests.core.test_app_context":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.core.test_arithmetic":{
  "__set__":true,
  "elements":[
   "scvelo"
  ]
 },
 "tests.core.test_base":{
  "__set__":true,
  "elements":[
   "scvelo"
  ]
 },
 "tests.core.test_base_model":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.test_calibration":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.core.test_checks":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_checks_builtin":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_clean":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_clone":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_columns_based_pipeline_stage":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.core.test_configuration":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.core.test_cost_function":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_cost_weight":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_decorators":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_deprecations":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_docs_setting_column_widths":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_dtypes":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_dump":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_engine":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_engine_utils":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_errors":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_evaluation_parameters":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_example_data":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.core.test_expectation_configuration":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_expectation_kwargs":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_expectation_suite":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_expectation_suite_crud_methods":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_extension_modules":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_extensions":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_filter":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_find":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_flatten":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_generation":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.core.test_geodb":{
  "__set__":true,
  "elements":[
   "xcube_geodb"
  ]
 },
 "tests.core.test_geodb_group_functions":{
  "__set__":true,
  "elements":[
   "xcube_geodb"
  ]
 },
 "tests.core.test_groupby":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_hook_manager":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.core.test_ids":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.test_invert":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_items_sorted":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_keylists":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_keypaths":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_linear_models":{
  "__set__":true,
  "elements":[
   "scvelo"
  ]
 },
 "tests.core.test_load_params":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.core.test_logging_hook":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.core.test_manifold":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_match":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_merge":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_message":{
  "__set__":true,
  "elements":[
   "xcube_geodb"
  ]
 },
 "tests.core.test_messager":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.core.test_metrics":{
  "__set__":true,
  "elements":[
   "scvelo"
  ]
 },
 "tests.core.test_model":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_model_components":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_models":{
  "__set__":true,
  "elements":[
   "scvelo"
  ]
 },
 "tests.core.test_monolayer":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.core.test_move":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_multisheet":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.core.test_nest":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_numpy_engine":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_objective":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_objects":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.core.test_ocldevice":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.core.test_ocltypes":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.core.test_pandas_accessor":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_pandas_engine":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_pipeline":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.core.test_pipeline_stage":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.core.test_progress":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.core.test_pydantic":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_remove":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_rename":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_resample":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.core.test_robust_cost":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_run":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.core.test_schema_components":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_schema_inference":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_schema_statistics":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_schemas":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_search":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_serialization":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_standardize":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_static_type_checking":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_stoichiometric_mixin":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.test_subset":{
  "__set__":true,
  "elements":[
   "clisops",
   "python-benedict"
  ]
 },
 "tests.core.test_swap":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_theseus_function":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_timing":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.core.test_traverse":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_typing":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.core.test_unflatten":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_unique":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.core.test_utils":{
  "__set__":true,
  "elements":[
   "alive-progress",
   "modelbase"
  ]
 },
 "tests.core.test_variable":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_vectorizer":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.usage_statistics":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.usage_statistics.test_anonymizer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.usage_statistics.test_schema_validation":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.usage_statistics.test_usage_statistics":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.corpus":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.corpus.test_copy_document_compare_size":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.corpus.test_copy_document_resize_images_compare_size":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.corpus.test_extract_text_expect_ground_truth":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.corpus.test_open_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.corpus.test_open_encrypted_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.counterfactual":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.counterfactual.test_counterfactual_advanced_features":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.counterfactual_manager_validator":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.covariance":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.covariance.test_covar_estimator":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.covariance.test_moments":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.covariance.test_running_moments":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.covariance.test_util":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.cq":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.cq.test_cq_unit_tests":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.create_message":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.create_regression_data":{
  "__set__":true,
  "elements":[
   "mf2"
  ]
 },
 "tests.create_sample_logs":{
  "__set__":true,
  "elements":[
   "felling"
  ]
 },
 "tests.create_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.curl":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.curl.test_curl":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.custodian":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.custodian.test_vasp_custodian":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.custom_modules":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.contexts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.integration":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.integration.test_deploy_custom_modules":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.models":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.test_custom_modules":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.test_utils":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_terminal":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.d3viz":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.d3viz.models":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.d3viz.test_d3viz":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.d3viz.test_formatting":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.dashboard_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.dask":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.dask.test_dask":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.dask.test_dask_accessor":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.dask.test_dask_not_installed":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.data":{
  "__set__":true,
  "elements":[
   "aiida-pseudo",
   "blimpy",
   "deeptime",
   "glymur",
   "maml",
   "pybtex",
   "wrighttools",
   "zfit"
  ]
 },
 "tests.data.bring_to_front":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.chop":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.convert_data":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.created":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_BrunoldrRaman":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_COLORS":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_Cary50":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_JASCO":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_KENT":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_PyCMDS":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_Tensor27":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_ocean_optics":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_shimadzu":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_spcm":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.get_nadir":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.get_zenith":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.join":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.level":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.map_variable":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.pseudo":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_common":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_jthxml":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_pseudo":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_psf":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_psml":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_psp8":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_upf":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_vps":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.remove_channel":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.remove_variable":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.rename_attrs":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.rename_channels":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.rename_variables":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.share_nans":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.smooth":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.split":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.test_bd_chain":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_binneddata":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.data.test_cpp_systems":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_double_well":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_drunkards_walk":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_ellipsoids":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_metropolis1d":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_mp":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.data.test_pbf":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_prinz":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_sqrt_model":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_swissroll":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_unbinneddata":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.data.test_url":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.data.test_util":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.transform":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.unique_names":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data_asset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset_citations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset_internals":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset_util":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_expectation_decorators":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_filedata_asset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_filedata_asset_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_parameter_substitution":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.conftest":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_evaluation_parameter_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_expectations_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_html_site_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_store_backends":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_validations_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_configuration_storage":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_config_errors":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_config_variables":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_on_teams":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_resource_identifiers":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_store_configs":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_types":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_utils":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_generation":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes",
   "tsod"
  ]
 },
 "tests.databalanceanalysis":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.databalanceanalysis.conftest":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.databalanceanalysis.test_aggregate_balance_measures":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.databalanceanalysis.test_data_balance_helper":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.databalanceanalysis.test_data_balance_manager":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.databalanceanalysis.test_distribution_balance_measures":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.databalanceanalysis.test_feature_balance_measures":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.database_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.database_test.data":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.database_test.database_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.dataframe_test":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.dataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_dataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_dataset_legacy":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_dataset_util_legacy":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_pandas_dataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_sparkdfdataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_sqlalchemydataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_util":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasets":{
  "__set__":true,
  "elements":[
   "snntoolbox",
   "squidpy"
  ]
 },
 "tests.datasets.test_dataset":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.datasets.test_download_visium_dataset":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.datasource":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_batch_kwargs_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_glob_reader_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_manual_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_query_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_s3_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_subdir_reader_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_table_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.conftest":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_batch_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_batch_kwargs_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_glob_reader_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_manual_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_query_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_s3_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_subdir_reader_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_table_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_batch_generators":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_batch_kwargs":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_datasource":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_datasource_anonymizer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_datasources":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_pandas_datasource":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_sparkdf_datasource":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_sqlalchemy_datasource":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_sqlalchemy_datasource_workarounds":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_util":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.datastore":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.datastore_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.datatypes":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.datatypes.test_datatypes":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.datatypes.test_uuid":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.db_engine_specs_test":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.dbtests":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.conftest":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.dbtestcalculation":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.fixture":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_calcjob":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_calcjob_mock":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_data_db":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_data_db_migrated":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_dos":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_mock":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_new_fixture":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_parser":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_tools":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.deck":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.deck.test_typechecks":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.decomposition":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.decomposition.test_dmd":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_edmd":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_kcca":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_kedmd":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_koopman_reweighting":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.decomposition.test_kvadnet":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_score":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_tae":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_tica":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.decomposition.test_utils":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_vamp":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.decomposition.test_vampnet":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.deconv":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.deconv.test_deconv_rl":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.decorators":{
  "__set__":true,
  "elements":[
   "theseus-ai",
   "typish"
  ]
 },
 "tests.decorators.test_hintable":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.deencapsulate":{
  "__set__":true,
  "elements":[
   "rtfde"
  ]
 },
 "tests.deencapsulate.test_de_encapsulate":{
  "__set__":true,
  "elements":[
   "rtfde"
  ]
 },
 "tests.defences":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion.subsetscanning":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion.subsetscanning.test_detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion.test_binary_activation_detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion.test_binary_input_detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion.test_detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion.test_subsetscanning_detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_activation_defence":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_clustering_analyzer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_ground_truth_evaluator":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_provenance_defence":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_roni":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_spectral_signature_defense":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_adversarial_trainer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_adversarial_trainer_FBF":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_adversarial_trainer_madry_pgd":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_class_labels":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_defensive_distillation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_feature_squeezing":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_gaussian_augmentation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_gaussian_noise":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_high_confidence":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_label_smoothing":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_neural_cleanse":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_pixel_defend":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_reverse_sigmoid":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_rounded":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_thermometer_encoding":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_variance_minimization":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.trainer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.trainer.test_adversarial_trainer_FBF":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.trainer.test_adversarial_trainer_awp_pytorch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.trainer.test_adversarial_trainer_madry_pgd":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.trainer.test_adversarial_trainer_trades_pytorch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.trainer.test_certified_adversarial_trainer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.trainer.test_dp_instahide_trainer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.transformer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.transformer.poisoning":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.transformer.poisoning.test_strip":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.delete_test_results":{
  "__set__":true,
  "elements":[
   "dataframe_image"
  ]
 },
 "tests.demos":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.demos.test_CiS2021_hackathon":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.demos.test_fspm2020":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.denoise":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.denoise.test_bilateral":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.denoise.test_nlm":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.deployable_entity":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.deployable_entity.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.deployable_entity.test_artifacts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.deployable_entity.test_deployment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.deployment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.deployment.test_build":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.deployment.test_unit_deployedmodel":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.deployments":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.conftest":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_accuracy":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_data_drift":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_deployment":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_list_features":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_model_replacement":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_prediction_results":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_scoring_code_download":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_secondary_dataset_config_replacement":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_service_stats":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_settings":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_submit_actuals":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.describers":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.describers.test_composition":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.describers.test_matminer":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.describers.test_megnet":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.describers.test_rdf":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.describers.test_site":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.describers.test_structure":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.device_factories":{
  "__set__":true,
  "elements":[
   "spectrumdevice"
  ]
 },
 "tests.df":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.df.test_bound_col_poten":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.df.test_df":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.dict_import_export_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.dicts":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.base":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.base.test_base_dict":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_base64":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_csv":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_ini":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_json":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_pickle":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_plist":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_query_string":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_toml":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_xls":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_xml":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_dict_yaml":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_io_util":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.io.test_pickle":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.keylist":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.keylist.test_keylist_dict":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.keylist.test_keylist_util":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.keypath":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.keypath.test_keypath_dict":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.keypath.test_keypath_dict_list_indexes":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.keypath.test_keypath_util":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.parse":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.parse.test_parse_dict":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.parse.test_parse_util":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.test_benedict":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.test_benedict_casting":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dicts.test_benedict_subclass":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.dihedrals":{
  "__set__":true,
  "elements":[
   "kinbot"
  ]
 },
 "tests.dispatcher":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_cache":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_cases":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_dispatcher":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_future_annotations":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_precedence":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_return_type":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.distributed":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.distributed.distributed_test_utils":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.distributed.test_distributed_helper":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.distributions":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_bound":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_censored":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_continuous":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_discrete":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_dist_math":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_distribution":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_mixture":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_multivariate":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_shape_utils":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_simulator":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_timeseries":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_transform":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_truncated":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.util":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.disturb_mem":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.diverse_tests":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.do_sampler":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.do_sampler.test_pandas_do_api":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.doc":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.dom_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.download":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.download.test_pynsee_download":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.download_data":{
  "__set__":true,
  "elements":[
   "e3sm_diags"
  ]
 },
 "tests.download_media":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.draw":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.draw.test_plt":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.draw.test_volume":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.drawntabletesting":{
  "__set__":true,
  "elements":[
   "pygrametl"
  ]
 },
 "tests.drawntabletesting.test_dtt":{
  "__set__":true,
  "elements":[
   "pygrametl"
  ]
 },
 "tests.drawntabletesting.test_dttr":{
  "__set__":true,
  "elements":[
   "pygrametl"
  ]
 },
 "tests.drivers":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_BuildModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_CMakeModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_CModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_CompiledModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_ConnectionDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_Driver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_ExecutableModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_FileInputDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_FileOutputDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_MakeModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_MatlabModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_ModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_RPCRequestDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.druid_func_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.druid_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.dtos":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.dummy_module":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.dummy_module2":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.dynamics":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.dynamics.test_apoptosis_model":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.dynamics.test_bulk_model":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.dynamics.test_effectors":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.dynamics.test_model":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.dynamics.test_sheet_model":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.electronic_structure":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.electronic_structure.test_common":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.electronic_structure.test_symmetry":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.electronic_structure.test_tetrahedron":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.email_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.embedding_test_utils":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.embeddings":{
  "__set__":true,
  "elements":[
   "llama-index",
   "python-flair"
  ]
 },
 "tests.embeddings.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.embeddings.test_byte_pair_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.embeddings.test_document_transform_word_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.embeddings.test_elasticsearch":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.embeddings.test_flair_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.embeddings.test_simple_token_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.embeddings.test_stacked_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.embeddings.test_tfidf_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.embeddings.test_transformer_document_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.embeddings.test_transformer_word_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.embeddings.test_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.embeddings.test_word_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.engine":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.daemon":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.daemon.test_client":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.processes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.processes.text_exit_code":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.processes.workchains":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.processes.workchains.test_restart":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.processes.workchains.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_calc_job":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_calcfunctions":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_class_loader":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_daemon":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_futures":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_launch":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_manager":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_persistence":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_ports":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_process":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_process_builder":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_process_function":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_process_spec":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_rmq":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_run":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_runners":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_transport":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_work_chain":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_workfunctions":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.env_fixtures":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.error_analysis_validator":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.estimators":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_deepz":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_derandomized_smoothing":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_interval":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_macer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_randomized_smoothing":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_smooth_adv":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_smooth_mix":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_vision_transformers":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_GPy":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_blackbox":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_blackbox_existing_predictions":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_catboost":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_classifier":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_deep_partition_ensemble":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_deeplearning_common":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_deeplearning_specific":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_detector_classifier":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_ensemble":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_input_filter":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_jax":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_keras_tf":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_lightgbm":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_mxnet":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_pytorch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_query_efficient_bb":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_scikitlearn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_xgboost":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.conftest":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_object_seeker_faster_rcnn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_object_seeker_yolo":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_pytorch_detection_transformer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_pytorch_faster_rcnn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_pytorch_object_detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_pytorch_yolo":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_tensorflow_faster_rcnn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_tensorflow_v2_faster_rcnn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_tracking":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_tracking.test_pytorch_goturn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.speech_recognition":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.speech_recognition.conftest":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.speech_recognition.test_pytorch_deep_speech":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.speech_recognition.test_pytorch_espresso":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.speech_recognition.test_tensorflow_lingvo":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.evaluation":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.evaluation.test_image_samples":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.evaluation_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.evaluations":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.evaluations.test_security_curve":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.event_logger_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.event_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.example_converters_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.example_wdl":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.examplenumberstest":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.examples":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_SaM":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_ascii_io":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_conditional_io":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_examples":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_gs_lesson4":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_model_error_with_io":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_rpcFib":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_rpc_lesson1":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_rpc_lesson2":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_rpc_lesson2b":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_rpc_lesson3b":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_timed_pipe":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_transforms":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_types":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.types":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.types.types":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.exchange":{
  "__set__":true,
  "elements":[
   "technical"
  ]
 },
 "tests.executors":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.executors.test_executor":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.experimental":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_combined_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_custom_task":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_custom_training_blueprint":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_custom_training_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_idiomatic_project":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_model_package":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_project":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_restore_discarded_features":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_segmentation":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_user_blueprint":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.explainer":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.explainer.test_explainer_manager":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.explainer_manager_validator":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.exten_possessor_tests":{
  "__set__":true,
  "elements":[
   "jazal"
  ]
 },
 "tests.extension":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.conftest":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.app":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mock1":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mock2":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mock3":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mockext_both":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mockext_py":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mockext_sys":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mockext_user":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_app":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_config":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_entrypoint":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_handler":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_manager":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_serverextension":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_utils":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extensions":{
  "__set__":true,
  "elements":[
   "pystac",
   "sanic-ext"
  ]
 },
 "tests.extensions.http":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.http.test_methods":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.injection":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.injection.test_add_dependency":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.injection.test_constants":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.injection.test_dependency":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.injection.test_injection_config":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.injection.test_injection_registry":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.logging":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.logging.test_custom_background_logger":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_autodoc":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_body":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_config":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_decorators":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_definitions":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_deprecated":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_exclude":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_external_docs":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_func_handler":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_model_fields":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_model_spec":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_parameter":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_paths":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_schema":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_security":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_specification":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_summary":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_tag":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.test_typing":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.openapi.utils":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.templating":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.templating.templates":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.templating.test_templating":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.test_commons":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_custom":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_datacube":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_eo":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_extensions":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_file":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_item_assets":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_label":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_pointcloud":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_projection":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_raster":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_sar":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_sat":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_scientific":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_single_file_stac":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_startup":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extensions.test_timestamps":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_version":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_view":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.external":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.axis1":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.axis2":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.jasper":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.public":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.rhq":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.saxenc":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.extlib":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extlib.common":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extlib.test_baspacho":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extlib.test_baspacho_simple":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extlib.test_cusolver_lu_solver":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extlib.test_mat_mult":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extra":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extra.__models__":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extra.test_parse_hint":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extra.test_request_counted":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extra.test_serializer":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extra.test_validation":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extra.test_validation_attrs":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extra.test_validation_dataclass":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extra.test_validation_msgspec":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extra.test_validation_multiple":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.extra.test_validation_pydantic":{
  "__set__":true,
  "elements":[
   "sanic-ext"
  ]
 },
 "tests.factoryboy_app":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.factoryboy_app.features":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.factoryboy_app.features.steps":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.fake_data":{
  "__set__":true,
  "elements":[
   "dbt"
  ]
 },
 "tests.fdv":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.feature_association_matrix":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.feature_association_matrix.test_feature_association_featurelists":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.feature_association_matrix.test_feature_association_matrix":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.feature_association_matrix.test_feature_association_matrix_details":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.features_visualizations":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_losses":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_maco":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_objectives":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_optim":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_preconditionning":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_regularizers":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_transformations":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.fft":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.fft.test_accur":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.fft.test_batched":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.fft.test_fft":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.fft.test_fftshift":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.fft.test_fftspeed":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.field":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.field.test_field_dataset":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.field.test_graph_fields":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.field.test_grouped_fields":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.file":{
  "__set__":true,
  "elements":[
   "pyls-memestra"
  ]
 },
 "tests.files":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.find_motif":{
  "__set__":true,
  "elements":[
   "kinbot"
  ]
 },
 "tests.finetuning":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.finetuning.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.fixtures":{
  "__set__":true,
  "elements":[
   "glymur",
   "histolab",
   "hydrofunctions",
   "kit4dl",
   "kylinpy",
   "pydeck",
   "pypythia",
   "rubicon-ml",
   "superset",
   "tsfresh",
   "vyper"
  ]
 },
 "tests.fixtures.api":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.fixtures.datasource":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.fixtures.memorymock":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.fixtures.pyodbcRow":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.fixtures_daily_dupe":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.fixtures_data":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.fixtures_multiple_methods":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.fixtures_recent_only":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.fixtures_tzfail":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.fixtures_usgs_rdb":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.flag_helper":{
  "__set__":true,
  "elements":[
   "aiomcache"
  ]
 },
 "tests.fly":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.fly.test_fly":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.focal_correlation_timeit":{
  "__set__":true,
  "elements":[
   "focal-stats"
  ]
 },
 "tests.form_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.forms":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.framework":{
  "__set__":true,
  "elements":[
   "globus-cli",
   "globus-sdk"
  ]
 },
 "tests.framework.capturedio_testcase":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.framework.cli_testcase":{
  "__set__":true,
  "elements":[
   "globus-cli"
  ]
 },
 "tests.framework.constants":{
  "__set__":true,
  "elements":[
   "globus-cli",
   "globus-sdk"
  ]
 },
 "tests.framework.patched_testcase":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.framework.tools":{
  "__set__":true,
  "elements":[
   "globus-cli",
   "globus-sdk"
  ]
 },
 "tests.framework.transfer_client_testcase":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.frequencies":{
  "__set__":true,
  "elements":[
   "kinbot"
  ]
 },
 "tests.fromdecay":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.fromdecay.example_decay_chains":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.fromdecay.test_fromdecay":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.fromdecay.test_mass_functions":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.fugue":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.bag":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.bag.test_array_bag":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.collections":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.collections.test_partition":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.collections.test_sql":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.column":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.column.test_expressions":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.column.test_functions":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.column.test_sql":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_array_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_arrow_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_dataframe_iterable_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_dataframes":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_function_wrapper":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_iterable_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_pandas_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.execution":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.execution.test_api":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.execution.test_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.execution.test_factory":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.execution.test_ibis":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.execution.test_naive_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.creator":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.creator.test_convert":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.outputter":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.outputter.test_convert":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.processor":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.processor.test_convert":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.test_utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.transformer":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.transformer.test_convert_cotransformer":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.transformer.test_convert_output_cotransformer":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.transformer.test_convert_output_transformer":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.transformer.test_convert_transformer":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.rpc":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.rpc.test_base":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.rpc.test_flask":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.rpc.test_func":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.sql":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.sql.test_utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.sql.test_visitors":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.sql.test_workflow":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.sql.test_workflow_parse":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.test_interfaceless":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.utils.test_interfaceless":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.utils.test_io":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.utils.test_misc":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow.test_module":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow.test_runtime_exception":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow.test_workflow":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow.test_workflow_determinism":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow.test_workflow_parallel":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask.test_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask.test_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask.test_ibis":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask.test_importless":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask.test_io":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask.test_sql":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_duckdb":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_duckdb.test_dask":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_duckdb.test_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_duckdb.test_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_duckdb.test_ibis":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_duckdb.test_importless":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_duckdb.test_utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ibis":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ibis.mock":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ibis.mock.dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ibis.mock.execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ibis.test_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ibis.test_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ibis.test_extensions":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ibis.test_importless":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ibis.test_utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_notebook":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_polars":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_polars.test_api":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_polars.test_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_polars.test_transform":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ray":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ray.test_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ray.test_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ray.test_registry":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_ray.test_utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.test_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.test_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.test_ibis":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.test_importless":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.test_spark_connect":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.test_sql":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.utils.test_convert":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.utils.test_io":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.utils.test_partition":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql._test_syntax":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.test_syntax":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.test_utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.test_visitors":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.test_workflow":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.test_workflow_parse":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fullexample":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.fullexample.test_binned_vs_unbinned":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.fullexample.test_simple_binned":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.functional":{
  "__set__":true,
  "elements":[
   "aloe",
   "n2v",
   "python-gitlab",
   "redisgraph-py"
  ]
 },
 "tests.functional.api":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_clusters":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_current_user":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_deploy_keys":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_deploy_tokens":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_gitlab":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_groups":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_import_export":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_issues":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_keys":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_merge_requests":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_packages":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_projects":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_releases":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_repository":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_snippets":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_users":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_variables":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli.conftest":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli.test_cli_artifacts":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli.test_cli_packages":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli.test_cli_v4":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli.test_cli_variables":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.conftest":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.ee-test":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.test_all":{
  "__set__":true,
  "elements":[
   "redisgraph-py"
  ]
 },
 "tests.functional.test_callbacks":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.functional.test_factoryboy":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.functional.test_outputter":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.functional.test_prediction2D_RGB":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.functional.test_prediction2D_SEM":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.functional.test_prediction3D":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.functional.test_simple":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.functional.test_step_loading":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.functional.test_symlink_follow":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.functional.test_training2D_RGB":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.functional.test_training2D_RGB_singleNetPerChannel":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.functional.test_training2D_SEM":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.functional.test_training3D":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.functional_tests":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.functional_tests.my_models":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.functional_tests.test_basic_exposure":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.functional_tests.test_observation_custom_mode":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.functional_tests.test_parametric":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.functional_tests.test_yaml":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.functions":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_common_ancestor":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_get_args_and_return_type":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_get_mro":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_get_type":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_get_type_hints_of_callable":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_instance_of":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_is_optional_type":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_is_type_annotation":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_origin_and_alias":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_subclass_of":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.gallery":{
  "__set__":true,
  "elements":[
   "geoalchemy2"
  ]
 },
 "tests.gallery.test_decipher_raster":{
  "__set__":true,
  "elements":[
   "geoalchemy2"
  ]
 },
 "tests.gallery.test_disable_wrapping":{
  "__set__":true,
  "elements":[
   "geoalchemy2"
  ]
 },
 "tests.gallery.test_length_at_insert":{
  "__set__":true,
  "elements":[
   "geoalchemy2"
  ]
 },
 "tests.gallery.test_raster_transform":{
  "__set__":true,
  "elements":[
   "geoalchemy2"
  ]
 },
 "tests.gallery.test_specific_compilation":{
  "__set__":true,
  "elements":[
   "geoalchemy2"
  ]
 },
 "tests.gallery.test_summarystatsagg":{
  "__set__":true,
  "elements":[
   "geoalchemy2"
  ]
 },
 "tests.gallery.test_type_decorator":{
  "__set__":true,
  "elements":[
   "geoalchemy2"
  ]
 },
 "tests.gcm":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.independence_test":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.independence_test.test_kernel":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.independence_test.test_regression":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_anomaly":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_anomaly_attribution":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_anomaly_scorers":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_arrow_strength":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_auto":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_confidence_intervals":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_confidence_intervals_cms":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_density_estimators":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_distribution_change":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_divergence":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_fcms":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_feature":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_graph":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_intrinsic_influence":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_ml":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_shapley":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_stats":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_stochastic_models":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_uncertainty":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_validation":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.test_whatif":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.util":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.util.test_plotting":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gcm.util.test_pygraphviz":{
  "__set__":true,
  "elements":[
   "dowhy"
  ]
 },
 "tests.gene":{
  "__set__":true,
  "elements":[
   "biothings_client"
  ]
 },
 "tests.general_engine_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.generate_null_dataset":{
  "__set__":true,
  "elements":[
   "jacqq"
  ]
 },
 "tests.generate_simulation_data":{
  "__set__":true,
  "elements":[
   "jacqq"
  ]
 },
 "tests.generation":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.generation.test_generation":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.generation.test_shapes":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.generators":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_bax":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_bayesian_exploration":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_bayesian_generator":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_bayesian_options":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_constraints":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_custom_botorch":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_custom_model":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_expected_improvement":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_high_level":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_mggpo":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_mobo":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_model_constructor":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_multi_fidelity":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_time_dependent_bo":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_turbo":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_upper_confidence_bound":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_utils":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.test_extremum_seeking":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.test_generator_options":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.test_neldermead":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.test_random":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.test_rcds":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generic":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.generic.test_wrapper":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.gensim_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.geocodertest":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.geodata":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.geodata.test_pynsee_geodata":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.geometry":{
  "__set__":true,
  "elements":[
   "kinbot",
   "theseus-ai",
   "tyssue"
  ]
 },
 "tests.geometry.common":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.point_types_mypy_check":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_bulkgeometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_cellcell_geometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_geometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_multisheetgeom":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_periodic_geometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_planar_geometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_point_types":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_se2":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_se3":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_sheet_geometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_so2":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_so3":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_vector":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.ghost":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.bindings":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.ext":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.ext.django":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.ext.django.test":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.ghost":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.logger":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.test":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.gitflow":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.gitflow.test_bin":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.gitflow.test_branches":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.gitflow.test_core":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.github":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0011":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0016":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0020":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0025":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0027":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0032":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0034":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0035":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0038":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0039":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0043":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0046":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0048":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0053":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0057":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0059":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0066":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0088":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0089":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0102":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0109":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0110":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0144":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0198":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.github.test_issue_0226":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.gof":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_cc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_cmodule":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_compiledir":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_compute_test_value":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_destroyhandler":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_fg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_graph":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_graph_opt_caching":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_lazy":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_link":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_op":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_optdb":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_params_type":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_sched":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_toolbox":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_types":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_vm":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gp":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.gp.test_cov":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.gp.test_gp":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.gp.test_mean":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.gp.test_util":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.gpflow":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals.test_broadcasted_conditionals":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals.test_conditionals":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals.test_multioutput":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals.test_uncertain_conditional":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals.test_util":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.config":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.config.test_config":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conftest":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.covariances":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.covariances.test_base_covariances":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.covariances.test_multioutput":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.expectations":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.expectations.test_expectations":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_argument_ref":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_check_shapes":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_errors":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_inheritance":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_integration":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_parser":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_specs":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.utils":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.test_utils":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.reference":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_broadcasting":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_changepoints":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_coregion":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_kernels":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_positive_semidefinite":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_scaled_euclid_dist":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_gaussian":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_heteroskedastic":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_heteroskedastic_constant_variance":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_likelihoods":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_multiclass":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_switched_likelihood":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_cglb":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_gplvm":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_gpr":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_gpr_posterior":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_mcmc":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_methods":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_model_predict":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_sgpr":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_sgpr_posterior":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_svgp":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_svgp_posterior":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_training_mixins":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_variational":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_vgp":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_vgp_posterior":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.optimizers":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.optimizers.test_mcmc":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.optimizers.test_natural_gradient":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.optimizers.test_scipy":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.posteriors":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.posteriors.conftest":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.posteriors.test_bo_integration":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.posteriors.test_posteriors":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_base":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_base_prior":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_base_training":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_inducing_variables":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_kullback_leiblers":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_logdensities":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_mean_functions":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_monitor":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_bijectors":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_deepcopy":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_misc":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_model_utils":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_multipledispatch":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_ops":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_set_trainable":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_training_loop":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_traversal":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_utilities":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpu_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.gpuarray":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.check_dnn_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.config":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.rnn_support":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.run_dnn_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_abstractconv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_basic_ops":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_blas":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_blocksparse":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_cgpukernelbase":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_ctc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_dnn":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_elemwise":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_extra_ops":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_fft":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_gemmcorr":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_gemmcorr3d":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_linalg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_misc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_multinomial":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_neighbours":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_nnet":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_others":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_pickle":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_pool":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_reduction":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_rng_mrg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_scan":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_sort":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_subtensor":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_type":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.graph":{
  "__set__":true,
  "elements":[
   "landlab",
   "squidpy"
  ]
 },
 "tests.graph.hex":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.hex.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.hex.test_dual_hex":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.hex.test_hex":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.hex.test_perimeter_nodes":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.radial":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.radial.test_dual_radial":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.sort":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.sort.test_intpair":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.sort.test_remap":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.structured_quad":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.structured_quad.test_dual_quad":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.structured_quad.test_quad":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.test_graph":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.test_ligrec":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.graph.test_nhood":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.graph.test_ppatterns":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.graph.test_ripley":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.graph.test_sepal":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.graph.test_spatial_neighbors":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.graph.voronoi":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.voronoi.test_voronoi_to_graph":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.gravity":{
  "__set__":true,
  "elements":[
   "polyfempy"
  ]
 },
 "tests.grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.structured_quad":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.structured_quad.test_links":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.structured_quad.test_nodes":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_constructors":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_create":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_create_network":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_diagonals":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_grid_reference":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.test_edges":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.test_link_order":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.test_links":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.test_nodes":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.test_patches":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.testing_flux_divergence_hex_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_mappers":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_best_fit_plane":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_find_nearest_node":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_gradients_across_cell_corners":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_gradients_across_cell_faces":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_gradients_at_active_links":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_gradients_at_links":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_is_on_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_line_to_grid_coords":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_node_id_of_adjacent":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_gradients":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_allocators":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_axis_methods":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_bc_updates":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_cell_areas":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_corners":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_faces":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_fields":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_fixed_link_boundary":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_has_boundary_neighbor":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_init":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_is_boundary":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_link_length":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_link_order":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_mappers":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_neighbor_nodes":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_nodes":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_nodes_around_point":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_patches":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_save":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_status_at_node":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.unstructured":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.unstructured.test_links":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.group_element":{
  "__set__":true,
  "elements":[
   "pdfme"
  ]
 },
 "tests.groups":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.family":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.family.test_pseudo":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.family.test_pseudo_dojo":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.family.test_sssp":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.mixins":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.mixins.test_cutoffs":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.handlers":{
  "__set__":true,
  "elements":[
   "conda-auth"
  ]
 },
 "tests.handlers.test_basic_auth":{
  "__set__":true,
  "elements":[
   "conda-auth"
  ]
 },
 "tests.handlers.test_oauth2":{
  "__set__":true,
  "elements":[
   "conda-auth"
  ]
 },
 "tests.handlers.test_token":{
  "__set__":true,
  "elements":[
   "conda-auth"
  ]
 },
 "tests.helper":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.helper_test":{
  "__set__":true,
  "elements":[
   "onnx-caffe2",
   "osmapi"
  ]
 },
 "tests.helpers":{
  "__set__":true,
  "elements":[
   "bw_processing",
   "flask-restless",
   "gitflow",
   "phasespace",
   "pymc-base",
   "pystac-client",
   "uranography"
  ]
 },
 "tests.helpers.basic_array_helpers":{
  "__set__":true,
  "elements":[
   "bw_processing"
  ]
 },
 "tests.helpers.decays":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.helpers.factory":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.helpers.plotting":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.helpers.rapidsim":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.hessian_test_suite":{
  "__set__":true,
  "elements":[
   "acorns"
  ]
 },
 "tests.histmath":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.histmath.test_binned_integration":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.histmath.test_histograming":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.history":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.history.test_changelog":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.history.test_version":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.history.test_version_bump":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.host_fake":{
  "__set__":true,
  "elements":[
   "json5"
  ]
 },
 "tests.host_test":{
  "__set__":true,
  "elements":[
   "json5"
  ]
 },
 "tests.hosts":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.hosts.appended":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.hosts.blank":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.hosts.blank_wildcard":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.hosts.multiple":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.hosts.simple":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.html_test":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.http3":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.http3.test_http_receiver":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.http3.test_server":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.http3.test_session_ticket_store":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.http_auth_server":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.http_requests":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.http_requests.test_client":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.http_requests.test_connection":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.http_requests.test_deployed_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.hub":{
  "__set__":true,
  "elements":[
   "explainerdashboard",
   "xyzspaces"
  ]
 },
 "tests.hub.conftest":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_aliases":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_api":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_datasets":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_exceptions":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_hub":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.hub.test_hub_cli":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.hub.test_hub_integration":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.hub.test_logconf":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_misc":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_proxy":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_search":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hypotheses":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.hypotheses.test_hypotheses":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.ibllib":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.extractors":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.extractors.test_ephys_fpga":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.extractors.test_ephys_trials":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.extractors.test_extractors":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.extractors.test_folders":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.test_dsp":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.test_imports":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.test_io":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.test_misc":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.test_pipes":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.ibllib.test_time":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.image":{
  "__set__":true,
  "elements":[
   "squidpy",
   "technical"
  ]
 },
 "tests.image.test_container":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.image.test_features":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.image.test_get_coin_in_image":{
  "__set__":true,
  "elements":[
   "technical"
  ]
 },
 "tests.image.test_io":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.image.test_processing":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.image.test_segmentation":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.iml":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.conftest":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_api":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_credentials":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_exceptions":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_iml":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_layer":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_lookup_api":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.impersonation":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.import":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.import_export_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.importance_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.importance_tests.test_fanova":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.importance_tests.test_init":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.importance_tests.test_mean_decrease_impurity":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.imports_for_testing":{
  "__set__":true,
  "elements":[
   "jacqq"
  ]
 },
 "tests.indices":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.composability":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.composability.test_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.document_summary":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.document_summary.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.document_summary.test_index":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.document_summary.test_retrievers":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.empty":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.empty.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.keyword_table":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.keyword_table.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.keyword_table.test_retrievers":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.keyword_table.test_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.knowledge_graph":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.knowledge_graph.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.knowledge_graph.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.knowledge_graph.test_retrievers":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.list":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.list.test_index":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.list.test_retrievers":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.postprocessor":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.postprocessor.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.postprocessor.test_llm_rerank":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.postprocessor.test_longcontext_reorder":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.postprocessor.test_metadata_replacement":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.postprocessor.test_optimizer":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.query":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.query.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.query.query_transform":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.query.query_transform.mock_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.query.query_transform.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.query.test_compose":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.query.test_compose_vector":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.query.test_embedding_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.query.test_query_bundle":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.struct_store":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.struct_store.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.struct_store.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.struct_store.test_json_query":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.struct_store.test_sql_query":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.test_loading":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.test_loading_graph":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.test_node_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.test_prompt_helper":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.test_service_context":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.test_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.tree":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.tree.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.tree.test_embedding_retriever":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.tree.test_index":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.tree.test_retrievers":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.auto_retriever":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.auto_retriever.test_output_parser":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.mock_faiss":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.mock_services":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.test_deeplake":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.test_faiss":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.test_myscale":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.test_pinecone":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.test_retrievers":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.test_simple":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indices.vector_store.utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.indirect_parametrize":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.inflation":{
  "__set__":true,
  "elements":[
   "polyfempy"
  ]
 },
 "tests.initial_model_class_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.ino2cpp":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.install_monetdb_from_msi_dir":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.integer_error":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.integration":{
  "__set__":true,
  "elements":[
   "aloe",
   "climix",
   "fair-research-login",
   "globus-cli",
   "globus-compute-endpoint",
   "globus-sdk",
   "gpflow",
   "graypy",
   "great-expectations",
   "histolab",
   "inquirer",
   "lightwood",
   "looker-sdk",
   "neo4j-python-driver",
   "pdfstream",
   "quilt",
   "quilt3",
   "rivgraph",
   "small-text"
  ]
 },
 "tests.integration.advanced":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.advanced.test_array":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.advanced.test_custom_modules":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.advanced.test_text_input":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.advanced.test_timeseries":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_airline":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_analyze_dataset":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_categorical":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_cleaner":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_ensembles":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_jsonai":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_model_selection":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_qclassic":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_regression":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_save_and_load":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.basic.test_weird_target_dist":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.integration.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.classifiers.test_svm":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.conftest":{
  "__set__":true,
  "elements":[
   "climix",
   "fair-research-login",
   "globus-compute-endpoint",
   "neo4j-python-driver",
   "rivgraph"
  ]
 },
 "tests.integration.console_render":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.integration.console_render.helper":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.integration.console_render.test_basic":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.integration.console_render.test_checkbox":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.integration.console_render.test_confirm":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.integration.console_render.test_editor":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.integration.console_render.test_list":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.integration.console_render.test_password":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.integration.console_render.test_text":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.integration.endpoint":{
  "__set__":true,
  "elements":[
   "globus-compute-endpoint"
  ]
 },
 "tests.integration.endpoint.conftest":{
  "__set__":true,
  "elements":[
   "globus-compute-endpoint"
  ]
 },
 "tests.integration.endpoint.executors":{
  "__set__":true,
  "elements":[
   "globus-compute-endpoint"
  ]
 },
 "tests.integration.endpoint.executors.high_throughput":{
  "__set__":true,
  "elements":[
   "globus-compute-endpoint"
  ]
 },
 "tests.integration.endpoint.executors.high_throughput.test_htex_regression":{
  "__set__":true,
  "elements":[
   "globus-compute-endpoint"
  ]
 },
 "tests.integration.endpoint.executors.high_throughput.test_manager":{
  "__set__":true,
  "elements":[
   "globus-compute-endpoint"
  ]
 },
 "tests.integration.endpoint.executors.high_throughput.test_worker_map":{
  "__set__":true,
  "elements":[
   "globus-compute-endpoint"
  ]
 },
 "tests.integration.endpoint.executors.mock_executors":{
  "__set__":true,
  "elements":[
   "globus-compute-endpoint"
  ]
 },
 "tests.integration.examples":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_autocommit_transaction_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_basic_auth_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_connection_pool_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_connection_timeout_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_max_retry_time_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_secure_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_trust_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_unencrypted_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_custom_auth_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_custom_resolver_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_cypher_error_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_database_selection_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_driver_introduction_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_driver_lifecycle_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_hello_world_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_kerberos_auth_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_pass_bookmarks_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_read_write_transaction_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_result_consume_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_result_retain_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_service_unavailable_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_session_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_transaction_function_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.helper":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.io":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.small_text":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.classifiers.test_classification":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.classifiers.test_base":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.models":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.models.test_kimcnn":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.query_strategies.test_query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.query_strategies.test_query_strategy_bald":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.test_datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.test_model_selection":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.test_query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.test_serialization":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.classifiers.test_classification":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.classifiers.test_setfit":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.query_strategies.test_dal":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.query_strategies.test_query_strategy_bald":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.test_datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.test_serialization":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.utils":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.utils.test_setfit":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.query_strategies.test_multi_label":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.query_strategies.test_query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.test_serialization":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.test_auth_client_flow":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.integration.test_autocommit":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_bolt_driver":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_bookmarking":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_chunked_logging":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.test_client_credentials_token_confidential_client":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.integration.test_client_refresh":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.integration.test_common_logging":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.test_confidential_client_flow":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.integration.test_core_types":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_debugging_fields":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.test_delta_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_directionality_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_dynamic_shapes":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.integration.test_errors_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_explicit_tx":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_extra_fields":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.test_graph_types":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_im_utils_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_image_filters":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_indices":{
  "__set__":true,
  "elements":[
   "climix"
  ]
 },
 "tests.integration.test_jmespath_output":{
  "__set__":true,
  "elements":[
   "globus-cli"
  ]
 },
 "tests.integration.test_ln_utils_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_login":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.integration.test_main":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.integration.test_mask_utils_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_masks":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_method_equivalence":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.integration.test_methods":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.integration.test_morphological_filters":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_native_client_flow":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.integration.test_neo4j_driver":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_netrc":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.integration.test_network_io_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_notebooks":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.integration.test_packages":{
  "__set__":true,
  "elements":[
   "quilt",
   "quilt3"
  ]
 },
 "tests.integration.test_pipelines":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_readme":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_refresh_token_auth_client":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.integration.test_result":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_result_data":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_result_graph":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_river_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_river_utils_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_scorer":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_simple":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.integration.test_slide":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_spatial_types":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_status_issue":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.test_summary":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_synthetic_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_temporal_types":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_tile":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_tiler":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_tools":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.integration.test_tx_functions":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_util":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_verbosity_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_workflows":{
  "__set__":true,
  "elements":[
   "quilt3"
  ]
 },
 "tests.integration.usage_statistics":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.integration.usage_statistics.instantiate_context_with_usage_statistics":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.integration.usage_statistics.test_integration_usage_statistics":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.integration_evaluation":{
  "__set__":true,
  "elements":[
   "marinvaders"
  ]
 },
 "tests.integration_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.integration_tests":{
  "__set__":true,
  "elements":[
   "explainerdashboard",
   "optuna"
  ]
 },
 "tests.integration_tests.allennlp_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.allennlp_tests.test_allennlp":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.allennlp_tests.tiny_single_id":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.conftest":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.integration_tests.lightgbm_tuner_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.lightgbm_tuner_tests.test_alias":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.lightgbm_tuner_tests.test_optimize":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_catalyst":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_chainer":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_chainermn":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_cma":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_customdashboards":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.integration_tests.test_dashboards":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.integration_tests.test_fastai":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_integration":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_keras":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_lightgbm":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_mlflow":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_mxnet":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_pytorch_ignite":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_pytorch_lightning":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_sampler":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_sklearn":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_skopt":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_skorch":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_tensorboard":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_tensorflow":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_tfkeras":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_xgboost":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integrations":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.examples":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.examples.test_driftbif_simulation":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.examples.test_har_dataset":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.examples.test_robot_execution_failures":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.test_full_pipeline":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.test_notebooks":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.test_relevant_feature_extraction":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.interop":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.interop.test_adapter":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.interop.test_calls":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.interpolation":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.interpolation.test_interpolate":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.io":{
  "__set__":true,
  "elements":[
   "dask-geopandas",
   "kartothek",
   "landlab",
   "pandera",
   "pandera-core",
   "plateau",
   "pydeck",
   "pyusid",
   "tyssue"
  ]
 },
 "tests.io.conftest":{
  "__set__":true,
  "elements":[
   "dask-geopandas"
  ]
 },
 "tests.io.dask":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.bag":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.bag.conftest":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.bag.test_index":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.bag.test_read":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.bag.test_write":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.conftest":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.dataframe":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.dataframe.conftest":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.dataframe.test_compression":{
  "__set__":true,
  "elements":[
   "plateau"
  ]
 },
 "tests.io.dask.dataframe.test_hashing":{
  "__set__":true,
  "elements":[
   "plateau"
  ]
 },
 "tests.io.dask.dataframe.test_read":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.dataframe.test_shuffle":{
  "__set__":true,
  "elements":[
   "plateau"
  ]
 },
 "tests.io.dask.dataframe.test_stats":{
  "__set__":true,
  "elements":[
   "plateau"
  ]
 },
 "tests.io.dask.dataframe.test_update":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.delayed":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.delayed.conftest":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.delayed.test_delete":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.delayed.test_gc":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.delayed.test_merge":{
  "__set__":true,
  "elements":[
   "kartothek"
  ]
 },
 "tests.io.dask.delayed.test_read":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.delayed.test_update":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.dask.delayed.test_write":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.data_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.eager":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.eager.conftest":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.eager.test_cleanup":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.eager.test_commit":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.eager.test_delete":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.eager.test_gc":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.eager.test_index":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.eager.test_read":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.eager.test_update":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.eager.test_write":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.hdf_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.hdf_utils.test_base":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.hdf_utils.test_model":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.hdf_utils.test_simple":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.iter":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.iter.conftest":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.iter.test_cleanup":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.iter.test_read":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.iter.test_update":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.iter.test_write":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io.netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.test_from_netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.test_read_netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.test_to_netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.test_write_netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.test_write_raster_netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.simple_process":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_aisoff":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.io.test_array_translator":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_arrow":{
  "__set__":true,
  "elements":[
   "dask-geopandas"
  ]
 },
 "tests.io.test_csv":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.io.test_dtype_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_file":{
  "__set__":true,
  "elements":[
   "dask-geopandas"
  ]
 },
 "tests.io.test_hdf_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_html":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.io.test_image_translator":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_io":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.io.test_io_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_numpy_translator":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_obj":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.io.test_parquet":{
  "__set__":true,
  "elements":[
   "dask-geopandas"
  ]
 },
 "tests.io.test_partial_h5":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_pycro_dataset":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_read_esri_ascii":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.test_read_write_native":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.test_reg_ref":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_translator":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_usi_dataset":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_write_esri_ascii":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.test_write_obj":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.test_write_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io_components":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io_components.test_dataset":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io_components.test_dataset_metadata_factory":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io_components.test_metapartition":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io_components.test_mutate":{
  "__set__":true,
  "elements":[
   "kartothek"
  ]
 },
 "tests.io_components.test_read":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io_components.test_utils":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io_components.test_write":{
  "__set__":true,
  "elements":[
   "kartothek",
   "plateau"
  ]
 },
 "tests.io_for_tests":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.io_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.ios":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ios.test_backup_info":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ios.test_datausage":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ios.test_manifest":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ios.test_safari_browserstate":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ios.test_tcc":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ip":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_dtypes":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_interface":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_ip":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_ip_pandas":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_pandas_methods":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_parser":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ipp":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.issue_263":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.jobs":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.jupyter_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.jupyter_ux":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.jupyter_ux.test_jupyter_ux":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.kedro_neptune":{
  "__set__":true,
  "elements":[
   "kedro-neptune"
  ]
 },
 "tests.kedro_neptune.test_planets":{
  "__set__":true,
  "elements":[
   "kedro-neptune"
  ]
 },
 "tests.kedro_neptune.test_utils":{
  "__set__":true,
  "elements":[
   "kedro-neptune"
  ]
 },
 "tests.keras":{
  "__set__":true,
  "elements":[
   "lume-model"
  ]
 },
 "tests.keras.test_layers":{
  "__set__":true,
  "elements":[
   "lume-model"
  ]
 },
 "tests.keras.test_model":{
  "__set__":true,
  "elements":[
   "lume-model"
  ]
 },
 "tests.kernels":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.kernels.test_kernels":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.kernels.test_kernels_torch":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.kit":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.closest_pair":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.diff":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.fft":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.flatten_list":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.get_index":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.get_path_matching":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.glob_handler":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.ini":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.intersperse":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.joint_shape":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.nm_width":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.remove_nans_1D":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.share_nans":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.string2identifier":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.symmetric_sqrt":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.timer":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.timestamp":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.unicode":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.unique":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.valid_index":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.zoom2D":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.knn_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.labware":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.labware.test_typechecks":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.langchain_helpers":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.languages":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.languages.test_YggInterface":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.languages.test_install_languages":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.lava":{
  "__set__":true,
  "elements":[
   "lava",
   "lava-dl",
   "lava-dnf",
   "lava-optimization"
  ]
 },
 "tests.lava.lib":{
  "__set__":true,
  "elements":[
   "lava-dl",
   "lava-dnf",
   "lava-optimization"
  ]
 },
 "tests.lava.lib.dl":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.netx":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.netx.test_blocks":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.netx.test_hdf5":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.netx.test_hdf5_nx":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.block":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.block.test_cuba":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.block.test_sigma_delta":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.dynamics":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.dynamics.test_adaptive_phase_th":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.dynamics.test_adaptive_resonator":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.dynamics.test_adaptive_threshold":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.dynamics.test_leaky_integrator":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.dynamics.test_resonator":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.test_adrf":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.test_adrf_iz":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.test_alif":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.test_cuba":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.test_rf":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.test_rf_iz":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.neuron.test_sigma_delta":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.test_io":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.utils":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.utils.filter":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.utils.filter.test_conv_filter":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.utils.test_recurrent":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.utils.time":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.utils.time.test_replicate":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dl.slayer.utils.time.test_shift":{
  "__set__":true,
  "elements":[
   "lava-dl"
  ]
 },
 "tests.lava.lib.dnf":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.acceptance":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.acceptance.test_connecting_with_ops":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.acceptance.test_gauss_spike_generator":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.connect":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.connect.test_connect":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.connect.test_exceptions":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.inputs":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.inputs.gauss_pattern":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.inputs.gauss_pattern.test_models":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.inputs.gauss_pattern.test_process":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.inputs.rate_code_spike_gen":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.inputs.rate_code_spike_gen.test_models":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.inputs.rate_code_spike_gen.test_process":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.kernels":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.kernels.test_kernels":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.operations":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.operations.test_enums":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.operations.test_exceptions":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.operations.test_operations":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.operations.test_shape_handlers":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.utils":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.utils.test_convenience":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.utils.test_math":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.utils.test_plotting":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.dnf.utils.test_validation":{
  "__set__":true,
  "elements":[
   "lava-dnf"
  ]
 },
 "tests.lava.lib.optimization":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.problems":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.problems.bayesian":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.problems.bayesian.test_models":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.problems.bayesian.test_processes":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.problems.test_coefficients":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.problems.test_constraints":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.problems.test_cost":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.problems.test_problems":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.problems.test_variables":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.bayesian":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.bayesian.test_models":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.bayesian.test_processes":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.bayesian.test_solver":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.monitoring_processes":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.monitoring_processes.solution_readout":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.monitoring_processes.solution_readout.test_solution_readout":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.nebm":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.nebm.test_models":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.qp":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.qp.test_models":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.qp.test_process":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.scif":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.scif.test_models":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.scif.test_process":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.solution_reader":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.solution_reader.test_solution_reader":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.test_models":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.test_solver_cpu_backend":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.generic.test_solver_cpu_backend_parallel":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.lca":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.lca.test_fixed_pt":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.lca.test_float_pt":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.qp":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.qp.test_models":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.lib.optimization.solvers.qp.test_process":{
  "__set__":true,
  "elements":[
   "lava-optimization"
  ]
 },
 "tests.lava.magma":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.builders":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.builders.test_builder":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.channels":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.channels.test_pypychannel":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.subcompilers":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.subcompilers.py":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.subcompilers.py.test_pyproc_compiler":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.subcompilers.test_channel_builders_factory":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.subcompilers.test_channel_map_updater":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.test_channel_builder":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.test_channel_map":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.test_compiler":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.test_node":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_learning_rule":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_learning_rule_applier":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_product_series":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_random":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_symbolic_equation":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_utils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model.py":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model.py.test_model":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model.py.test_ports":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model.test_decorators":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model.test_sub_model":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.ports":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.ports.test_ports":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.ports.test_virtual_ports_in_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.test_lif_dense_lif":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.test_variable":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_async_protocol":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_context_manager":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_exception_handling":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_get_set_non_determinism":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_get_set_var":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_io_ports":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_leakage":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_loihi_protocol":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_loihi_with_async_protocol":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_pause_requested_from_model":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_ref_var_ports":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_run_continuously_and_pause":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_runtime":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_runtime_service":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.clp":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.clp.integration":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.clp.integration.test_clp_one_shot":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.clp.novelty_detector":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.clp.novelty_detector.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.clp.nsm":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.clp.nsm.test_nsm":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.clp.prototype_lif":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.clp.prototype_lif.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.conv":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.conv.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.conv.test_utils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.dense":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.dense.test_learning":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.dense.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.dense.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.dense.test_stdp_sim":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.io":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.io.test_dataloader":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.io.test_extractor":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.io.test_injector":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.io.test_source_sink":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.lif":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.lif.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.lif.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.monitor":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.monitor.test_monitors":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.rf":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.rf.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.rf.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.rf_iz":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.rf_iz.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.rf_iz.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.scif":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.scif.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.scif.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.sdn":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.sdn.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.sdn.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.sparse":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.sparse.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.sparse.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.spiker":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.spiker.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.test_utils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.test_utils.utils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.tutorials":{
  "__set__":true,
  "elements":[
   "lava",
   "lava-dnf",
   "lava-optimization"
  ]
 },
 "tests.lava.tutorials.test_tutorials":{
  "__set__":true,
  "elements":[
   "lava",
   "lava-dnf",
   "lava-optimization"
  ]
 },
 "tests.lava.utils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.utils.test_loihi":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.utils.test_plots":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.utils.test_serialization":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.utils.test_slurm":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.utils.test_weightutils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lbl":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.lbl.test_drop_labels_by_values":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.learn":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.learn.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.learn.test_cli":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.learn.test_naive_bayes":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.legacy":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.legacy.test_api":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.legacy.test_api_with_blueprint":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.lib_test":{
  "__set__":true,
  "elements":[
   "json5"
  ]
 },
 "tests.library":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_add":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_assistant":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_await":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_block":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_break":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_contains":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_each":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_equal":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_gen":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_geneach":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_greater":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_if":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_include":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_less":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_parse":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_role":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_select":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_set":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_strip":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_subtract":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_system":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_unless":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.library.test_user":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.license":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.license.test_discovery":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.link_functions":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.link_functions.link_function_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.link_functions.link_test_list":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.llm_predictor":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llm_predictor.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llm_predictor.vellum":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llm_predictor.vellum.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llm_predictor.vellum.test_predictor":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llm_predictor.vellum.test_prompt_registry":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llm_predictor.vellum.test_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms":{
  "__set__":true,
  "elements":[
   "guidance",
   "llama-index"
  ]
 },
 "tests.llms.test_anthropic":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_anthropic_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_cohere":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_custom":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_konko":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_langchain":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_litellm":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_llama_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_localai":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_openai":{
  "__set__":true,
  "elements":[
   "guidance",
   "llama-index"
  ]
 },
 "tests.llms.test_openai_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_palm":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_rungpt":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.test_transformers":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.llms.test_xinference":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.llms.transformers":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.llms.transformers.test_llama":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.llms.transformers.test_mpt":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.lmf_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.load_es_data":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.load_examples_test":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.load_mongo_data":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.load_sta_data":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.load_tinydb_records":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.local_only_tests":{
  "__set__":true,
  "elements":[
   "foundry_ml"
  ]
 },
 "tests.localdata":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.localdata.test_pynsee_localdata":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.logger":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.logger.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.logprob":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_abstract":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_censoring":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_composite_logprob":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_cumsum":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_joint_logprob":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_mixture":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_rewriting":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_scan":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_tensor":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_transforms":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_utils":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.utils":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.loss_functions":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.loss_functions.beta_loss_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.loss_functions.loss_function_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.loss_functions.loss_test_list":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.lotsa_windows":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.ls_setup":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_code_action":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_code_lens":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_color_presentation":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_completion":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_declaration":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_definition":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_document_color":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_document_highlight":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_document_link":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_document_symbol":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_folding_range":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_formatting":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_hover":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_implementation":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_on_type_formatting":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_prepare_rename":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_range_formatting":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_references":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_rename":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_selection_range":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_signature_help":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.lsp.test_type_definition":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.mac":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.mac.test_interface":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.macro_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.macrodata":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.macrodata.test_pynsee_macrodata":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.main_test":{
  "__set__":true,
  "elements":[
   "polygon-geohasher"
  ]
 },
 "tests.make_test_datasets":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.manage":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "django-tinymce"
  ]
 },
 "tests.manage.backup":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.backup.test_backup_script":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.backup.test_backup_setup_script":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration.migrations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration.migrations.test_migrations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration.test_config":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration.test_options":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration.test_profile":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.external":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.external.test_postgres":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.test_caching":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.test_caching_config":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manual_cleanup":{
  "__set__":true,
  "elements":[
   "globus-cli"
  ]
 },
 "tests.markov":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.factory":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm.test_bayesian_hmm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm.test_init_hmm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm.test_integration":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm.test_mlhmm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm.test_output_models":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.conftest":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_amm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_bayesian_msm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_markov_state_model":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_mlmsm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_msm_basic_properties":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_oom":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_tram":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_tram_datatset":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_tram_model":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.util":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.test_cktest":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.test_discrete_states":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.test_reactive_flux":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.test_sample":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.test_transition_counts":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.correlations_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.expectations_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.fingerprints_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.hitting_probability_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.pcca_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.sensitivity_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.sparse":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.sparse.fingerprints_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_assessment":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_committor":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_decomposition":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_expectations":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_fingerprints":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_mfpt":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_sensitivity":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_stationary_vector":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.conftest":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.dense":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.dense.covariance_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.dense.tmatrix_sampler_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.sparse":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.sparse.connectivity_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.sparse.likelihood_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.sparse.prior_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.sparse.transition_matrix_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_bootstrapping":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_connectivity":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_count_matrix":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_effective_count_matrix":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_likelihood":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_mle_trev":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_mle_trev_given_pi":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_prior":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_ratematrix":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_tmatrix_sampling":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_transition_matrix":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.flux":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.flux.test_pathways":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.flux.test_reactive_flux":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.flux.test_tpt":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.numeric":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markovprocess":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.factory":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_bayesian_msm":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_cktest":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_markov_state_model":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_msm":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_reactive_flux":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_sample":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.marks_test":{
  "__set__":true,
  "elements":[
   "bqplot",
   "ipywebrtc"
  ]
 },
 "tests.markup_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.mechanisms":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_BernoulliNegExp":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Binary":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Bingham":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_DPMachine":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_DPMechanism":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Exponential":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_ExponentialCategorical":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_ExponentialHierarchical":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Gaussian":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_GaussianAnalytic":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_GaussianDiscrete":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Geometric":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_GeometricFolded":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_GeometricTruncated":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Laplace":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_LaplaceBoundedDomain":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_LaplaceBoundedNoise":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_LaplaceFolded":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_LaplaceTruncated":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_PermuteAndFlip":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Snapping":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Staircase":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_TruncationAndFoldingMixin":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Uniform":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Vector":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Wishart":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.transforms":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.transforms.test_DPTransformer":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.transforms.test_IntToString":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.transforms.test_RoundedInteger":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.transforms.test_StringToInt":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.messages":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.messages.test_message_pb2":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.messages.test_ref_message_pb2":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.metadata":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.metadata.test_pynsee_metadata":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.metaschema":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.conftest":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_AnyMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_ArrayMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_ClassMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_ContainerMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_FunctionMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_InstanceMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_JSONArrayMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_JSONMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_JSONObjectMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_MetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_MultiMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_ObjMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_PlyMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_ScalarMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_SchemaMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_conversions":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_AnyMetaschemaProperties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_ArgsMetaschemaProperty":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_ArrayMetaschemaProperties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_ClassMetaschemaProperty":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_JSONArrayMetaschemaProperties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_JSONObjectMetaschemaProperties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_KwargsMetaschemaProperty":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_MetaschemaProperty":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_ScalarMetaschemaProperties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_TypeMetaschemaProperty":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.test_encoder":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.test_normalizer":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metrics":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "gputools",
   "xplique"
  ]
 },
 "tests.metrics.privacy":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.metrics.privacy.test_membership_leakage":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.metrics.privacy.test_worst_case_mia_score":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.metrics.test_common":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.metrics.test_fidelity":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.metrics.test_gradient_check":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.metrics.test_mege":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.metrics.test_metrics":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.metrics.test_ssim":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.metrics.test_stability":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.metrics.test_verification_decision_trees":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.migration_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.migrations":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.migrations.0001_initial":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.misc":{
  "__set__":true,
  "elements":[
   "borb",
   "theano-pymc"
  ]
 },
 "tests.misc.cmp":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.cmp.test_digit_comparison":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.encryption":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.encryption.test_md5":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.encryption.test_standard_security_handler":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.matrix":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.matrix.test_matrix_determinant":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.matrix.test_matrix_multiplication":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.postscript":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.postscript.test_postscript_eval":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.test_may_share_memory":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.misc.test_pkl_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.misc.trie":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.trie.test_add_to_trie":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.types":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.types.test_hash_types":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.types.test_name_behaves_like_str":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.types.test_type_added_methods":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.types.test_type_methods":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.missing_path_arg_warner_tests":{
  "__set__":true,
  "elements":[
   "jazal"
  ]
 },
 "tests.mlutils":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.mlutils.test_bpevocabulary":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.mock":{
  "__set__":true,
  "elements":[
   "actinia-python-client"
  ]
 },
 "tests.mock.actinia_location_management_mock":{
  "__set__":true,
  "elements":[
   "actinia-python-client"
  ]
 },
 "tests.mock.actinia_mapset_management_mock":{
  "__set__":true,
  "elements":[
   "actinia-python-client"
  ]
 },
 "tests.mock.actinia_mock":{
  "__set__":true,
  "elements":[
   "actinia-python-client"
  ]
 },
 "tests.mock.actinia_process_chain_validation_mock":{
  "__set__":true,
  "elements":[
   "actinia-python-client"
  ]
 },
 "tests.mock.actinia_raster_management_mock":{
  "__set__":true,
  "elements":[
   "actinia-python-client"
  ]
 },
 "tests.mock.actinia_vector_management_mock":{
  "__set__":true,
  "elements":[
   "actinia-python-client"
  ]
 },
 "tests.mock_response":{
  "__set__":true,
  "elements":[
   "deepgram-sdk"
  ]
 },
 "tests.mock_server":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.mock_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.mock_utils.mock_predict":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.mock_utils.mock_prompts":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.mock_utils.mock_text_splitter":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.mock_utils.mock_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.mocks":{
  "__set__":true,
  "elements":[
   "gw-sklearn-xarray",
   "python-semantic-release"
  ]
 },
 "tests.mocks.mock_gitlab":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.mockup":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.model":{
  "__set__":true,
  "elements":[
   "datarobot",
   "zfit"
  ]
 },
 "tests.model.conftest":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_confusion_chart":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_dataset_residuals":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_lift_chart":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_multiclass_lift_chart":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_roc_curve":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_scores":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_bias_and_fairness":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_blender":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_clustering_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_cross_validation":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_inference_image":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_model_test":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_model_version":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_model_version_dependency_build":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_task":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_task_version":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_task_version_dependency_build":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_data_engine_query_generator":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_dataset":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_execution_environment":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_execution_environment_version":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_external_baseline_validation":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_feature_effect":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_feature_fit":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_feature_impact":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_frozen":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_job":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_model_params":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_morphing_composed":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.model.test_payoff_matrix":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_pdf_histogram":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.model.test_prediction_explanations":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_prediction_server":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_predictions":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_prime_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_reason_codes":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_restore_discarded_features":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_rows_iterator":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_scoring_code":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_shap_impact":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_shap_matrix":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_shap_matrix_job":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_training_predictions":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_unbinned_from_binned":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.model.user_blueprints":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.user_blueprints.test_user_blueprint":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.utils":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.visualai":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.visualai.conftest":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.visualai.test_augmentation":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.visualai.test_image":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.visualai.test_insights":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model_analysis":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.model_analysis.test_model_analysis":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.model_analysis.test_model_analysis_validations":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.model_proxy_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.model_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.model_test_utils":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.model_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.models":{
  "__set__":true,
  "elements":[
   "airflow",
   "diffprivlib",
   "django-hosts",
   "django-versatileimagefield",
   "maml",
   "openskill",
   "optimade",
   "pymc-base",
   "python-flair",
   "verta"
  ]
 },
 "tests.models.conftest":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.nets":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.models.standard_models":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.models.test_DecisionTreeClassifier":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_FittingTree":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_GaussianNB":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_KMeans":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_LinearRegression":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_LogisticRegression":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_PCA":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_RandomForestClassifier":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_StandardScaler":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_atomsets":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.models.test_baseinfo":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_bradley_terry_full":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_bradley_terry_full_series":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_bradley_terry_part":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_bradley_terry_part_series":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_covariance_eig":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_entity_linker":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.models.test_entries":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_incremental_mean_and_var":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_jsonapi":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_layer":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.models.test_links":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_logistic_regression_path":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_mlp":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.models.test_optimade_json":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_plackett_luce":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_plackett_luce_series":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_references":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_relation_classifier":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.models.test_relation_extractor":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.models.test_sequence_tagger":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.models.test_structures":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_tars_classifier":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.models.test_tars_ner":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.models.test_text_classifier":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.models.test_text_regressor":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.models.test_thurstone_mosteller_full":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_thurstone_mosteller_full_series":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_thurstone_mosteller_part":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_thurstone_mosteller_part_series":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_utils":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_word_tagger":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.modify_geom":{
  "__set__":true,
  "elements":[
   "kinbot"
  ]
 },
 "tests.module":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.module.test_load":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.module.test_typechecks":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.monitoring":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.alerts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.alerts.test_alerter":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.alerts.test_entities":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.alerts.test_status":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.comparison":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.comparison.test_comparison":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.notification_channels":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.notification_channels.test_config_classes":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.notification_channels.test_entities":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.strategies":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_aggregation":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_client":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_profilers":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_queries":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_summaries":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_summary_samples":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.moto_server":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.mri":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.rf":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.rf.test_adiabatic":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.rf.test_b1sel":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.rf.test_linop":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.rf.test_multiband":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.rf.test_ptx":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.rf.test_sim":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.rf.test_slr":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.rf.test_trajgrad":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.test_app":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.test_dcf":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.test_linop":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.test_precond":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.mri.test_samp":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.multiFidelityFunction_test":{
  "__set__":true,
  "elements":[
   "mf2"
  ]
 },
 "tests.multi_fidelity_function_test":{
  "__set__":true,
  "elements":[
   "mf2"
  ]
 },
 "tests.multi_objective":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.samplers_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.samplers_tests.test_nsga2":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.samplers_tests.test_samplers":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.test_study":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.test_trial":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.visualization_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.visualization_tests.test_pareto_front":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.hypervolume_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.hypervolume_tests.test_utils":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.hypervolume_tests.test_wfg":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.samplers_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.samplers_tests.test_motpe":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.samplers_tests.test_nsga2":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.samplers_tests.test_samplers":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.test_study":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.test_trial":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.visualization_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.visualization_tests.test_pareto_front":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multimolecular":{
  "__set__":true,
  "elements":[
   "kinbot"
  ]
 },
 "tests.mysql_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.nbconvert":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.nbconvert.test_handlers":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.neptune":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.alpha_integration":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.alpha_integration.test_alpha_integration_backend":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.api_models":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.api_objects_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.experiments_object_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.http_objects_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.backends":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.backends.test_hosted_neptune_backend":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.backends.test_noop_object":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.channels":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.channels.test_channels_values_sender":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.gauges":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.gauges.gauges_fixture":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.gauges.test_cpu_gauges":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.gauges.test_gpu_gauges":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.gauges.test_memory_gauges":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.metrics":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.metrics.test_metric_reporter_integration":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.metrics.test_metric_service_integration":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.metrics.test_metrics_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.resources":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.resources.test_system_resource_info_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.storage":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.storage.test_datastream":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.storage.test_upload_storage_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.management":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.management.internal":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.management.internal.test_api":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.management.internal.test_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_artifact":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_artifact_hash":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_datetime":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_file":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_float":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_string":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.series":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.series.test_file_series":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.series.test_float_series":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.series.test_series":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.series.test_string_series":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.sets":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.sets.test_file_set":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.sets.test_string_set":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.test_attribute_base":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.test_attribute_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.backend_test_mixin":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.abstract_experiment_test_mixin":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.abstract_tables_test":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_model":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_model_tables":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_model_version":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_model_version_tables":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_project":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_run":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_run_tables":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.helpers":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.drivers":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.drivers.test_local":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.drivers.test_s3":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.test_file_hasher":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.test_serializer":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.test_types":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_hosted_artifact_operations":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_hosted_client":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_hosted_file_operations":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_hosted_neptune_backend":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_neptune_backend_mock":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_nql":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_operations_preprocessor":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_swagger_client_wrapper":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.containers":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.containers.test_disk_queue":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_container_structure":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_credentials":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_disk_queue":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_operations":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_run_structure":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_streams":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.utils.test_deprecation":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.utils.test_images":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.utils.test_iteration":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.utils.test_json_file_splitter":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.utils.test_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.sync":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.sync.test_status":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.sync.test_sync":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.sync.test_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.sync.utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_client":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_experiment":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_handler":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_log_handler":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_run":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_sync":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.types":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.types.atoms":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.types.atoms.test_file":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.utils.api_experiments_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.utils.file_helpers":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.websockets":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.websockets.test_websockets_signals_background_job":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.oauth_objects_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.project_test_fixture":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.random_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_channel_writer":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_experiment":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_git_info":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_imports":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_oauth":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_project":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_session":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.utils.assertions":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune_notebooks":{
  "__set__":true,
  "elements":[
   "neptune-notebooks"
  ]
 },
 "tests.neptune_notebooks.test_sync":{
  "__set__":true,
  "elements":[
   "neptune-notebooks"
  ]
 },
 "tests.neptune_notebooks_plugin":{
  "__set__":true,
  "elements":[
   "neptune-notebooks"
  ]
 },
 "tests.neptune_notebooks_plugin.test_plugin":{
  "__set__":true,
  "elements":[
   "neptune-notebooks"
  ]
 },
 "tests.nltk_stages":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.nltk_stages.test_nltk":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.nltk_stages.test_rare":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.nltk_stages.test_snowball":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.nn":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.nn.test_base":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.nn.test_confmodels":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.nn.test_trainer":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.nn.test_validators":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.node_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.noise":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.noise.test_perlin":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.not_test_cell":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.notebooks":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.notebooks.notebook_utils":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.notebooks.test_nbconvert":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.notes_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.numeric":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.numeric.test_kahan_summation":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.numeric.test_norm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.numeric.test_utils":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.objects":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.objects.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.objects.test_node_mapping":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.ode":{
  "__set__":true,
  "elements":[
   "modelbase",
   "pymc-base"
  ]
 },
 "tests.ode.integrators":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.integrators.test_integrator_assimulo":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.integrators.test_integrator_scipy":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.model":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.model.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.model.test_label_model":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.model.test_linear_label_model":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.model.test_model":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator.test_base_simulator":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator.test_label_simulator":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator.test_linear_label_simulator":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator.test_simulator":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator.test_simulator_plotting":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.test_algebraicfunctions":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.test_mca":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.test_ode":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.ode.test_ratefunctions":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.test_ratelaws":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.test_utils":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.official":{
  "__set__":true,
  "elements":[
   "keras-radam"
  ]
 },
 "tests.oneibl":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.oneibl.test_alyxclient":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.oneibl.test_alyxrest":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.oneibl.test_dataclass":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.oneibl.test_one":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.oneibl.test_one_tutorial":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.oneibl.test_params":{
  "__set__":true,
  "elements":[
   "brainbox-ibl"
  ]
 },
 "tests.onnx_backend_test":{
  "__set__":true,
  "elements":[
   "onnx-caffe2"
  ]
 },
 "tests.operators":{
  "__set__":true,
  "elements":[
   "airflow",
   "airflow-provider-great-expectations"
  ]
 },
 "tests.operators.docker_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.hive_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.latest_only_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.operators":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.s3_to_hive_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.sensors":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.subdag_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.test_great_expectations":{
  "__set__":true,
  "elements":[
   "airflow-provider-great-expectations"
  ]
 },
 "tests.ops":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.ops.test_average":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.ops.test_regrid":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.ops.test_subset":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.ops.test_xarray_mean":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.optimizers":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.optimizers.abc_test_discrete_optimizer":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.optimizers.abc_test_optimizer":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.optimizers.test_binary":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.optimizers.test_general_optimizer":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.optimizers.test_global_best":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.optimizers.test_local_best":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.optimizers.test_tolerance":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.optimizers.test_verbose":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.orbit":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.diagnostics":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.diagnostics.test_backtest":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.diagnostics.test_eda_plot":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.diagnostics.test_plot":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.diagnostics.test_wbic":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.estimators":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.estimators.test_pyro_estimator":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.estimators.test_stan_estimator":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.models":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.models.test_dlt":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.models.test_ets":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.models.test_ktr":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.models.test_ktrlite":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.models.test_lgt":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.utils":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.utils.params_tuning":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orbit.utils.test_knots":{
  "__set__":true,
  "elements":[
   "orbit-ml"
  ]
 },
 "tests.orm":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_data":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_dict":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_folder":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_kpoints":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_orbital":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_remote":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_singlefile":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_to_aiida_type":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_upf":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.implementation":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.implementation.test_backend":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.implementation.test_comments":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.implementation.test_logs":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.implementation.test_nodes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.node.test_calcjob":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.node.test_node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_authinfos":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_autogroups":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_comments":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_computers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_entities":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_groups":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_logs":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_mixins":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_querybuilder":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.utils.test_calcjob":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.utils.test_loaders":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.utils.test_node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.utils.test_repository":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.osmapi_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.other":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.other.sklearn_pipe":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.other_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.other_expectations.test_other_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.output_parsers":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.output_parsers.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.output_parsers.test_pydantic":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.output_parsers.test_selection":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.output_parsers.test_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.package":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.package.test_manager":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.package.test_manifest":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.package.test_meta":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.package.test_pack":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.parallel":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.parallel.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.parallel.test_cli":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.parallel.test_job_builder":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.parallel.test_multiprocess":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.parallel.test_parsers":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.parallel.test_process_results":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.parallel.test_workflow_inputs":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.parallel.test_workflowconfig":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.parallel_test_suite":{
  "__set__":true,
  "elements":[
   "acorns"
  ]
 },
 "tests.params":{
  "__set__":true,
  "elements":[
   "mesmerize-core"
  ]
 },
 "tests.parse_name_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.parse_rtf":{
  "__set__":true,
  "elements":[
   "rtfde"
  ]
 },
 "tests.parse_rtf.test_parse_rtf":{
  "__set__":true,
  "elements":[
   "rtfde"
  ]
 },
 "tests.parse_rtf.test_validate_file":{
  "__set__":true,
  "elements":[
   "rtfde"
  ]
 },
 "tests.parser_styled_plains":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.parsers":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "python-semantic-release"
  ]
 },
 "tests.parsers.test_angular":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.parsers.test_emoji":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.parsers.test_helpers":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.parsers.test_parser":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.parsers.test_tag":{
  "__set__":true,
  "elements":[
   "python-semantic-release"
  ]
 },
 "tests.parsing":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.parsing.models":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.parsing.models.pytorch":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.parsing.test_pytorch":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.path_checker_tests":{
  "__set__":true,
  "elements":[
   "jazal"
  ]
 },
 "tests.path_util_tests":{
  "__set__":true,
  "elements":[
   "jazal"
  ]
 },
 "tests.pcluster":{
  "__set__":true,
  "elements":[
   "aws-parallelcluster"
  ]
 },
 "tests.pcluster.efs_test":{
  "__set__":true,
  "elements":[
   "aws-parallelcluster"
  ]
 },
 "tests.pcluster.pcluster-unittest":{
  "__set__":true,
  "elements":[
   "aws-parallelcluster"
  ]
 },
 "tests.pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.border":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.border.test_write_barcode_with_rounded_borders":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.border.test_write_image_with_rounded_borders":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.border.test_write_paragraph_with_rounded_borders":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.border.test_write_table_with_rounded_borders":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_analogous_color_scheme":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_color_conversion":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_extract_colors":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_split_complementary_color_scheme":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_tetradic_rectangle_color_scheme":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_tetradic_square_color_scheme":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_triadic_color_scheme":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font.test_digit_placement_ubuntu_font":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font.test_extract_font_names":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font.test_write_hello_world_with_monaco_font":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font.test_write_hello_world_with_simhei_font":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font.test_write_with_truetype_font":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.barcode":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.barcode.test_write_all_types_barcode":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.barcode.test_write_all_types_of_barcode":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.barcode.test_write_code_128_barcode":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.barcode.test_write_code_128_barcode_in_color":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chart":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chart.test_write_2_scatter_plots":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chart.test_write_3d_density_chart":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chart.test_write_3d_surface_plot":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chart.test_write_radar_plot":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text.test_write_chunk_of_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text.test_write_chunk_of_text_escaped_chars":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text.test_write_chunk_of_text_in_rainbow_colors":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text.test_write_paragraph_with_accented_letters":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text.test_write_using_low_level_instructions":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunks_of_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunks_of_text.test_write_chunks_of_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunks_of_text.test_write_chunks_of_text_preserves_bounding_boxes":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.codeblock":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.codeblock.test_write_codeblock":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.emoji":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.emoji.test_write_emoji":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_check_box":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_drop_down_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_form_with_missing_xref":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_push_button":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_text_area":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_text_field":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.heading":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.heading.test_write_paragraphs_with_headings":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.hyphenation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.hyphenation.test_hyphenation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.hyphenation.test_write_hyphenated_paragraph":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_modify_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_grayscale_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_image_aligned_center":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_image_by_url":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_image_justified_center":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_pil_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_png_image_by_url":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_unsplash_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_xl_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_blobs":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_dragon_curve":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_eurion":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_flowchart_line_art":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_flyer":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_gradient_rectangular_maze":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_lissajours_line_art":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_rectangular_hitomezashi":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_rectangular_maze":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_of_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_of_text.test_write_line_of_text_justified_center":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_of_text.test_write_line_of_text_justified_full":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_of_text.test_write_line_of_text_justified_right":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.lipsum":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.lipsum.test_write_document_with_lipsum":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list.test_write_long_unordered_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list.test_write_nested_ordered_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list.test_write_nested_unordered_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list.test_write_ordered_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list.test_write_unordered_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_browser_layout_inline_next_line":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_header_footer_multi_column_layout":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_line_height_parameter":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_margin_and_padding":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_write_multiple_pages":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_write_paragraphs_using_multi_column_layout":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_write_paragraphs_using_multi_column_layout_with_varying_spacing":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_write_paragraphs_using_single_column_layout":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_hello_world":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_alignment":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_border_left":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_force_split":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_center":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_center_with_padding":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_center_with_padding_and_border":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_center_with_padding_and_border_and_background":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_full":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_right":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_preserve_space":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_save_twice":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_single_line_justified_full":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_battleship":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_fixed_column_width_table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_flexi_table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_flexi_table_with_preferred_width":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_incomplete_table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_col_span":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_non_black_paragraphs":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_rainbow_background":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_row_span":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_special_characters":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_tents_and_trees":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.test_write_empty_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.conformance":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.conformance.test_write_pdf_a_1b":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.concat":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.concat.test_concat_documents":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.count_pages":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.count_pages.test_count_pages":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.duplicate":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.duplicate.test_duplicate_pages":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.easier_imports":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.easier_imports.test_easier_imports":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.embedded_files":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.embedded_files.test_append_embedded_file":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.embedded_files.test_build_matryoskha_pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.fix_broken":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.fix_broken.test_fix_broken_xref":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.outlines":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.outlines.test_add_outline":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.outputintent":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.outputintent.test_create_document_with_output_intent":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.signature":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.signature.test_document_has_signatures":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.split_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.split_document.test_split_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.test_add_large_amount_of_headings":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.test_append_embedded_javascript":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.test_document_file_size":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.test_inline_object_io":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.test_remove_page":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_all_rubber_stamp_annotations":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_circle_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_free_text_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_highlight_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_line_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_polygon_annotation_using_line_art_factory":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_polyline_annotation_using_line_art_factory":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_redact_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_remote_go_to_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_sound_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_square_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_square_annotation_in_free_space":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_squiggle_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_strikeout_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_super_mario_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_text_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_underline_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_annotation_name":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_copy_circle_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_count_annotations":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_remove_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.model":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.model.test_get_size_of_newly_created_page":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.redact":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.redact.test_apply_redaction_annotations":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.rotate":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.rotate.test_rotate_page":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.shape":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.shape.test_page_has_empty_resource_dictionary":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.parsing":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.parsing.test_read_cmap":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.trailer":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.trailer.profile_read_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.trailer.test_change_info_dictionary_author":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.trailer.test_read_xmp_metadata":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pep492":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.pep492.test_async_iter":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.pep492.test_async_with":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.perf_lists":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.performance":{
  "__set__":true,
  "elements":[
   "aiocache",
   "pdpipe"
  ]
 },
 "tests.performance.conftest":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.performance.server":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.performance.test_concurrency":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.performance.test_footprint":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.performance.test_issue_29":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.performances":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.phonenumbermatchertest":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.phonenumbertest":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.phonenumberutiltest":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.pipeline":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.pipeline.test_orchestrator":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.pipeline.test_step_handler":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.pipette":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.pipette.test_typechecks":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.plane_hole":{
  "__set__":true,
  "elements":[
   "polyfempy"
  ]
 },
 "tests.plantcv":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.annotate":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.annotate.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.annotate.test_points":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology.test_acute":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology.test_constella":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology.test_constellaqc":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology.test_landmark_reference_pt_dist":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology.test_scale_features":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology.test_space":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology.test_starscape":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology.test_x_axis_pseudolandmarks":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.homology.test_y_axis_pseudolandmarks":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral.test_analyze_index":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral.test_analyze_spectral":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral.test_avg_reflectance":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral.test_calibrate":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral.test_extract_wavelength":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral.test_inverse_covariance":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral.test_read_data":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral.test_rot90":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.hyperspectral.test_write_data":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.io":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.io.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.io.test_random_subset":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.io.test_read_dataset":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_analyze_stem":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_check_cycles":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_fill_segments":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_find_branch_pts":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_find_tips":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_prune":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_segment_angle":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_segment_combine":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_segment_curvature":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_segment_euclidean_length":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_segment_id":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_segment_insertion_angle":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_segment_path_length":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_segment_skeleton":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_segment_sort":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_segment_tangent_angle":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.morphology.test_skeletonize":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.photosynthesis":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.photosynthesis.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.photosynthesis.test_analyze_fvfm":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.photosynthesis.test_psii_data":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.photosynthesis.test_read_cropreporter":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.photosynthesis.test_reassign_frame_labels":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.roi":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.roi.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.roi.test_roi":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.roi.test_roi2mask":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.spectral_index":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.spectral_index.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.spectral_index.test_spectral_index":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_Objects":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_acute":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_acute_vertex":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_analyze_bound_horizontal":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_analyze_bound_vertical":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_analyze_color":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_analyze_nir_intensity":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_analyze_object":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_analyze_thermal_values":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_apply_mask":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_auto_crop":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_background_subtraction":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_canny_edge_detect":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_closing":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_cluster_contour_splitimg":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_cluster_contours":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_color_palette":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_create_labels":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_crop":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_crop_position_mask":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_debug":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_deprecation_warning":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_dilate":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_distance_transform":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_erode":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_fatal_error":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_fill":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_fill_holes":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_find_objects":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_flip":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_gaussian_blur":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_get_kernel":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_get_nir":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_helper_grayscale_to_rgb":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_helper_iterate_analysis":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_helper_object_composition":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_hist_equalization":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_image_add":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_image_fusion":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_image_subtract":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_invert":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_landmark_reference_pt_dist":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_laplace_filter":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_logical_and":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_logical_or":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_logical_xor":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_median_blur":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_naive_bayes_classifier":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_object_composition":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_opening":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_output_mask":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_outputs":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_plot_image":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_print_image":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_print_results":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_readbayer":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_readimage":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_rectangle_mask":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_report_size_marker":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_rgb2gray":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_rgb2gray_cmyk":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_rgb2gray_hsv":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_rgb2gray_lab":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_roi_objects":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_rotate":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_scale_features":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_scharr_filter":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_segment_image_series":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_shift_img":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_show_dataarray":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_sobel_filter":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_spatial_clustering":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_stdev_filter":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_watershed_segmentation":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_white_balance":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_within_frame":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_x_axis_pseudolandmarks":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.test_y_axis_pseudolandmarks":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.threshold":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.threshold.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.threshold.test_threshold_methods":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.transform":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.transform.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.transform.test_color_correction":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.transform.test_gamma_correct":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.transform.test_nonuniform_illumination":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.transform.test_rescale":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.transform.test_resize":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.transform.test_rotate":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.transform.test_warp":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_auto_threshold_methods":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_chlorophyll_fluorescence":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_clustered_contours":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_colorize_label_img":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_colorize_masks":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_colorspaces":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_histogram":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_hyper_histogram":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_obj_size_ecdf":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_obj_sizes":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_overlay_two_imgs":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_pixel_scatter_plot":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_pseudocolor":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.plantcv.visualize.test_time_lapse_video":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.playground":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.playground.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.plot":{
  "__set__":true,
  "elements":[
   "amset",
   "landlab",
   "openamundsen"
  ]
 },
 "tests.plot.network_sediment_transporter":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.network_sediment_transporter.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.network_sediment_transporter.test_plot_network_and_parcels":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.test_base":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.plot.test_drainage_plot":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.test_event_handler":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.test_imshow_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.test_layers":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plots":{
  "__set__":true,
  "elements":[
   "deeptime",
   "xplique"
  ]
 },
 "tests.plots.test_ck_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.plots.test_implied_timescales":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.plots.test_metric_plots":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.plots.test_timeseries_plots":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.plotting":{
  "__set__":true,
  "elements":[
   "prolif",
   "squidpy"
  ]
 },
 "tests.plotting.test_barcode":{
  "__set__":true,
  "elements":[
   "prolif"
  ]
 },
 "tests.plotting.test_complex3d":{
  "__set__":true,
  "elements":[
   "prolif"
  ]
 },
 "tests.plotting.test_graph":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.plotting.test_image":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.plotting.test_interactive":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.plotting.test_network":{
  "__set__":true,
  "elements":[
   "prolif"
  ]
 },
 "tests.plotting.test_residues":{
  "__set__":true,
  "elements":[
   "prolif"
  ]
 },
 "tests.plotting.test_spatial_static":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.plugin_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.plugins":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "typhos"
  ]
 },
 "tests.plugins.test_core":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.plugins.test_entry_point":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.plugins.test_factories":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.plugins.test_happi":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.plugins.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.plugins_manager":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.pool_test":{
  "__set__":true,
  "elements":[
   "aiomcache"
  ]
 },
 "tests.post_processor":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.post_processor.discover_tests":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.post_processor.models":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.post_processor.post_processor_tests":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.post_processor.test_settings":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.predictions":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.predictions.test_predict_draw":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.predictions.test_predict_rank":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.predictions.test_predict_win":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.prefect":{
  "__set__":true,
  "elements":[
   "xpersist"
  ]
 },
 "tests.prefect.test_result":{
  "__set__":true,
  "elements":[
   "xpersist"
  ]
 },
 "tests.preprocessing":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "scvelo"
  ]
 },
 "tests.preprocessing.audio":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.audio.test_l_filter":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.audio.test_l_filter_pytorch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions.test_brightness":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions.test_contrast":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions.test_gaussian_noise":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions.test_shot_noise":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions.test_zoom_blur":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.test_eot_image_rotation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.test_image_rotation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.image":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.image.test_image_resize":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.image.test_image_square_pad":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.test_moments":{
  "__set__":true,
  "elements":[
   "scvelo"
  ]
 },
 "tests.preprocessing.test_neighbors":{
  "__set__":true,
  "elements":[
   "scvelo"
  ]
 },
 "tests.preprocessing.test_standardisation_mean_std":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.test_utils":{
  "__set__":true,
  "elements":[
   "scvelo"
  ]
 },
 "tests.processing":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.processing.data_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.processing.proc_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.processing.test_comp_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.processing.test_process":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.profile":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.profile.test_SampleExpectationsDatasetProfiler":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.profile.test_basic_suite_builder_profiler":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.profile.test_multi_batch_validation_meta_analysis":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.profile.test_profile":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.profile_dataset":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.profile_evaluate":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.profile_predict_file":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.program":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.program.test_guidance":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.program.test_llm_program":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.project":{
  "__set__":true,
  "elements":[
   "datarobot",
   "xyzspaces"
  ]
 },
 "tests.project.conftest":{
  "__set__":true,
  "elements":[
   "datarobot",
   "xyzspaces"
  ]
 },
 "tests.project.test_async":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_batch_var_transform":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_blenders":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_extension":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_feature_association":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_frozen_models":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_prime":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_project_create":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_projects":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.project.test_train":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_type_transform":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.prompts":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.prompts.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.prompts.test_guidance_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.prompts.test_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.property_test":{
  "__set__":true,
  "elements":[
   "mf2"
  ]
 },
 "tests.protected":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.protocol":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.protocol.test_typechecks":{
  "__set__":true,
  "elements":[
   "opentrons_shared_data"
  ]
 },
 "tests.pruners_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_hyperband":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_median":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_nop":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_percentile":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_successive_halving":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_threshold":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.psycopg2_mock":{
  "__set__":true,
  "elements":[
   "xcube_geodb"
  ]
 },
 "tests.ptutils":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.ptutils.test_component":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.ptutils.testdata":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.ptutils.testmodel":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.pykafka":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.rdkafka":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.rdkafka.test_producer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.rdkafka.test_rd_kafka_consumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.rdkafka.test_simple_consumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.rdkafka.test_ssl":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_balancedconsumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_cluster":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_connection":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_partition":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_partitioners":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_producer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_protocol":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_simpleconsumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_ssl":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.utils":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.utils.test_compression":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.utils.test_struct_helpers":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pyspark":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.feature":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.feature.math_binary_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.feature.math_unary_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.feature.string_map_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.lib":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.lib.assertions":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.lib.spark_session":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.python":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.conftest":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.echo":{
  "__set__":true,
  "elements":[
   "trio_asyncio"
  ]
 },
 "tests.python.echo2":{
  "__set__":true,
  "elements":[
   "trio_asyncio"
  ]
 },
 "tests.python.echo3":{
  "__set__":true,
  "elements":[
   "trio_asyncio"
  ]
 },
 "tests.python.test_base_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_futures":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_locks":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_pep492":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_proactor_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_queues":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_selector_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_sslproto":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_streams":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_subprocess":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_tasks":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_transports":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_unix_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_windows_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_windows_utils":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.question_gen":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.question_gen.test_guidance_generator":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.question_gen.test_llm_generators":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.quick_tests_na_to_nc":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.quick_tests_nc_to_na":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.rai_insights":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.rai_insights.test_rai_insights":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.rai_insights.test_rai_insights_cohort_filter":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.rai_insights.test_rai_insights_data_size_scenarios":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.rai_insights.test_rai_insights_get_feature_ranges":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.rai_insights.test_rai_insights_missing_values":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.rai_insights.test_rai_insights_save_and_load_scenarios":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.rai_insights.test_rai_insights_validations":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.rai_insights.test_served_model":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.reactive_path_checker_tests":{
  "__set__":true,
  "elements":[
   "jazal"
  ]
 },
 "tests.read":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.read.test_visium":{
  "__set__":true,
  "elements":[
   "squidpy"
  ]
 },
 "tests.readers":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.readers.test_file":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.readers.test_html_reader":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.readers.test_json":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.readers.test_load_reader":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.readers.test_mongo":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.readers.test_simplewebreader":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.readers.test_string_iterable":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.emt":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.emt.test_emt_recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.gaussian":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.gaussian.conftest":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.gaussian.test_gaussian_recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.orca":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.orca.conftest":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.orca.test_orca_recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.vasp":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.vasp.conftest":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.vasp.test_vasp_recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.xtb":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.xtb.test_xtb_recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recommender_base_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.record":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.recording":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.reference":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.reforms":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.conftest":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_allocations_familliales_imposables":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_cesthra":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_landais_piketty_saez":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_parametric_reform":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_plf2015":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_plf2016":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_plf2016_ayrault_muet":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_plfr2014":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_trannoy_wasmer":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.registry":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_artifacts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_crud":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_deployment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_docker":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_find":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_from_run":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_log_code":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_log_dataset":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_monitoring":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.pydantic_models":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_containerized_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_docker_image":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_model_base":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_stage_change":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_standard_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_validate_schema":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.regression_test":{
  "__set__":true,
  "elements":[
   "mf2"
  ]
 },
 "tests.relation_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.render":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer.content_block":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer.content_block.test_expectation_string_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer.test_notebook_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer.test_suite_edit_notebook_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer.test_suite_scaffold_notebook_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_SlackRenderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_column_section_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_data_documentation_site_builder":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_default_jinja_view":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_page_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_render":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_render_BulletListContentBlock":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_render_ExceptionListContentBlockRenderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_render_ValidationResultsTableContentBlockRenderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_styled_string_template":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_util":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.resonance":{
  "__set__":true,
  "elements":[
   "kinbot"
  ]
 },
 "tests.resources":{
  "__set__":true,
  "elements":[
   "astroid",
   "gto"
  ]
 },
 "tests.rest_framework":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.rest_framework.apps":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.rest_framework.models":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.rest_framework.test_backends":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.rest_framework.test_filters":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.rest_framework.test_filterset":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.restapi":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.restapi.test_identifiers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.restapi.test_routes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.richtext_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.rq":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.rq.test_rq_unit":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.rtl":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_api_methods":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_api_settings":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_auth_session":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_auth_token":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_requests_transport":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_serialize":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_transport":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.run":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.run_all":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.run_all_tests":{
  "__set__":true,
  "elements":[
   "jazal",
   "unifhy"
  ]
 },
 "tests.run_basic_tests":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.run_cmd_line_tests":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.run_dist_tests":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.run_raster_model_grid_builtin_unit_test":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.run_tests":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.runner":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.running_section_per_page":{
  "__set__":true,
  "elements":[
   "pdfme"
  ]
 },
 "tests.sa":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.sa.test_sa_connection":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.sa.test_sa_distil":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.sa.test_sa_engine":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.sa.test_sa_transaction":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.sampler_fixtures":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.samplers_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.test_cmaes":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.test_grid":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.test_samplers":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.tpe_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.tpe_tests.test_multivariate_parzen_estomator":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.tpe_tests.test_parzen_estimator":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.tpe_tests.test_sampler":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samples":{
  "__set__":true,
  "elements":[
   "pysnooper"
  ]
 },
 "tests.samples.exception":{
  "__set__":true,
  "elements":[
   "pysnooper"
  ]
 },
 "tests.samples.indentation":{
  "__set__":true,
  "elements":[
   "pysnooper"
  ]
 },
 "tests.samples.recursion":{
  "__set__":true,
  "elements":[
   "pysnooper"
  ]
 },
 "tests.sampling":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_forward":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_jax":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_mcmc":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_mcmc_external":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_parallel":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_population":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sandbox":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.linalg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.linalg.test_linalg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.test_jax":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.test_minimal":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.test_multinomial":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.test_multinomial_wo_replacement":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.test_rng_mrg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sbml":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.sbml.test_import":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.scalar":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scalar.test_basic":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scalar.test_basic_sympy":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan.test_basic":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan.test_checkpoints":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan.test_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan_module":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan_module.test_scan":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan_module.test_scan_checkpoints":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan_module.test_scan_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan_module.test_scan_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.schedulers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_datastructures":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_direct":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_lsf":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_pbspro":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_sge":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_slurm":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_torque":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedules_test":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.schemas":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.schemas.test_atoms":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.schemas.test_calc":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.schemas.test_cclib":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.schemas.test_vasp":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.security_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.segmented_projects":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.segmented_projects.test_combined_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.segmented_projects.test_project":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.segmented_projects.test_segmentation":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.select_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.selector_test":{
  "__set__":true,
  "elements":[
   "bqplot"
  ]
 },
 "tests.selectors":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.selectors.test_llm_selectors":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.serialization":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.serialization.test_identify":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.serialization.test_migrate":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.serialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_AsciiMapSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_AsciiTableSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_DefaultSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_FunctionalSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_MatSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_ObjSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_PandasSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_PickleSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_PlySerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_json":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_serialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_yaml":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serializers":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield",
   "python-benedict"
  ]
 },
 "tests.serializers.test_abstract_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.serializers.test_base64_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.serializers.test_csv_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.serializers.test_json_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.serializers.test_pickle_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.serializers.test_plist_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.serializers.test_query_string_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.serializers.test_toml_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.serializers.test_xls_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.serializers.test_xml_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.serializers.test_yaml_serializer":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.server":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.conftest":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params.conftest":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params.test_filter":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params.test_include":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params.test_response_fields":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params.test_sort":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_info":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_links":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_references":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_structures":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_utils":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_versions":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.test_client":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.test_config":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.test_mappers":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.test_schemas":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.test_server_validation":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.utils":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.services":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.api.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.config":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.config.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents.test_config":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents.test_fileio":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents.test_largefilemanager":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents.test_manager":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernels":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernels.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernels.test_config":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernels.test_cull":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernelspecs":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernelspecs.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.nbconvert":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.nbconvert.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.sessions":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.sessions.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.sessions.test_manager":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.settings":{
  "__set__":true,
  "elements":[
   "django-filebrowser",
   "django-hosts",
   "django-pwa",
   "django-tinymce",
   "djangocms-admin-style"
  ]
 },
 "tests.settings-docker":{
  "__set__":true,
  "elements":[
   "djangocms-admin-style"
  ]
 },
 "tests.settings_base":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.setup":{
  "__set__":true,
  "elements":[
   "mpl_plotter"
  ]
 },
 "tests.setup_test_data":{
  "__set__":true,
  "elements":[
   "ukpopulation"
  ]
 },
 "tests.shared":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.shared.test_shared":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.shells":{
  "__set__":true,
  "elements":[
   "adagio"
  ]
 },
 "tests.shells.test_interfaceless":{
  "__set__":true,
  "elements":[
   "adagio"
  ]
 },
 "tests.shim":{
  "__set__":true,
  "elements":[
   "nbclassic"
  ]
 },
 "tests.shim.mockextension":{
  "__set__":true,
  "elements":[
   "nbclassic"
  ]
 },
 "tests.shim.test_extension":{
  "__set__":true,
  "elements":[
   "nbclassic"
  ]
 },
 "tests.shim.test_nbclassic":{
  "__set__":true,
  "elements":[
   "nbclassic"
  ]
 },
 "tests.shortnumberinfotest":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.simple_app":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.simple_app.features":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.simple_app.features.non_ascii_files":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.simple_app.features.steps":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.simple_app.tests":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.simulation":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.simulation.test_conv":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.simulation.test_pooling":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.sindy":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.sindy.test_sindy":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.sirene":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.sirene.test_pynsee_sirene":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.skintegrate":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.skintegrate.test_pdpipeline_and_sklearn_estimator":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.skip_test_custom_protocol":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.sklearn":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.base_tests":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.extensions":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.extensions.data_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.extensions.imputer_extension_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.feature_extraction":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.feature_extraction.text_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.preprocessing":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.preprocessing.data_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.preprocessing.imputer_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.preprocessing.one_hot_encoder_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.tree":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.tree.tree_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn_stages":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.sklearn_stages.test_decompose":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.sklearn_stages.test_encode":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.sklearn_stages.test_encode_label":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.sklearn_stages.test_scale":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.sklearn_stages.test_tfidf_vectorize_token_list":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.smc":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.smc.test_smc":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.smoketests":{
  "__set__":true,
  "elements":[
   "peppy"
  ]
 },
 "tests.smoketests.conftest":{
  "__set__":true,
  "elements":[
   "peppy"
  ]
 },
 "tests.smoketests.test_Project":{
  "__set__":true,
  "elements":[
   "peppy"
  ]
 },
 "tests.smoketests.test_Sample":{
  "__set__":true,
  "elements":[
   "peppy"
  ]
 },
 "tests.solvers":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.solvers.test_isotropic_solver":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.solvers.test_sheet_solver":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.space":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.space.conftest":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.space.test_space_objects":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.sparkml":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.profile_pipeline":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.r_pipeline":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.sparkml_test_base":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.sparkml_test_utils":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_PCA":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_aft_survival_regression":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_binarizer":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_bucketed_random_projection_lsh":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_bucketizer":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_chi_sql_selector":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_count_vectorizer":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_dct":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_decision_tree_classifier":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_decision_tree_classifier_category":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_decision_tree_regressor":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_decision_tree_rules":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_element_wise_product":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_gbt_classifier":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_gbt_regressor":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_imputer":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_index_to_string":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_k_means":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_linear_classifier":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_linear_regressor":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_min_hash_lsh":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_mlp_classifier":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_naive_bayes":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_normalizer":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_one_vs_rest":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_onehot_encoder":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_pipeline":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_polynomial_expansion":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_random_forest_classifier":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_random_forest_classifier_tree":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_random_forest_regressor":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_scaler":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_stop_words_remover":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_string_indexer":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_tokenizer":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_tree_helper":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_vector_assembler":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_vector_indexer":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_vector_slicer":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparkml.test_word2vec":{
  "__set__":true,
  "elements":[
   "onnxmltools"
  ]
 },
 "tests.sparse":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.sandbox":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.sandbox.test_sp":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.test_basic":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.test_sp2":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.test_type":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.test_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.spatial":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.spatial.test_crs":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.speed_test":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.sql":{
  "__set__":true,
  "elements":[
   "llnl-sina",
   "xcube_geodb"
  ]
 },
 "tests.sql.test_sql_functions":{
  "__set__":true,
  "elements":[
   "xcube_geodb"
  ]
 },
 "tests.sql.test_sql_group_functions":{
  "__set__":true,
  "elements":[
   "xcube_geodb"
  ]
 },
 "tests.sql_parse_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.sql_validator_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.sqla_models_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.sqlalchemy_dataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.sqlalchemy_dataset.test_sqlalchemydataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.sqlite_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.sqllab_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.ssa_test":{
  "__set__":true,
  "elements":[
   "onnx-caffe2"
  ]
 },
 "tests.stackoverflow":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.stackoverflow.test_question_20528081":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.stackoverflow.test_question_58692636":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.stackoverflow.test_question_58827592":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.stackoverflow.test_question_59176476":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.stackoverflow.test_question_60066331":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.stackoverflow.test_question_60072709":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.stackoverflow.test_question_60276839":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.statistics":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.statistics.test_v":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.statistics.test_vt":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.statistics.test_w":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.statistics.test_wt":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.stats":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.stats.test_convergence":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.stats.test_log_likelihood":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.stats_logger_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.std_col":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.step_definition_app":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.step_definition_app.features":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.step_definition_app.features.steps":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.step_definition_app.features.steps.one":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.step_definition_app.features.steps.two":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.step_definition_app.python_inside.package":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.step_definition_app.submodule":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.step_definition_app.unrelated":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.step_methods":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.hmc":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.hmc.test_hmc":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.hmc.test_nuts":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.hmc.test_quadpotential":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.test_compound":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.test_metropolis":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.test_slicer":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.storage":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.storage.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.storage.docstore":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.storage.docstore.test_dynamodb_docstore":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.storage.docstore.test_firestore_docstore":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.storage.docstore.test_mongo_docstore":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.storage.docstore.test_redis_docstore":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.storage.docstore.test_simple_docstore":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.storage.test_storage_context":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.storages_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.rdb_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.rdb_tests.test_models":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.rdb_tests.test_storage":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.rdb_tests.test_with_server":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.test_cached_storage":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.test_in_memory":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.test_storages":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.store.test_html_site_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.store.test_new_stores":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.store.test_store_backends":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.store.test_validation_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.stored_dataframes":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.stores":{
  "__set__":true,
  "elements":[
   "cachy"
  ]
 },
 "tests.stores.test_dict_store":{
  "__set__":true,
  "elements":[
   "cachy"
  ]
 },
 "tests.stores.test_file_store":{
  "__set__":true,
  "elements":[
   "cachy"
  ]
 },
 "tests.stores.test_memcached_store":{
  "__set__":true,
  "elements":[
   "cachy"
  ]
 },
 "tests.stores.test_null_store":{
  "__set__":true,
  "elements":[
   "cachy"
  ]
 },
 "tests.stores.test_redis_store":{
  "__set__":true,
  "elements":[
   "cachy"
  ]
 },
 "tests.strategies":{
  "__set__":true,
  "elements":[
   "mythx-models",
   "pandera",
   "pandera-core",
   "verta"
  ]
 },
 "tests.strategies.analysis":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.strategies.auth":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.strategies.group":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.strategies.report":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.strategies.test_strategies":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.strategies.version":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.strategy_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.struct":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.struct.test_struct":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.stub":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.conftest":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.io":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_accesslevel":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_bookmarking":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_directdriver":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_multi_database":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_routingdriver":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_transactions":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.suites":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.suites.test_suites":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.superset_test_config":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.symmetry":{
  "__set__":true,
  "elements":[
   "kinbot"
  ]
 },
 "tests.syntax":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.system":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery",
   "google-cloud-monitoring"
  ]
 },
 "tests.tables":{
  "__set__":true,
  "elements":[
   "pygrametl"
  ]
 },
 "tests.tables.test_Dimension":{
  "__set__":true,
  "elements":[
   "pygrametl"
  ]
 },
 "tests.tables.test_FactTable":{
  "__set__":true,
  "elements":[
   "pygrametl"
  ]
 },
 "tests.tapenade_tests":{
  "__set__":true,
  "elements":[
   "acorns"
  ]
 },
 "tests.techstacks_dtos":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.temporary_file_lock":{
  "__set__":true,
  "elements":[
   "portalocker"
  ]
 },
 "tests.tensor":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor._test_mpi_roundtrip":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.speed_test_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_abstract_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_blocksparse":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_bn":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_conv3d2d":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_corr":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_corr3d":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_ctc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_neighbours":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_nnet":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_sigm":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.signal":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.signal.test_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.signal.test_pool":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_basic":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_basic_scipy":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_blas":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_blas_c":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_blas_scipy":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_casting":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_complex":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_elemwise":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_extra_ops":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_fft":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_fourier":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_gc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_inc_subtensor":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_inplace":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_io":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_keepdims":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_merge":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_misc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_mlp":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_mpi":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_nlinalg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_opt_uncanonicalize":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_raw_random":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_shared_randomstreams":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_sharedvar":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_slinalg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_sort":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_subtensor":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_type_other":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_var":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_xlogx":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.test":{
  "__set__":true,
  "elements":[
   "benchmark-4dn",
   "biothings_client",
   "dtw",
   "jaws",
   "python-fsutil",
   "rabpro"
  ]
 },
 "tests.test-confluence-attach":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test7":{
  "__set__":true,
  "elements":[
   "bdsim"
  ]
 },
 "tests.test_000_PrepareDb":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_001_ConnDb":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_002_ConnDbUncatalogedConn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_003_NumAffectedRows":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_004_ConnWrongUserPwd":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_005_ConnBadUserBadPwd":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_006_ConnPassingOpts":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_007_pConnPassingOpts":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_008_ColumnInfo":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_010_UpdateRowCount":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_011_DeleteRowCount":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_012_KeysetDrivenCursorSelect01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_013_KeysetDrivenCursorSelect02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_014_KeysetDrivenCursorNegativeRow":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_015_InsertDeleteRowCount_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_016_InsertDeleteRowCount_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_017_selectRowcountPrefetchSTMTOpt":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_018_selectRowcountPrefetchSetOpt":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_019_selectRowcountPrefetchPrepOpt":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_020_RollbackDelete":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_021_CommitDelete":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_022_RollbackInsert":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_023_ColumnPrivileges":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_024_ForeignKeys":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_025_PrimaryKeys":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_030_Result":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_031_ResultIndexPosition":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_032_ResultIndexName":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_033_ResultOutSequenceColumn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_034_FetchAssoc":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_035_FetchRow_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_036_FetchRow_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_037_FetchRowIndexPos":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_038_FetchRowIndexPosNested_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_039_FetchRowIndexPosNested_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_03a_ResultNonExistCol":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_040_FetchTuple":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_041_FetchTupleMany_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_042_FetchTupleMany_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_043_FetchTupleMany_03":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_044_FetchTupleMany_04":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_045_FetchTupleBinaryData_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_046_FetchTupleMany_05":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_047_FetchTupleMany_06":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_048_FetchTupleBinaryData_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_049_InsertNoneParam":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_050_AutocommitStatus":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_051_SetAutocommit_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_052_SetAutocommit_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_053_AttrThruConn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_054_CursorType":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_060_Tables_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_061_Tables_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_062_Tables_03":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_063_Tables_04":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_064_Tables_05":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_065_FilterTableName":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_066_TableObjects":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_070_Close":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_071_CloseSuccess":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_080_ConnWrongDbAlias":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_081_ConnWrongUser":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_082_ConnWrongPwd":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_090_ConnmsgWrongDbAlias":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_091_ConnmsgWrongUser":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_092_ConnmsgWrongPwd":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_100_SelectDeleteInsertFieldCount":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_1010_to_1020":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_101_InsertDeleteFieldCount":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_102_NumFieldsSelect_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_103_NumFieldsSelect_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_110_FieldNum":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_111_FieldNumAddCol":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_112_FieldNumDiffCaseColNames":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_113_DateTest":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_114_NumericTest_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_115_NumericTest_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_116_ConnActive":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_120_FieldName":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_121_FieldNameAddCol":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_122_FieldNameDiffCaseColNames":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_123_FieldNamePos_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_124_FieldNamePos_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_125_FieldNamePos_03":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_130_PrepExecuteSelectStmt":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_131_PrepareExecuteSelectStatementParams":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_132_ExecuteStatementArrayMultipleParams":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_133_ExecuteLongInputParams":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_140_BindParamSelectStmt":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_141_BindParamSelectStmtMultipleParams_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_142_BindParamSelectStmtMultipleParams_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_143_BindParamInsertStmtNoneParam":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_144_BindParamInsertStmtPARAM_FILE":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_145_BindRetrieveNoneEmptyString":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_146_CallSPINAndOUTParams":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_147_PrepareWithWrongType":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_148_CallSPDiffBindPattern_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_150_FetchAssocSelect_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_151_FetchAssocSelect_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_152_FetchAssocSelect_03":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_153_FetchAssocSelect_04":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_154_AllFetches":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_155_FetchAssocSelect_05":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_156_FetchAssocNestedSelects_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_157_FetchAssocScrollableCursor_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_157a_FetchAssocWithoutScrollableCursorErr":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_157b_FetchAssocScrollableCursor_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_158_FetchAssocNestedSelects_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_159_FetchAssocSeveralRows_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_159a_FetchAssocSeveralRows_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_160_FetchBoth":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_161_FetchBothNestedSelects_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_162_FetchBothNestedSelects_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_180_StmtErrMsg":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_190_ColumnsTable_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_191_ColumnsTable_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_195_InsertRetrieveXMLData_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_196_InsertRetrieveXMLData_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_197_StatisticsIndexes":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_1D_ale":{
  "__set__":true,
  "elements":[
   "pyale"
  ]
 },
 "tests.test_1_xlsx":{
  "__set__":true,
  "elements":[
   "sheet2dict"
  ]
 },
 "tests.test_1st_system":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_200_MultipleRsltsetsUniformColDefs":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_2010_to_2110":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_2010_to_2310":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_201_MultipleRsltsetsDiffColDefs":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_210_FieldDisplaySize_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_211_FieldDisplaySize_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_212_FieldDisplaySize_03":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_213_FieldDisplaySize_04":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_220_PersistentConn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_221_100PersistentConns":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_230_FieldTypePos":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_231_FieldTypeName":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_232_FieldTypePosName":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_240_FieldWidthPosName_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_241_FieldWidthPosName_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_250_FreeResult_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_251_FreeResult_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_260_FetchTupleMany_07":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_261_FetchObjectAccess":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_264_InsertRetrieveBIGINTTypeColumn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_265_NoAffectedRows":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_2D_ale":{
  "__set__":true,
  "elements":[
   "pyale"
  ]
 },
 "tests.test_2_csv":{
  "__set__":true,
  "elements":[
   "sheet2dict"
  ]
 },
 "tests.test_2nd_order_grads":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.test_300_ServerInfo":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_310_ClientInfo":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_311_InsertSelectDeleteNumLiterals":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_3_xlsx":{
  "__set__":true,
  "elements":[
   "sheet2dict"
  ]
 },
 "tests.test_52949_TestSPIntVarcharXml":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_6528_ScopingProblemBindParam":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_6561_InsertNULLValues":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_6755_ExtraNULLChar_ResultCLOBCol":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_6792_FieldTypeRetStrDatetimeTimestamp":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_AudioClips":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_BaseTransform":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_Basic":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_BicgJacobi":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_Budget":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_BudgetAccountant":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_COREG":{
  "__set__":true,
  "elements":[
   "arosics"
  ]
 },
 "tests.test_COREG_LOCAL":{
  "__set__":true,
  "elements":[
   "arosics"
  ]
 },
 "tests.test_Collection":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_CompareTargetMolecule":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_Coumpound_setters":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_CustomSource":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_Descriptor":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_DoppelTestError":{
  "__set__":true,
  "elements":[
   "doppel-cli"
  ]
 },
 "tests.test_GOES":{
  "__set__":true,
  "elements":[
   "goes2go"
  ]
 },
 "tests.test_GbibClean":{
  "__set__":true,
  "elements":[
   "goosebib"
  ]
 },
 "tests.test_IO":{
  "__set__":true,
  "elements":[
   "open3spn2"
  ]
 },
 "tests.test_IOH_benchmarking":{
  "__set__":true,
  "elements":[
   "iohexperimenter"
  ]
 },
 "tests.test_IOH_function":{
  "__set__":true,
  "elements":[
   "iohexperimenter"
  ]
 },
 "tests.test_IOH_logger":{
  "__set__":true,
  "elements":[
   "iohexperimenter"
  ]
 },
 "tests.test_ImageSequenceClip":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_InsertRetrieveDateTimeTypeColumn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_IoU":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_JmaCsvCatalog":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_LoadingErrorException":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_Material":{
  "__set__":true,
  "elements":[
   "neutronics_material_maker"
  ]
 },
 "tests.test_Material_from_mixture":{
  "__set__":true,
  "elements":[
   "neutronics_material_maker"
  ]
 },
 "tests.test_Math":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_MathVector":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_MeasureSearch":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_Molecule":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_MoleculeSet":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_Multmaterial":{
  "__set__":true,
  "elements":[
   "neutronics_material_maker"
  ]
 },
 "tests.test_Mumps":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_Mutation":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_Noise2VoidDataGenerator":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.test_Noise2VoidDataWrapper":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.test_PR":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_Pardiso":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_Project":{
  "__set__":true,
  "elements":[
   "peppy"
  ]
 },
 "tests.test_Qinit":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_Scipy":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_Sensor":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_SeqLike":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SeqLikeAccessor":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SeqLike_alignment":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SeqLike_conversion_to_numerical":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SeqLike_magic_methods":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SeqLike_to_other_seq_formats":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SequenceLike":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SimilarityMeasure":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_SimilarityMeasureValueErrors":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_TaskManager":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_TextClip":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_ToolTip":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_Triangle":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_VideoClip":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_VideoFileClip":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_Videos":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_WaterNetworkAnalysis":{
  "__set__":true,
  "elements":[
   "waternetworkanalysis"
  ]
 },
 "tests.test__env":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test__missing_optional_modules":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_aaSeqLike_ntSeqLike":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_abi":{
  "__set__":true,
  "elements":[
   "goes2go"
  ]
 },
 "tests.test_abspath":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_accent":{
  "__set__":true,
  "elements":[
   "gruut-ipa"
  ]
 },
 "tests.test_accept":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_accessor":{
  "__set__":true,
  "elements":[
   "extract_model",
   "py-cordex"
  ]
 },
 "tests.test_accessors":{
  "__set__":true,
  "elements":[
   "herbie-data"
  ]
 },
 "tests.test_account":{
  "__set__":true,
  "elements":[
   "o365"
  ]
 },
 "tests.test_accuracy":{
  "__set__":true,
  "elements":[
   "nlptest"
  ]
 },
 "tests.test_action":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_actions":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_active_cells":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_active_space":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_activitysim":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_actual_docstrings":{
  "__set__":true,
  "elements":[
   "mktestdocs"
  ]
 },
 "tests.test_adaptation":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_adapter":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_adapters":{
  "__set__":true,
  "elements":[
   "erdantic"
  ]
 },
 "tests.test_adaptive":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_adaptiveHistogram":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_addressing":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_adlfs":{
  "__set__":true,
  "elements":[
   "planetary-computer"
  ]
 },
 "tests.test_advanced":{
  "__set__":true,
  "elements":[
   "markdownify"
  ]
 },
 "tests.test_adversary":{
  "__set__":true,
  "elements":[
   "artificial-adversary"
  ]
 },
 "tests.test_ae":{
  "__set__":true,
  "elements":[
   "ezyrb"
  ]
 },
 "tests.test_affinities":{
  "__set__":true,
  "elements":[
   "fasttsne"
  ]
 },
 "tests.test_aggregation":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_aggregator":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_aio_subprocess":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.test_ale":{
  "__set__":true,
  "elements":[
   "pyale"
  ]
 },
 "tests.test_alg":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.test_algorithms":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.test_align":{
  "__set__":true,
  "elements":[
   "texplain"
  ]
 },
 "tests.test_all":{
  "__set__":true,
  "elements":[
   "marinvaders",
   "pyet",
   "ukpopulation"
  ]
 },
 "tests.test_all_notebooks":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_all_sets":{
  "__set__":true,
  "elements":[
   "e3sm_diags"
  ]
 },
 "tests.test_an":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_analysis":{
  "__set__":true,
  "elements":[
   "plonk",
   "shakenbreak"
  ]
 },
 "tests.test_analysis_functions":{
  "__set__":true,
  "elements":[
   "jacqq"
  ]
 },
 "tests.test_analysis_input_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_analysis_input_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_analysis_list_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_analysis_list_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_analysis_status_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_analysis_status_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_analysis_submission_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_analysis_submission_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_analyze":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_animation":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_animations":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_ann":{
  "__set__":true,
  "elements":[
   "ezyrb"
  ]
 },
 "tests.test_annotation_vector":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_annotations":{
  "__set__":true,
  "elements":[
   "pyannote.core"
  ]
 },
 "tests.test_anon":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_anypath":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_apache_conf":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_api":{
  "__set__":true,
  "elements":[
   "flask-restplus",
   "jhub-client",
   "marinvaders",
   "markdown-it-py",
   "nb_cron",
   "pastel",
   "pygeoapi",
   "pyinfra",
   "quilt",
   "quilt3",
   "tomlkit"
  ]
 },
 "tests.test_api.test_api":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_arguments":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_command":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_config":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_deploys":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_facts":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_host":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_inventory":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_operations":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_util":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_api.test_main":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_api.test_token":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_api_handler":{
  "__set__":true,
  "elements":[
   "pythx"
  ]
 },
 "tests.test_api_ogr_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_apidoc":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_app":{
  "__set__":true,
  "elements":[
   "flask_simplelogin",
   "labelme",
   "localtileserver",
   "sanic",
   "sigpy"
  ]
 },
 "tests.test_app_settings":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "tests.test_application":{
  "__set__":true,
  "elements":[
   "magicgui",
   "msal",
   "tranquilizer",
   "web.py"
  ]
 },
 "tests.test_approximations":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_apps":{
  "__set__":true,
  "elements":[
   "afwizard",
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_cfg":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_cfg.my_app":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_cfg_groups":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_cfg_groups.conf":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_cfg_groups.my_app":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_config_with_free_group":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_config_with_free_group.my_app":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_custom_launcher":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_custom_launcher.my_app":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_split_cfg":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_with_split_cfg.my_app":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_without_config":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.app_without_config.my_app":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.interpolating_dir_hydra_to_app":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.interpolating_dir_hydra_to_app.my_app":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.sweep_complex_defaults":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_apps.sweep_complex_defaults.my_app":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_archive":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_areadetector":{
  "__set__":true,
  "elements":[
   "recordwhat"
  ]
 },
 "tests.test_arg_tool":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_args":{
  "__set__":true,
  "elements":[
   "markdownify"
  ]
 },
 "tests.test_argument_parser":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_armillary":{
  "__set__":true,
  "elements":[
   "uranography"
  ]
 },
 "tests.test_array":{
  "__set__":true,
  "elements":[
   "intake-accumulo",
   "intake-astro"
  ]
 },
 "tests.test_artifacts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_asgi":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_asm":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_asprs":{
  "__set__":true,
  "elements":[
   "afwizard"
  ]
 },
 "tests.test_assets":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_astropy":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.test_async_cursor":{
  "__set__":true,
  "elements":[
   "pyathena"
  ]
 },
 "tests.test_async_query":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_async_result":{
  "__set__":true,
  "elements":[
   "mpire"
  ]
 },
 "tests.test_async_retry":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_async_tx":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_asyncio_client":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_atmosphere":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_atom":{
  "__set__":true,
  "elements":[
   "crystals"
  ]
 },
 "tests.test_atom_number":{
  "__set__":true,
  "elements":[
   "xymol"
  ]
 },
 "tests.test_atomlist":{
  "__set__":true,
  "elements":[
   "atom"
  ]
 },
 "tests.test_attacks":{
  "__set__":true,
  "elements":[
   "artificial-adversary"
  ]
 },
 "tests.test_augmentation":{
  "__set__":true,
  "elements":[
   "nlptest"
  ]
 },
 "tests.test_auth":{
  "__set__":true,
  "elements":[
   "conda-store-server"
  ]
 },
 "tests.test_auth_login_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_auth_login_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_auth_logout_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_auth_logout_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_auth_refresh_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_auth_refresh_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_authenticate":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_authentication":{
  "__set__":true,
  "elements":[
   "pydrill"
  ]
 },
 "tests.test_authority":{
  "__set__":true,
  "elements":[
   "msal"
  ]
 },
 "tests.test_auto":{
  "__set__":true,
  "elements":[
   "pytermgui",
   "spec2nii"
  ]
 },
 "tests.test_auto_ext":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_autodiscover":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.test_autodiscover.versatileimagefield":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.test_autoflow":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_autoreload":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.test_autouri_localize":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_autouri_lock":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_availability_api":{
  "__set__":true,
  "elements":[
   "waybackpy"
  ]
 },
 "tests.test_avalanche_classification_dataset":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_avalanche_dataset":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_aws":{
  "__set__":true,
  "elements":[
   "awacs"
  ]
 },
 "tests.test_aws_iam_policies":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_axisorder":{
  "__set__":true,
  "elements":[
   "pygml"
  ]
 },
 "tests.test_azure_specific":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_backend":{
  "__set__":true,
  "elements":[
   "kbatch",
   "verta"
  ]
 },
 "tests.test_backends":{
  "__set__":true,
  "elements":[
   "magicgui"
  ]
 },
 "tests.test_backwards_compatibility":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_bad_commands_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_compile_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_cryptography_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_defusedxml_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_dl_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_duo_client_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_eval_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_exec_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_gl_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_hashlib_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_input_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_itsdangerous_kwarg_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_marshal_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_n_sp":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_bad_onelogin_kwarg_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_onelogin_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_os_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_pickle_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_popen2_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_pycrypto_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_random_generator_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_re_catastrophic_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_request":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_bad_requests_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_shelve_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_ssl_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_subprocess_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_sys_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_tarfile_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_tempfile_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_urllib3_kwarg_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_urllib3_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_xml_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_xmlrpc_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_xmlsec_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_yaml_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_zipfile_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bar":{
  "__set__":true,
  "elements":[
   "dexplot"
  ]
 },
 "tests.test_bar_charts":{
  "__set__":true,
  "elements":[
   "bar_chart_race"
  ]
 },
 "tests.test_bart":{
  "__set__":true,
  "elements":[
   "pymc-bart"
  ]
 },
 "tests.test_base":{
  "__set__":true,
  "elements":[
   "atlassian-python-api",
   "awacs",
   "codext",
   "crccheck",
   "crystals",
   "django-controlcenter",
   "django-filebrowser",
   "embetter",
   "erdantic",
   "mpl_plotter",
   "pathy",
   "pyvista-xarray",
   "sanic"
  ]
 },
 "tests.test_basePDF":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_base_class_erosion_model_boundary_handers":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_inputs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_misc":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_output_writers":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_outputs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_run":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_stochastic_erosion_model":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_two_lithology_base":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_dataclasses":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.test_base_embed":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_base_level_capture_node_baselevel_handler":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_level_generic_function_baselevel_handler":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_level_not_core_node_baselevel_handler":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_level_precip_changer":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_level_single_node_baselevel_handler":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_protocol":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_base_recipe":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_base_url":{
  "__set__":true,
  "elements":[
   "pyradios"
  ]
 },
 "tests.test_baselines":{
  "__set__":true,
  "elements":[
   "molsets"
  ]
 },
 "tests.test_baseposelist":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_basic":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "disk-objectstore",
   "histogrammar",
   "igl",
   "markdownify",
   "pampy",
   "pygments",
   "scvelo",
   "torch-optimizer"
  ]
 },
 "tests.test_basic_api":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_basic_launcher":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_basic_regression":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "tests.test_basic_s3":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_basic_types_utils":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_basics":{
  "__set__":true,
  "elements":[
   "globus-cli",
   "openfisca-france",
   "pygml"
  ]
 },
 "tests.test_basin_stats":{
  "__set__":true,
  "elements":[
   "rabpro"
  ]
 },
 "tests.test_basisset_data":{
  "__set__":true,
  "elements":[
   "aiida-gaussian-datatypes"
  ]
 },
 "tests.test_batch":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "cellpy"
  ]
 },
 "tests.test_batch_run":{
  "__set__":true,
  "elements":[
   "mesa"
  ]
 },
 "tests.test_batchrunner":{
  "__set__":true,
  "elements":[
   "mesa"
  ]
 },
 "tests.test_batchrunnerMP":{
  "__set__":true,
  "elements":[
   "mesa"
  ]
 },
 "tests.test_bdsim":{
  "__set__":true,
  "elements":[
   "bdsim"
  ]
 },
 "tests.test_beam":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_benchmark":{
  "__set__":true,
  "elements":[
   "disk-objectstore",
   "typhos"
  ]
 },
 "tests.test_benchmarks":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_bertopic":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_bias":{
  "__set__":true,
  "elements":[
   "nlptest"
  ]
 },
 "tests.test_bibtex":{
  "__set__":true,
  "elements":[
   "goosebib",
   "pygments"
  ]
 },
 "tests.test_bigint":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_binary_field":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_bindings":{
  "__set__":true,
  "elements":[
   "metview-python"
  ]
 },
 "tests.test_binnedloss":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_binnedpdf":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_binning":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_biologics":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_biomech_model":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_biomech_model_lower_limbs":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_biplots":{
  "__set__":true,
  "elements":[
   "emperor"
  ]
 },
 "tests.test_bitbucket_cloud":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_bitbucket_cloud_oo":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_bitbucket_server":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_bitbucket_server_oo":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_bl_scrunch":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_black":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_block":{
  "__set__":true,
  "elements":[
   "andes",
   "sigpy"
  ]
 },
 "tests.test_blockdiagram":{
  "__set__":true,
  "elements":[
   "bdsim"
  ]
 },
 "tests.test_blocking_client":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_blueprint_copy":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_blueprint_group":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_blueprints":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_bndfun":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.test_bool_field":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_boosting_models":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_bootstrap":{
  "__set__":true,
  "elements":[
   "pandora-geno"
  ]
 },
 "tests.test_boron":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_boron_isotopes":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_bounds":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_box":{
  "__set__":true,
  "elements":[
   "dexplot",
   "jesth"
  ]
 },
 "tests.test_breakpoint":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_broadcasting":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_browser":{
  "__set__":true,
  "elements":[
   "web.py"
  ]
 },
 "tests.test_bruker":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_bsi":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_bucket":{
  "__set__":true,
  "elements":[
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_build":{
  "__set__":true,
  "elements":[
   "ablog",
   "bamnostic",
   "tomlkit"
  ]
 },
 "tests.test_build_api":{
  "__set__":true,
  "elements":[
   "jupyter-packaging"
  ]
 },
 "tests.test_builder":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.test_builds":{
  "__set__":true,
  "elements":[
   "python-barcode"
  ]
 },
 "tests.test_bulk":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_bulk_inserts":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.test_bytes_and_string_lists":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_bytescollection":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_c_api_etk":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_c_api_jet_plume":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_c_api_overpressure":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_c_api_phys":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_c_api_qra":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_cache":{
  "__set__":true,
  "elements":[
   "pyessv",
   "pystac",
   "suds-jurko",
   "typhos",
   "xpersist",
   "zfit"
  ]
 },
 "tests.test_cache_control":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_cache_manager":{
  "__set__":true,
  "elements":[
   "cachy"
  ]
 },
 "tests.test_caching":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_calc":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_calc_n_coarse_chan":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_calcload":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_calculation_node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.test_calculator":{
  "__set__":true,
  "elements":[
   "pymace"
  ]
 },
 "tests.test_calibration":{
  "__set__":true,
  "elements":[
   "glidertools"
  ]
 },
 "tests.test_callbacks":{
  "__set__":true,
  "elements":[
   "deepforest",
   "glymur",
   "mols2grid"
  ]
 },
 "tests.test_cameraconfig":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_canopy":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_capabilities":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_caper_labels":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_caper_wdl_parser":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_caper_workflow_opts":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_capture_controller":{
  "__set__":true,
  "elements":[
   "pymagewell"
  ]
 },
 "tests.test_carbon":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_case":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_catalog":{
  "__set__":true,
  "elements":[
   "daops",
   "intake-iris",
   "intake-xarray",
   "pycsep",
   "pystac"
  ]
 },
 "tests.test_catalog.test_intake":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_catalog.test_util":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_catalyst":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_catboost_classifier":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_catboost_regression":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_cats_only":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_cbsyst":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_cdx_api":{
  "__set__":true,
  "elements":[
   "waybackpy"
  ]
 },
 "tests.test_cdx_snapshot":{
  "__set__":true,
  "elements":[
   "waybackpy"
  ]
 },
 "tests.test_cdx_utils":{
  "__set__":true,
  "elements":[
   "waybackpy"
  ]
 },
 "tests.test_cell":{
  "__set__":true,
  "elements":[
   "plottable"
  ]
 },
 "tests.test_cell_metadata":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_cell_readers":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_cellpy":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_cellpy_cmd":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_cellpy_splitting":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_cells":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_celltree":{
  "__set__":true,
  "elements":[
   "numba_celltree"
  ]
 },
 "tests.test_centerline":{
  "__set__":true,
  "elements":[
   "sed-plume"
  ]
 },
 "tests.test_cesm":{
  "__set__":true,
  "elements":[
   "intake-esm"
  ]
 },
 "tests.test_cevae":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_cfm":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_cg":{
  "__set__":true,
  "elements":[
   "pymace"
  ]
 },
 "tests.test_chain":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.test_changeable":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_characters":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_charts":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_chebfun":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.test_chebtech":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.test_check":{
  "__set__":true,
  "elements":[
   "model-index"
  ]
 },
 "tests.test_check_bounds":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_check_epsilon_delta":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_check_random_state":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_checks":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_checksum":{
  "__set__":true,
  "elements":[
   "crccheck"
  ]
 },
 "tests.test_checksums":{
  "__set__":true,
  "elements":[
   "python-barcode"
  ]
 },
 "tests.test_chemex":{
  "__set__":true,
  "elements":[
   "chemex"
  ]
 },
 "tests.test_chgcar":{
  "__set__":true,
  "elements":[
   "parsevasp"
  ]
 },
 "tests.test_chunk_grid":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_chunked_response":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_cifar100_benchmarks":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_cifar10_benchmarks":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_cinema":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_circular_imports":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_class":{
  "__set__":true,
  "elements":[
   "mktestdocs"
  ]
 },
 "tests.test_classbasedview":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_classes":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_classical_all":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_classical_ancient":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_classical_herd":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_classical_names":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_classical_person":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_classical_zero":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_classification":{
  "__set__":true,
  "elements":[
   "medcam"
  ]
 },
 "tests.test_classification.resnet_test":{
  "__set__":true,
  "elements":[
   "medcam"
  ]
 },
 "tests.test_classifier_base":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_classifier_explainer":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_classify":{
  "__set__":true,
  "elements":[
   "texplain"
  ]
 },
 "tests.test_cleaning":{
  "__set__":true,
  "elements":[
   "glidertools"
  ]
 },
 "tests.test_clexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_cli":{
  "__set__":true,
  "elements":[
   "afwizard",
   "aiida-gaussian-datatypes",
   "andes",
   "biom-format",
   "birdy",
   "compaction",
   "csv-diff",
   "erdantic",
   "explainerdashboard",
   "flask-security-too",
   "goosehdf5",
   "jupytext",
   "markdown-it-py",
   "model-index",
   "mofchecker",
   "nbgitpuller-link",
   "openamundsen",
   "optuna",
   "pathy",
   "plotext",
   "pyinfra",
   "pyopenrivercam",
   "pyremo",
   "pystac-client",
   "quilt",
   "quilt3",
   "sanic",
   "saws",
   "sed-plume",
   "shakenbreak",
   "typhos",
   "verta",
   "waybackpy"
  ]
 },
 "tests.test_cli.test_add_metadata":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_cli":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_cli.test_cli_deploy":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_cli.test_cli_exceptions":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_cli.test_cli_util":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_cli.test_context_objects":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_cli.test_endpoint":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_cli.test_registry":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_cli.test_repository":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_cli.test_show_install_info":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_subset_table":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_summarize_table":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_table_converter":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_table_normalizer":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_uc_processor":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_validate_table":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.util":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_cli_logger":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_cli_run":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_cli_server_client_gcp":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_cli_utils":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_client":{
  "__set__":true,
  "elements":[
   "birdy",
   "cloudpathlib",
   "kbatch",
   "kylinpy",
   "localtileserver",
   "msal",
   "notion-client",
   "pystac-client",
   "pythx",
   "server-thread",
   "servicestack",
   "stanza",
   "yarg"
  ]
 },
 "tests.test_client_auth":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_client_cache":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_client_connection":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_client_exceptions":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_client_fingerprint":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_client_functional":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_client_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_client_proto":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_client_request":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_client_resource_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_client_response":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_client_rest":{
  "__set__":true,
  "elements":[
   "localtileserver"
  ]
 },
 "tests.test_client_session":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_client_tool_name_middleware":{
  "__set__":true,
  "elements":[
   "pythx"
  ]
 },
 "tests.test_client_unit":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_client_utils":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_client_ws":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_client_ws_functional":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_clients":{
  "__set__":true,
  "elements":[
   "pathy"
  ]
 },
 "tests.test_climatology":{
  "__set__":true,
  "elements":[
   "esmlab"
  ]
 },
 "tests.test_clip":{
  "__set__":true,
  "elements":[
   "dask-geopandas"
  ]
 },
 "tests.test_clip_to_bounds":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_clip_to_norm":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_clock":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_cloud":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_cloud_resource":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_cloudiness":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_cloudpath_file_io":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_instantiation":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_internal":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_manipulation":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_upload_copy":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_cluster":{
  "__set__":true,
  "elements":[
   "anyscale",
   "ncar-jobqueue"
  ]
 },
 "tests.test_cluster_compute":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_cluster_env":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_clustering":{
  "__set__":true,
  "elements":[
   "pycircstat"
  ]
 },
 "tests.test_cmap":{
  "__set__":true,
  "elements":[
   "plottable"
  ]
 },
 "tests.test_cmark_spec":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_cmark_spec.test_spec":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_cmdline":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_cmip":{
  "__set__":true,
  "elements":[
   "intake-esm"
  ]
 },
 "tests.test_cmip5":{
  "__set__":true,
  "elements":[
   "intake-cmip"
  ]
 },
 "tests.test_cmor":{
  "__set__":true,
  "elements":[
   "py-cordex",
   "pyremo"
  ]
 },
 "tests.test_cmreshandler":{
  "__set__":true,
  "elements":[
   "cmreshandler"
  ]
 },
 "tests.test_cmresserializer":{
  "__set__":true,
  "elements":[
   "cmreshandler"
  ]
 },
 "tests.test_codeblock":{
  "__set__":true,
  "elements":[
   "mktestdocs"
  ]
 },
 "tests.test_codecs":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.test_codegen":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_codestream":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_codon_tables":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_coefficient":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.test_coffee":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_collection":{
  "__set__":true,
  "elements":[
   "fiona",
   "pystac"
  ]
 },
 "tests.test_collection_client":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_collection_crs":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_collection_legacy":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_collections":{
  "__set__":true,
  "elements":[
   "model-index",
   "nr.types"
  ]
 },
 "tests.test_colors":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_colour_specification_box":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_column":{
  "__set__":true,
  "elements":[
   "sparkypandy"
  ]
 },
 "tests.test_column_def":{
  "__set__":true,
  "elements":[
   "plottable"
  ]
 },
 "tests.test_columns":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_combine":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_combined":{
  "__set__":true,
  "elements":[
   "portalocker"
  ]
 },
 "tests.test_combiners":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_combustor":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_comcat":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_command_line":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_command_line_tool":{
  "__set__":true,
  "elements":[
   "remove_dagmc_tags"
  ]
 },
 "tests.test_commandline":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_commandline_entrypoint":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_commands":{
  "__set__":true,
  "elements":[
   "django-filebrowser",
   "saws"
  ]
 },
 "tests.test_common":{
  "__set__":true,
  "elements":[
   "codext",
   "flask-security-too",
   "gw-sklearn-xarray",
   "intake-esm",
   "scikit-lego"
  ]
 },
 "tests.test_common.test_basics":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_common.test_transformerselectormixin":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_common_data":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_common_metadata":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_comms":{
  "__set__":true,
  "elements":[
   "mpire"
  ]
 },
 "tests.test_compaction":{
  "__set__":true,
  "elements":[
   "compaction"
  ]
 },
 "tests.test_compare":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_compare_logs":{
  "__set__":true,
  "elements":[
   "felling"
  ]
 },
 "tests.test_compare_voyager":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_comparison":{
  "__set__":true,
  "elements":[
   "mpl_plotter"
  ]
 },
 "tests.test_compat":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_compilation":{
  "__set__":true,
  "elements":[
   "blackjax",
   "dbt"
  ]
 },
 "tests.test_compiler":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_completer":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.test_completion":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_component":{
  "__set__":true,
  "elements":[
   "compaction",
   "unifhy"
  ]
 },
 "tests.test_component_activity":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_components":{
  "__set__":true,
  "elements":[
   "bdsim",
   "yggdrasil"
  ]
 },
 "tests.test_compose":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_compositing":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_compound_crs":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_compounds":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_compressor":{
  "__set__":true,
  "elements":[
   "django-tinymce",
   "pyturbo"
  ]
 },
 "tests.test_compressor_aero":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_compressor_geom":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_compute":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_con_utils":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_concurrency":{
  "__set__":true,
  "elements":[
   "disk-objectstore",
   "verta"
  ]
 },
 "tests.test_concurrency.run_functions":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_concurrency.test_concurrency":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_concurrent":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.test_conda":{
  "__set__":true,
  "elements":[
   "conda-docker"
  ]
 },
 "tests.test_conditionals":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_conditions":{
  "__set__":true,
  "elements":[
   "awacs"
  ]
 },
 "tests.test_conf_loader":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_config":{
  "__set__":true,
  "elements":[
   "aesara",
   "aiobotocore",
   "andes",
   "btrack",
   "docker-map",
   "flask_simplelogin",
   "fps",
   "glymur",
   "gpflow",
   "intake-esm",
   "ioos_qc",
   "jupytab-server",
   "lux-api",
   "magpylib",
   "mmsegmentation",
   "openamundsen",
   "pygeoapi",
   "pylama",
   "pypythia",
   "pytermgui",
   "sanic",
   "theano-pymc",
   "verta",
   "yggdrasil"
  ]
 },
 "tests.test_config_manager":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_config_search_path":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_configuration":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_configure_felling":{
  "__set__":true,
  "elements":[
   "felling"
  ]
 },
 "tests.test_confirmable":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_confluence_advanced_mode":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_confluence_attach":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_conformance":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_connect":{
  "__set__":true,
  "elements":[
   "anyscale",
   "edgedb-python"
  ]
 },
 "tests.test_connect_helpers":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_connection":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "o365",
   "pymapd",
   "pyomniscidb",
   "webdavclient3"
  ]
 },
 "tests.test_connections":{
  "__set__":true,
  "elements":[
   "bdsim"
  ]
 },
 "tests.test_connectivity":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_connector":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_connectors":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_ansible":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_chroot":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_docker":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_dockerssh":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_local":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_mech":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_ssh":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_sshuserclient":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_terraform":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_util":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_vagrant":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_winrm":{
  "__set__":true,
  "elements":[
   "pyinfra"
  ]
 },
 "tests.test_console":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_constants":{
  "__set__":true,
  "elements":[
   "openskill",
   "sanic",
   "tifftools"
  ]
 },
 "tests.test_constraint":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_constraints":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_container":{
  "__set__":true,
  "elements":[
   "disk-objectstore"
  ]
 },
 "tests.test_content":{
  "__set__":true,
  "elements":[
   "pdfme"
  ]
 },
 "tests.test_contentsmanager":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_context":{
  "__set__":true,
  "elements":[
   "docker-map",
   "kit4dl"
  ]
 },
 "tests.test_context_processors":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_contextmanager":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_control":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_controlcharacters":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_controls":{
  "__set__":true,
  "elements":[
   "mpl-interactions"
  ]
 },
 "tests.test_conv":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.test_conventions":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_conversion":{
  "__set__":true,
  "elements":[
   "crystals",
   "xugrid"
  ]
 },
 "tests.test_conversions":{
  "__set__":true,
  "elements":[
   "markdownify"
  ]
 },
 "tests.test_convert":{
  "__set__":true,
  "elements":[
   "dataframe_image",
   "decaylanguage"
  ]
 },
 "tests.test_convert_observable":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_converter":{
  "__set__":true,
  "elements":[
   "jesth",
   "yodatools"
  ]
 },
 "tests.test_converter.test_input":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_input.test_excel":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_input.test_yamlInput":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_output":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_output.test_dbOutput":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_output.test_yamlOutput":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converters":{
  "__set__":true,
  "elements":[
   "birdy",
   "radioactivedecay"
  ]
 },
 "tests.test_convertf":{
  "__set__":true,
  "elements":[
   "pandora-geno"
  ]
 },
 "tests.test_cookiejar":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_cookies":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_coordinates":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_copying":{
  "__set__":true,
  "elements":[
   "goosehdf5"
  ]
 },
 "tests.test_cordex":{
  "__set__":true,
  "elements":[
   "py-cordex"
  ]
 },
 "tests.test_core":{
  "__set__":true,
  "elements":[
   "binary",
   "birch",
   "dask-geopandas",
   "dask_groupby",
   "edgetest",
   "emperor",
   "flox",
   "gpflow",
   "kbatch",
   "matrixprofile",
   "mesmerize-core",
   "pylama",
   "spectate",
   "weldx"
  ]
 },
 "tests.test_core50":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_core_field_functions":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_core_functions":{
  "__set__":true,
  "elements":[
   "jupyter-packaging"
  ]
 },
 "tests.test_core_instances":{
  "__set__":true,
  "elements":[
   "adagio"
  ]
 },
 "tests.test_coregion":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_corpus_dictionary":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_correctness":{
  "__set__":true,
  "elements":[
   "fasttsne"
  ]
 },
 "tests.test_cors":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_counterfactual_explanations":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_counterfactual_unit_selection":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_countmin":{
  "__set__":true,
  "elements":[
   "sketchnu"
  ]
 },
 "tests.test_cpp":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_craiyon":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_crawler":{
  "__set__":true,
  "elements":[
   "thredds_crawler"
  ]
 },
 "tests.test_crc":{
  "__set__":true,
  "elements":[
   "crccheck"
  ]
 },
 "tests.test_createDropDB":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_create_catalog":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_create_precipitator":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_create_rating":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.test_create_runoff_generator":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_create_task":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_createdbNX":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_creating":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_credentials":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_cromwell":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_cromwell_backend":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_cromwell_metadata":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_cromwell_rest_api":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_crs":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_crystal":{
  "__set__":true,
  "elements":[
   "crystals",
   "pygments"
  ]
 },
 "tests.test_csep1_evaluations":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_csound":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_csrf":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_csv__formatter":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_csv__provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_csv_diff":{
  "__set__":true,
  "elements":[
   "csv-diff"
  ]
 },
 "tests.test_ctrl":{
  "__set__":true,
  "elements":[
   "avalanche-lib",
   "ctrl-benchmark"
  ]
 },
 "tests.test_cube_source":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_cursor":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "pyathena",
   "pymapd",
   "pyomniscidb"
  ]
 },
 "tests.test_cursor_interruptions":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_cursortype":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_curve":{
  "__set__":true,
  "elements":[
   "burau"
  ]
 },
 "tests.test_curve_geometries":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_custom":{
  "__set__":true,
  "elements":[
   "autodynatrace"
  ]
 },
 "tests.test_custom_converter":{
  "__set__":true,
  "elements":[
   "markdownify"
  ]
 },
 "tests.test_custom_options":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_custom_request":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_custom_streams":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_cv":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_cycore":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_cyrilic_client_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_dae_names":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_daops":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_dashboard":{
  "__set__":true,
  "elements":[
   "explainerdashboard",
   "optuna"
  ]
 },
 "tests.test_dashboard_dumps":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_dashboards":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "tests.test_data":{
  "__set__":true,
  "elements":[
   "aiida-castep",
   "biom-format",
   "deepforest",
   "dice-ml",
   "goes2go",
   "hydrofunctions",
   "mofchecker",
   "pygments",
   "pymace",
   "pymc-base",
   "uncertainty-toolbox",
   "unifhy",
   "xugrid",
   "zfit"
  ]
 },
 "tests.test_data_arrays":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_data_checker":{
  "__set__":true,
  "elements":[
   "jacqq"
  ]
 },
 "tests.test_data_conversion":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_data_generators":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.test_data_interface":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_data_interface.test_base_data_interface":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_data_interface.test_private_data_interface":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_data_interface.test_public_data_interface":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_data_no_nulls_cpu":{
  "__set__":true,
  "elements":[
   "pymapd"
  ]
 },
 "tests.test_data_no_nulls_gpu":{
  "__set__":true,
  "elements":[
   "pymapd"
  ]
 },
 "tests.test_data_object":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_data_objects":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_data_paths":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_data_transfer":{
  "__set__":true,
  "elements":[
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_data_types":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_data_utils":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.test_data_validation":{
  "__set__":true,
  "elements":[
   "piecewise-regression"
  ]
 },
 "tests.test_data_validations":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.test_database":{
  "__set__":true,
  "elements":[
   "ezyrb",
   "mofchecker",
   "rse",
   "shared"
  ]
 },
 "tests.test_dataclass":{
  "__set__":true,
  "elements":[
   "pampy"
  ]
 },
 "tests.test_dataclasses":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "erdantic"
  ]
 },
 "tests.test_datacollector":{
  "__set__":true,
  "elements":[
   "mesa"
  ]
 },
 "tests.test_datafiles_install":{
  "__set__":true,
  "elements":[
   "jupyter-packaging"
  ]
 },
 "tests.test_datafiles_paths":{
  "__set__":true,
  "elements":[
   "jupyter-packaging"
  ]
 },
 "tests.test_dataframe":{
  "__set__":true,
  "elements":[
   "intake-accumulo",
   "intake-astro",
   "jupytab",
   "sparkypandy"
  ]
 },
 "tests.test_dataframes":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_dataholders":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_dataloader":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_dataloader.test_ui":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_dataloaders":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_datamodule":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.test_dataseries":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset":{
  "__set__":true,
  "elements":[
   "afwizard",
   "deepforest",
   "e3sm_diags",
   "larch",
   "metview-python",
   "mikeio",
   "pandora-geno",
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_anomalous":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_binning":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_grid":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_implementations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_dataset_implementations.test_dataset_implementations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_dataset_index":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_io":{
  "__set__":true,
  "elements":[
   "pyvista-xarray"
  ]
 },
 "tests.test_dataset_preserve_attributes":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_symops":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_versioning":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_dataset_versioning.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_dataset_versioning.test_dataset":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_dataset_versioning.test_dataset_version":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_datasets":{
  "__set__":true,
  "elements":[
   "causalml",
   "esmlab",
   "extract_model",
   "graspy",
   "gw-sklearn-xarray",
   "jacqq",
   "matrixprofile",
   "oddt",
   "python-flair",
   "scikit-lego",
   "verta"
  ]
 },
 "tests.test_datasets_biomedical":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_datasources":{
  "__set__":true,
  "elements":[
   "pygrametl",
   "yodapy"
  ]
 },
 "tests.test_datasources.test_datasources":{
  "__set__":true,
  "elements":[
   "yodapy"
  ]
 },
 "tests.test_datasources.test_ooi":{
  "__set__":true,
  "elements":[
   "yodapy"
  ]
 },
 "tests.test_datasources.test_ooi.test_helpers":{
  "__set__":true,
  "elements":[
   "yodapy"
  ]
 },
 "tests.test_datasources.test_ooi.test_ooi":{
  "__set__":true,
  "elements":[
   "yodapy"
  ]
 },
 "tests.test_datastore":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_datastructure":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.test_date_time":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_dates":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_datetime":{
  "__set__":true,
  "elements":[
   "edgedb-python",
   "fiona"
  ]
 },
 "tests.test_db":{
  "__set__":true,
  "elements":[
   "web.py"
  ]
 },
 "tests.test_db_parsimonious":{
  "__set__":true,
  "elements":[
   "recordwhat"
  ]
 },
 "tests.test_dbapi2":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_dbd_parsimonious":{
  "__set__":true,
  "elements":[
   "recordwhat"
  ]
 },
 "tests.test_dbimporters":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.test_dbreader":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_dcm2bids":{
  "__set__":true,
  "elements":[
   "dcm2bids"
  ]
 },
 "tests.test_dcm2niix":{
  "__set__":true,
  "elements":[
   "dcm2bids"
  ]
 },
 "tests.test_deallocate":{
  "__set__":true,
  "elements":[
   "pymapd"
  ]
 },
 "tests.test_dec_full":{
  "__set__":true,
  "elements":[
   "decaylanguage"
  ]
 },
 "tests.test_decaydata":{
  "__set__":true,
  "elements":[
   "radioactivedecay"
  ]
 },
 "tests.test_decaylanguage":{
  "__set__":true,
  "elements":[
   "decaylanguage"
  ]
 },
 "tests.test_decfloat":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_decimal":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_decisiontrees":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_deckgl_widget":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.test_decompose":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_decorator":{
  "__set__":true,
  "elements":[
   "napkin",
   "tranquilizer"
  ]
 },
 "tests.test_decorators":{
  "__set__":true,
  "elements":[
   "django-filebrowser",
   "pycircstat",
   "reciprocalspaceship",
   "stanza"
  ]
 },
 "tests.test_dedoppler":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_deepforest":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_default":{
  "__set__":true,
  "elements":[
   "embetter"
  ]
 },
 "tests.test_default_casters":{
  "__set__":true,
  "elements":[
   "birch"
  ]
 },
 "tests.test_default_utils":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_defaults":{
  "__set__":true,
  "elements":[
   "django-hosts",
   "magpylib"
  ]
 },
 "tests.test_definitions":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_definitions.test_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_deleting":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_demo":{
  "__set__":true,
  "elements":[
   "numba_celltree"
  ]
 },
 "tests.test_densities":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_dependencies":{
  "__set__":true,
  "elements":[
   "birdy",
   "responsibleai",
   "zfit"
  ]
 },
 "tests.test_dependency_instances":{
  "__set__":true,
  "elements":[
   "adagio"
  ]
 },
 "tests.test_dependency_resolution":{
  "__set__":true,
  "elements":[
   "docker-map"
  ]
 },
 "tests.test_deploy":{
  "__set__":true,
  "elements":[
   "qhub"
  ]
 },
 "tests.test_deployment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_depparse":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_depparse_data":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_deprecated":{
  "__set__":true,
  "elements":[
   "jupyter-packaging",
   "optuna"
  ]
 },
 "tests.test_deprecated_field":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_deprecation":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_deprecations":{
  "__set__":true,
  "elements":[
   "magicgui",
   "redframes"
  ]
 },
 "tests.test_deriv_hamilt":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_descriptive":{
  "__set__":true,
  "elements":[
   "pycircstat"
  ]
 },
 "tests.test_descriptors":{
  "__set__":true,
  "elements":[
   "oddt"
  ]
 },
 "tests.test_designer":{
  "__set__":true,
  "elements":[
   "pcdswidgets",
   "typhos"
  ]
 },
 "tests.test_detect":{
  "__set__":true,
  "elements":[
   "reacnetgenerator"
  ]
 },
 "tests.test_detected_issues_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_detected_issues_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_detector":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_detectors":{
  "__set__":true,
  "elements":[
   "tsod"
  ]
 },
 "tests.test_determinism":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_device":{
  "__set__":true,
  "elements":[
   "pymagewell"
  ]
 },
 "tests.test_df_image":{
  "__set__":true,
  "elements":[
   "dataframe_image"
  ]
 },
 "tests.test_dfs0":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dfs1":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dfs2":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dfs3":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dfsu":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dfsu_plot":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_diagnostics":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_dialect":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_dice":{
  "__set__":true,
  "elements":[
   "blimpy",
   "dice-ml"
  ]
 },
 "tests.test_dice_interface":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_dice_interface.test_dice_KD":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_dice_interface.test_dice_genetic":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_dice_interface.test_dice_pytorch":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_dice_interface.test_dice_random":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_dice_interface.test_dice_tensorflow":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_dice_interface.test_explainer_base":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_dict":{
  "__set__":true,
  "elements":[
   "pampy",
   "pysentiment2"
  ]
 },
 "tests.test_dict_tool":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_dictcursor":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.test_dictionary_output":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_digit_version":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_dimensionality":{
  "__set__":true,
  "elements":[
   "pygml"
  ]
 },
 "tests.test_dimensions":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_directionality":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_discovery":{
  "__set__":true,
  "elements":[
   "intake-parquet",
   "intake-spark",
   "intake-xarray"
  ]
 },
 "tests.test_discrete":{
  "__set__":true,
  "elements":[
   "andes",
   "bdsim"
  ]
 },
 "tests.test_display":{
  "__set__":true,
  "elements":[
   "dphtools",
   "lux-api",
   "magpylib",
   "typhos"
  ]
 },
 "tests.test_display_matplotlib":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_display_plotly":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_display_pyvista":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_display_utility":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_displays":{
  "__set__":true,
  "elements":[
   "bdsim"
  ]
 },
 "tests.test_distance_metrics":{
  "__set__":true,
  "elements":[
   "pandora-geno"
  ]
 },
 "tests.test_distances":{
  "__set__":true,
  "elements":[
   "gruut-ipa"
  ]
 },
 "tests.test_distortions":{
  "__set__":true,
  "elements":[
   "shakenbreak"
  ]
 },
 "tests.test_distributions":{
  "__set__":true,
  "elements":[
   "optuna",
   "pycircstat"
  ]
 },
 "tests.test_dive_numbers":{
  "__set__":true,
  "elements":[
   "glidertools"
  ]
 },
 "tests.test_django":{
  "__set__":true,
  "elements":[
   "autodynatrace"
  ]
 },
 "tests.test_dlm_perturbation":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.test_doc":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_docker_image":{
  "__set__":true,
  "elements":[
   "python-docker"
  ]
 },
 "tests.test_doclets":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.test_docs":{
  "__set__":true,
  "elements":[
   "embetter",
   "magicgui",
   "memo",
   "plateau",
   "scikit-partial"
  ]
 },
 "tests.test_docstrings":{
  "__set__":true,
  "elements":[
   "human-learn",
   "pyomeca",
   "redframes"
  ]
 },
 "tests.test_doctor":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_document":{
  "__set__":true,
  "elements":[
   "jesth",
   "pygls",
   "shared"
  ]
 },
 "tests.test_document_store":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_documentation_code_blocks":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_domain":{
  "__set__":true,
  "elements":[
   "py-cordex",
   "pyremo"
  ]
 },
 "tests.test_doscar":{
  "__set__":true,
  "elements":[
   "parsevasp"
  ]
 },
 "tests.test_dossier":{
  "__set__":true,
  "elements":[
   "shared"
  ]
 },
 "tests.test_dotnet":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_draw_utils":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_drift_removal":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "xmip"
  ]
 },
 "tests.test_driver_options":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_drivers":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_drop_each_atom":{
  "__set__":true,
  "elements":[
   "xymol"
  ]
 },
 "tests.test_drop_each_bond":{
  "__set__":true,
  "elements":[
   "xymol"
  ]
 },
 "tests.test_drvsupport":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_dsamp":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_dualquaternion":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_dump":{
  "__set__":true,
  "elements":[
   "goosehdf5",
   "tifftools"
  ]
 },
 "tests.test_dump_n_load":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_dupe_columns":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_dynamic_routes":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_dynamodb":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_easyplot":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_ec2":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "awacs"
  ]
 },
 "tests.test_ecmwf":{
  "__set__":true,
  "elements":[
   "herbie-data"
  ]
 },
 "tests.test_edr":{
  "__set__":true,
  "elements":[
   "panedr"
  ]
 },
 "tests.test_eigenval":{
  "__set__":true,
  "elements":[
   "parsevasp"
  ]
 },
 "tests.test_elaborate":{
  "__set__":true,
  "elements":[
   "pampy"
  ]
 },
 "tests.test_elasticsearch__provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_elliptics":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_em":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.test_email":{
  "__set__":true,
  "elements":[
   "felling"
  ]
 },
 "tests.test_embedding":{
  "__set__":true,
  "elements":[
   "pandora-geno"
  ]
 },
 "tests.test_embedding_comparison":{
  "__set__":true,
  "elements":[
   "pandora-geno"
  ]
 },
 "tests.test_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_en":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_en_phonemizer":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_en_tokenizer":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_encode":{
  "__set__":true,
  "elements":[
   "poster"
  ]
 },
 "tests.test_encoders":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_encoding":{
  "__set__":true,
  "elements":[
   "fiona",
   "globus-cli"
  ]
 },
 "tests.test_end2end":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_end_to_end":{
  "__set__":true,
  "elements":[
   "kotsu",
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_endless_cl_sim":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_endpoint":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_endpoint.test_endpoint":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_endpoint.test_kafka":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_endpoint.test_resources":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_energies":{
  "__set__":true,
  "elements":[
   "open3spn2"
  ]
 },
 "tests.test_energy_lowering_distortions":{
  "__set__":true,
  "elements":[
   "shakenbreak"
  ]
 },
 "tests.test_english_pipeline":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_ensembles":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_entities":{
  "__set__":true,
  "elements":[
   "flask-security-too",
   "openfisca-france",
   "verta"
  ]
 },
 "tests.test_enum":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_enum_serialization":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_env":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_environment":{
  "__set__":true,
  "elements":[
   "deepforest",
   "rocketpy"
  ]
 },
 "tests.test_environment_analysis":{
  "__set__":true,
  "elements":[
   "rocketpy"
  ]
 },
 "tests.test_eo":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_ephemeris":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_equality":{
  "__set__":true,
  "elements":[
   "awacs"
  ]
 },
 "tests.test_erd":{
  "__set__":true,
  "elements":[
   "erdantic"
  ]
 },
 "tests.test_err":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_error_generation":{
  "__set__":true,
  "elements":[
   "swot_simulator"
  ]
 },
 "tests.test_error_utils":{
  "__set__":true,
  "elements":[
   "swot_simulator"
  ]
 },
 "tests.test_error_warning":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_errorpages":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_errors":{
  "__set__":true,
  "elements":[
   "edgedb-python",
   "flask-restplus",
   "rivgraph"
  ]
 },
 "tests.test_escape_magics":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_escaping":{
  "__set__":true,
  "elements":[
   "markdownify"
  ]
 },
 "tests.test_esri_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_estimation":{
  "__set__":true,
  "elements":[
   "lifelines"
  ]
 },
 "tests.test_estimators":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_basics":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_deadzone":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_demographic_parity":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_equal_opportunity":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_gmm_naive_bayes":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_imbalanced_linear_regression":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_lad_regression":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_lowess":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_mixture_classifier":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_mixture_detector":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_neighbor_classifier":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_pca_reconstruction":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_probweight_regression":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_quantile_regression":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_randomregressor":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_umap_reconstruction":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_etag":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_eum":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_evaluate":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_evaluation":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_evaluation.test_evaluation_content_based":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_evaluation.test_evaluation_coselection":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_evaluation.test_evaluation_rouge":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_evaluations":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_evaluator":{
  "__set__":true,
  "elements":[
   "pyxel-sim",
   "xopt"
  ]
 },
 "tests.test_evapotranspiration":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_event":{
  "__set__":true,
  "elements":[
   "pymagewell"
  ]
 },
 "tests.test_event_series":{
  "__set__":true,
  "elements":[
   "pycircstat"
  ]
 },
 "tests.test_eventlog":{
  "__set__":true,
  "elements":[
   "jupyter_telemetry"
  ]
 },
 "tests.test_events":{
  "__set__":true,
  "elements":[
   "magicgui"
  ]
 },
 "tests.test_eventstreams":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_evolution":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_example":{
  "__set__":true,
  "elements":[
   "orbit-ml",
   "trio-aiohttp"
  ]
 },
 "tests.test_examplefiles":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_examples":{
  "__set__":true,
  "elements":[
   "awacs",
   "btrack",
   "disk-objectstore",
   "larch",
   "localtileserver",
   "mesa",
   "model-index",
   "moviepy",
   "platformio",
   "point_cloud_utils"
  ]
 },
 "tests.test_exception":{
  "__set__":true,
  "elements":[
   "mythx-models",
   "overpy"
  ]
 },
 "tests.test_exceptions":{
  "__set__":true,
  "elements":[
   "hydrofunctions",
   "magpylib",
   "pymonetdb",
   "responsibleai",
   "sanic",
   "webdavclient3",
   "yarg"
  ]
 },
 "tests.test_exceptions_handler":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_excitations":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_excitations_to_wires":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_execute":{
  "__set__":true,
  "elements":[
   "afwizard",
   "jhub-client",
   "pymonetdb"
  ]
 },
 "tests.test_execute_many":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_execution":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_executor":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_executor_shell":{
  "__set__":true,
  "elements":[
   "qme"
  ]
 },
 "tests.test_executor_slurm":{
  "__set__":true,
  "elements":[
   "qme"
  ]
 },
 "tests.test_expectations":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_experimental":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_experimentrun":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_artifacts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_attributes":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_deployment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_environment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_log_code":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_requirements":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_expires_heuristics":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_export":{
  "__set__":true,
  "elements":[
   "lux-api",
   "zarr-tools"
  ]
 },
 "tests.test_export_models":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.test_exporters":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_exposed_pil_image":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_ext_integration":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_extended":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_extension":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_extensions":{
  "__set__":true,
  "elements":[
   "pymdown-extensions",
   "pystac-client"
  ]
 },
 "tests.test_extensions.test_details":{
  "__set__":true,
  "elements":[
   "pymdown-extensions"
  ]
 },
 "tests.test_extensions.test_extensions_base":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_extensions.test_highlight":{
  "__set__":true,
  "elements":[
   "pymdown-extensions"
  ]
 },
 "tests.test_extensions.test_inlinehilite":{
  "__set__":true,
  "elements":[
   "pymdown-extensions"
  ]
 },
 "tests.test_extensions.test_pathconverter":{
  "__set__":true,
  "elements":[
   "pymdown-extensions"
  ]
 },
 "tests.test_extensions.test_slugs":{
  "__set__":true,
  "elements":[
   "pymdown-extensions"
  ]
 },
 "tests.test_extensions.test_superfences":{
  "__set__":true,
  "elements":[
   "pymdown-extensions"
  ]
 },
 "tests.test_external":{
  "__set__":true,
  "elements":[
   "ablog"
  ]
 },
 "tests.test_external_force":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_externalsource":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_extra":{
  "__set__":true,
  "elements":[
   "deepgram-sdk",
   "grayskull",
   "soupsieve"
  ]
 },
 "tests.test_extra.test_attribute":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_extra.test_contains":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_extra.test_custom":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_extra.test_defined":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_extract_data":{
  "__set__":true,
  "elements":[
   "metocean-api"
  ]
 },
 "tests.test_extraction":{
  "__set__":true,
  "elements":[
   "imagedataextractor"
  ]
 },
 "tests.test_ezc3d":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_ezhil":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_factory":{
  "__set__":true,
  "elements":[
   "grayskull",
   "magicgui",
   "pyessv"
  ]
 },
 "tests.test_fan_module":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_fan_module_geom":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_fancy_repr":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_fast":{
  "__set__":true,
  "elements":[
   "herbie-data"
  ]
 },
 "tests.test_fastai":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_fastvsnormal":{
  "__set__":true,
  "elements":[
   "dtw"
  ]
 },
 "tests.test_feature":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_feature_manager":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.test_feature_metadata":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.test_features":{
  "__set__":true,
  "elements":[
   "causalml",
   "gpflow",
   "gruut-ipa",
   "pyannote.core"
  ]
 },
 "tests.test_fetching":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_ffmpeg_reader":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_field_cylinder":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_field_defaults":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_field_functions":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_fields":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_fields_mask":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_fil2h5":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_file":{
  "__set__":true,
  "elements":[
   "pathy"
  ]
 },
 "tests.test_file_handler":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_file_namers":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.test_file_processing":{
  "__set__":true,
  "elements":[
   "muttlib"
  ]
 },
 "tests.test_file_source":{
  "__set__":true,
  "elements":[
   "intake-geopandas"
  ]
 },
 "tests.test_file_system":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_file_wrapper":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_filefinder":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_fileio":{
  "__set__":true,
  "elements":[
   "orsopy",
   "radioactivedecay"
  ]
 },
 "tests.test_fileio.test_base":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_fileio.test_data_source":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_fileio.test_model_language":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_fileio.test_orso":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_fileio.test_reduction":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_fileio.test_schema":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_fileio_read_csv_c3d":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_fileio_read_other_formats":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_fileio_write":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_files":{
  "__set__":true,
  "elements":[
   "jupyter_server",
   "mdv"
  ]
 },
 "tests.test_filesystem":{
  "__set__":true,
  "elements":[
   "qme"
  ]
 },
 "tests.test_filesystem_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_filetransfer":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_filetree":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_filetree.test_query":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_filetree.test_read":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_filetree.test_registration":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_filetree.test_template":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_filter":{
  "__set__":true,
  "elements":[
   "afwizard",
   "emperor"
  ]
 },
 "tests.test_filterbank_voyager":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_filtering":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_find_command":{
  "__set__":true,
  "elements":[
   "texplain"
  ]
 },
 "tests.test_finetuners":{
  "__set__":true,
  "elements":[
   "embetter"
  ]
 },
 "tests.test_fingerprint":{
  "__set__":true,
  "elements":[
   "prolif"
  ]
 },
 "tests.test_fingerprints":{
  "__set__":true,
  "elements":[
   "oddt"
  ]
 },
 "tests.test_fio_bounds":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_fio_calc":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_fio_cat":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_fio_collect":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_fio_distrib":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_fio_dump":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_fio_filter":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_fio_info":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_fio_load":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_fio_ls":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_fio_rm":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_first":{
  "__set__":true,
  "elements":[
   "herbie-data"
  ]
 },
 "tests.test_fit":{
  "__set__":true,
  "elements":[
   "piecewise-regression"
  ]
 },
 "tests.test_fit_validation":{
  "__set__":true,
  "elements":[
   "piecewise-regression"
  ]
 },
 "tests.test_fitfuncs":{
  "__set__":true,
  "elements":[
   "dphtools"
  ]
 },
 "tests.test_fitresult":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_fixes_applied":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_fixtures":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_flags":{
  "__set__":true,
  "elements":[
   "pymapvbvd"
  ]
 },
 "tests.test_flake8":{
  "__set__":true,
  "elements":[
   "yt_astro_analysis"
  ]
 },
 "tests.test_flask_compress":{
  "__set__":true,
  "elements":[
   "flask-compress"
  ]
 },
 "tests.test_flight":{
  "__set__":true,
  "elements":[
   "rocketpy"
  ]
 },
 "tests.test_flo_functions":{
  "__set__":true,
  "elements":[
   "glidertools"
  ]
 },
 "tests.test_flowcontrol_streams":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_fmnist_benckmarks":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_focal_correlations":{
  "__set__":true,
  "elements":[
   "focal-stats"
  ]
 },
 "tests.test_focal_function":{
  "__set__":true,
  "elements":[
   "focal-stats"
  ]
 },
 "tests.test_focal_statistics":{
  "__set__":true,
  "elements":[
   "focal-stats"
  ]
 },
 "tests.test_focus_entity":{
  "__set__":true,
  "elements":[
   "jacqq"
  ]
 },
 "tests.test_folium":{
  "__set__":true,
  "elements":[
   "localtileserver"
  ]
 },
 "tests.test_font":{
  "__set__":true,
  "elements":[
   "plottable"
  ]
 },
 "tests.test_footnote":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_footnote.test_fixtures":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_footnote.test_footnote":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_forecast":{
  "__set__":true,
  "elements":[
   "muttlib",
   "pycsep"
  ]
 },
 "tests.test_form":{
  "__set__":true,
  "elements":[
   "web.py"
  ]
 },
 "tests.test_format":{
  "__set__":true,
  "elements":[
   "emperor"
  ]
 },
 "tests.test_formats":{
  "__set__":true,
  "elements":[
   "jupytext",
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_formatter":{
  "__set__":true,
  "elements":[
   "pyathena"
  ]
 },
 "tests.test_formatters":{
  "__set__":true,
  "elements":[
   "plottable"
  ]
 },
 "tests.test_formatting":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.test_formdata":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_forward_dynamics":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_foundry":{
  "__set__":true,
  "elements":[
   "foundry_ml"
  ]
 },
 "tests.test_foundry_gha":{
  "__set__":true,
  "elements":[
   "foundry_ml"
  ]
 },
 "tests.test_fourier":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.test_fr":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_fr_phonemizer":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_frame":{
  "__set__":true,
  "elements":[
   "pymagewell"
  ]
 },
 "tests.test_frames":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_from_clipboard":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_from_dalle":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_from_file":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_from_image_object":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_from_stable_diffusion":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_from_url":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_front_matter":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_front_matter.test_fixtures":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_func":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_func_chainer":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_func_utils":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.test_function":{
  "__set__":true,
  "elements":[
   "jupytab",
   "rocketpy"
  ]
 },
 "tests.test_functional_interface":{
  "__set__":true,
  "elements":[
   "starfile"
  ]
 },
 "tests.test_functions":{
  "__set__":true,
  "elements":[
   "bdsim",
   "flask-restless",
   "nptyping"
  ]
 },
 "tests.test_functions.test_get_type":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_functions.test_py_type":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_functor_pdf":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_fx":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_g2p":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_gas_generator":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_gateway":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_gcmt":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_gcp_managed_setup_utils":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_gcp_utils":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_gcp_verification":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_gcsuri":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_gdrive":{
  "__set__":true,
  "elements":[
   "muttlib"
  ]
 },
 "tests.test_ge_pfile":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_ge_pfile_orientation":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_gefs":{
  "__set__":true,
  "elements":[
   "herbie-data"
  ]
 },
 "tests.test_gemgis":{
  "__set__":true,
  "elements":[
   "gemgis"
  ]
 },
 "tests.test_general_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_generate":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.test_generate_datasets":{
  "__set__":true,
  "elements":[
   "lifelines"
  ]
 },
 "tests.test_generated":{
  "__set__":true,
  "elements":[
   "codext"
  ]
 },
 "tests.test_generator":{
  "__set__":true,
  "elements":[
   "swagger-django-generator",
   "xopt"
  ]
 },
 "tests.test_generic":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "mikeio",
   "mpl-interactions",
   "nr.types",
   "xclim"
  ]
 },
 "tests.test_generic_geom":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_genericmotor":{
  "__set__":true,
  "elements":[
   "rocketpy"
  ]
 },
 "tests.test_geo":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_coord_grid":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_coord_trafo":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_map_info":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_projection":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_vector":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_vector.test_geometry":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo_utils":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_geoarray":{
  "__set__":true,
  "elements":[
   "geoarray"
  ]
 },
 "tests.test_geofile":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_gpd":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_ogr_singlelayer":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_ogr_twolayers":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer_gpd":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer_ogr":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer_sql":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_twolayers":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofiletype":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geohash":{
  "__set__":true,
  "elements":[
   "dask-geopandas"
  ]
 },
 "tests.test_geojson":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_geojson_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_geom3d":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_geometry":{
  "__set__":true,
  "elements":[
   "fiona",
   "mofchecker",
   "weldx"
  ]
 },
 "tests.test_geometry_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geometry_utils":{
  "__set__":true,
  "elements":[
   "movingpandas",
   "numba_celltree"
  ]
 },
 "tests.test_geopackage":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_georss":{
  "__set__":true,
  "elements":[
   "pygml"
  ]
 },
 "tests.test_geoseries_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geotiff":{
  "__set__":true,
  "elements":[
   "python-geotiff"
  ]
 },
 "tests.test_getBH_dict":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_getBH_interfaces":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_getBH_level2":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_getBHv":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_gfile":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_gfs":{
  "__set__":true,
  "elements":[
   "herbie-data"
  ]
 },
 "tests.test_github_recipes":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_gliders":{
  "__set__":true,
  "elements":[
   "ioos_qc"
  ]
 },
 "tests.test_glm":{
  "__set__":true,
  "elements":[
   "goes2go"
  ]
 },
 "tests.test_global_structure":{
  "__set__":true,
  "elements":[
   "mofchecker"
  ]
 },
 "tests.test_globals":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_gns":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_golden_rules":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_goofit":{
  "__set__":true,
  "elements":[
   "decaylanguage"
  ]
 },
 "tests.test_governance":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.test_gpcca":{
  "__set__":true,
  "elements":[
   "pygpcca"
  ]
 },
 "tests.test_gplvm":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_gpr":{
  "__set__":true,
  "elements":[
   "ezyrb"
  ]
 },
 "tests.test_gpu":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_graceful_shutdown":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_gradient":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_grammar":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.test_graph":{
  "__set__":true,
  "elements":[
   "bionc",
   "pgraph-python",
   "zfit"
  ]
 },
 "tests.test_greedy":{
  "__set__":true,
  "elements":[
   "greedy"
  ]
 },
 "tests.test_grid":{
  "__set__":true,
  "elements":[
   "memo",
   "mesa"
  ]
 },
 "tests.test_grid_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_gridcal":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_gridded_output":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_grids":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "gridtest",
   "xmip"
  ]
 },
 "tests.test_gridtest":{
  "__set__":true,
  "elements":[
   "gridtest"
  ]
 },
 "tests.test_group":{
  "__set__":true,
  "elements":[
   "aiida-gaussian-datatypes",
   "andes"
  ]
 },
 "tests.test_group_creation_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_group_creation_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_group_data_middleware":{
  "__set__":true,
  "elements":[
   "pythx"
  ]
 },
 "tests.test_group_list_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_group_list_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_group_operation_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_group_operation_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_group_status_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_group_status_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_groupby":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_gs_specific":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_guessing":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_guppi":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_h52fil":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_h5diag":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_h5py":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_handler":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.test_handler_annotations":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_harness":{
  "__set__":true,
  "elements":[
   "nlptest"
  ]
 },
 "tests.test_has_field":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_has_field_many":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_hash":{
  "__set__":true,
  "elements":[
   "mofchecker"
  ]
 },
 "tests.test_hashes":{
  "__set__":true,
  "elements":[
   "sketchnu"
  ]
 },
 "tests.test_hashing":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_header":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_headers":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_heavy":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_heavyhitters":{
  "__set__":true,
  "elements":[
   "sketchnu"
  ]
 },
 "tests.test_helper":{
  "__set__":true,
  "elements":[
   "aiida-castep",
   "geofileops",
   "moviepy"
  ]
 },
 "tests.test_helper_method":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_helpers":{
  "__set__":true,
  "elements":[
   "aiohttp",
   "awacs",
   "cellpy",
   "dice-ml",
   "dlint",
   "hydrofunctions",
   "localtileserver",
   "mikeio",
   "mpl-interactions",
   "notion-client",
   "plottable",
   "pytermgui",
   "sanic",
   "sketchnu"
  ]
 },
 "tests.test_helpers.test_bad_builtin_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_kwarg_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_module_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_name_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_hf_state":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_hickle":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.test_hickle_helpers":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.test_hierarchical_clustering":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_high_level_generators":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_highlight_markup_literal":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_hilbert_distance":{
  "__set__":true,
  "elements":[
   "dask-geopandas"
  ]
 },
 "tests.test_histograms":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_hmc":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_hocon_string":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_homegenous_transform":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_hook":{
  "__set__":true,
  "elements":[
   "edgetest-conda",
   "edgetest-hub",
   "edgetest-pip-tools"
  ]
 },
 "tests.test_horizon":{
  "__set__":true,
  "elements":[
   "uranography"
  ]
 },
 "tests.test_hrrr":{
  "__set__":true,
  "elements":[
   "herbie-data"
  ]
 },
 "tests.test_html_formatter":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_html_parser":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_http":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_http_alt_svc":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_http_exceptions":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_http_parser":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_http_session":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_http_writer":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_httpurl":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_huge_message":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_huggingface":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_huggingface_model":{
  "__set__":true,
  "elements":[
   "nlptest"
  ]
 },
 "tests.test_human_text":{
  "__set__":true,
  "elements":[
   "csv-diff"
  ]
 },
 "tests.test_hybrid36":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "tests.test_hybridmotor":{
  "__set__":true,
  "elements":[
   "rocketpy"
  ]
 },
 "tests.test_hydra":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_hydrofunctions":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_hydrogen_orientation":{
  "__set__":true,
  "elements":[
   "conservedwatersearch"
  ]
 },
 "tests.test_hyperloglog":{
  "__set__":true,
  "elements":[
   "sketchnu"
  ]
 },
 "tests.test_hyperparameter":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_iam":{
  "__set__":true,
  "elements":[
   "awacs"
  ]
 },
 "tests.test_ica":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_icons":{
  "__set__":true,
  "elements":[
   "pcdswidgets"
  ]
 },
 "tests.test_idce":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_ideal_gas":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_identify_alphabet":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_ifelse":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_ifp":{
  "__set__":true,
  "elements":[
   "prolif"
  ]
 },
 "tests.test_im_utils":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_image":{
  "__set__":true,
  "elements":[
   "intake-xarray",
   "magicgui"
  ]
 },
 "tests.test_images":{
  "__set__":true,
  "elements":[
   "model-index"
  ]
 },
 "tests.test_import":{
  "__set__":true,
  "elements":[
   "dbt",
   "dtw",
   "model-index",
   "panda3d_viewer",
   "python-utils",
   "rse"
  ]
 },
 "tests.test_import_namespace":{
  "__set__":true,
  "elements":[
   "mesa"
  ]
 },
 "tests.test_importance":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_imported_enums":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_imports":{
  "__set__":true,
  "elements":[
   "aiohttp",
   "glidertools",
   "optuna"
  ]
 },
 "tests.test_imports_util":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_imputation":{
  "__set__":true,
  "elements":[
   "pandora-geno"
  ]
 },
 "tests.test_in_out":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_incar":{
  "__set__":true,
  "elements":[
   "parsevasp"
  ]
 },
 "tests.test_incremental":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.test_indent":{
  "__set__":true,
  "elements":[
   "texplain"
  ]
 },
 "tests.test_indent_long":{
  "__set__":true,
  "elements":[
   "texplain"
  ]
 },
 "tests.test_indent_options":{
  "__set__":true,
  "elements":[
   "texplain"
  ]
 },
 "tests.test_indent_texindent":{
  "__set__":true,
  "elements":[
   "texplain"
  ]
 },
 "tests.test_index":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_indexer":{
  "__set__":true,
  "elements":[
   "metview-python"
  ]
 },
 "tests.test_indicator_helpers":{
  "__set__":true,
  "elements":[
   "technical"
  ]
 },
 "tests.test_indicators":{
  "__set__":true,
  "elements":[
   "technical"
  ]
 },
 "tests.test_indices":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_inflections":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_ingv_rcmt_reader_csv":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_ingv_readers":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_inherit":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_init":{
  "__set__":true,
  "elements":[
   "anyscale",
   "pygrametl",
   "python-barcode",
   "qhub",
   "sphinx-js"
  ]
 },
 "tests.test_initial_point":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.test_inlet_module":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_inline":{
  "__set__":true,
  "elements":[
   "mdv"
  ]
 },
 "tests.test_inline_pronunciations":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_ino2cpp":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.test_input":{
  "__set__":true,
  "elements":[
   "docker-map",
   "shakenbreak"
  ]
 },
 "tests.test_input_checks":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_input_output":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_input_parameters":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_inputs":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_insights":{
  "__set__":true,
  "elements":[
   "mpire"
  ]
 },
 "tests.test_inspect":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_inspection_utils":{
  "__set__":true,
  "elements":[
   "pandera",
   "pandera-core"
  ]
 },
 "tests.test_install":{
  "__set__":true,
  "elements":[
   "jupyter-packaging"
  ]
 },
 "tests.test_installation":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_int_mats":{
  "__set__":true,
  "elements":[
   "pfapack"
  ]
 },
 "tests.test_intake_es":{
  "__set__":true,
  "elements":[
   "intake-elasticsearch"
  ]
 },
 "tests.test_intake_iris":{
  "__set__":true,
  "elements":[
   "intake-iris"
  ]
 },
 "tests.test_intake_xarray":{
  "__set__":true,
  "elements":[
   "intake-xarray"
  ]
 },
 "tests.test_integraiton":{
  "__set__":true,
  "elements":[
   "condorpy"
  ]
 },
 "tests.test_integrate":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_integration":{
  "__set__":true,
  "elements":[
   "cmyt",
   "edgetest",
   "fiona",
   "hydra-core",
   "mpl_plotter",
   "pangeo-forge-recipes",
   "pymapd",
   "pyomniscidb",
   "python-docker",
   "spectrumdevice",
   "vizlo"
  ]
 },
 "tests.test_integration_cfg":{
  "__set__":true,
  "elements":[
   "edgetest"
  ]
 },
 "tests.test_integration_toml":{
  "__set__":true,
  "elements":[
   "edgetest"
  ]
 },
 "tests.test_integrations":{
  "__set__":true,
  "elements":[
   "anyscale",
   "cloudpathlib",
   "pytmc",
   "verta"
  ]
 },
 "tests.test_integrators":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_interactions":{
  "__set__":true,
  "elements":[
   "oddt",
   "prolif"
  ]
 },
 "tests.test_interceptor":{
  "__set__":true,
  "elements":[
   "mastercard-oauth1-signer"
  ]
 },
 "tests.test_interchange":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_interestingness":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_interface":{
  "__set__":true,
  "elements":[
   "edgetest",
   "mols2grid",
   "nr.types",
   "pyessv"
  ]
 },
 "tests.test_interface_cfg":{
  "__set__":true,
  "elements":[
   "edgetest"
  ]
 },
 "tests.test_interface_toml":{
  "__set__":true,
  "elements":[
   "edgetest"
  ]
 },
 "tests.test_interp":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.test_interpolate":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_interpolation":{
  "__set__":true,
  "elements":[
   "mikeio",
   "plonk"
  ]
 },
 "tests.test_inventory":{
  "__set__":true,
  "elements":[
   "radioactivedecay"
  ]
 },
 "tests.test_inverse_dynamics":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_io":{
  "__set__":true,
  "elements":[
   "amset",
   "btrack",
   "graspy",
   "kit4dl",
   "matrixprofile",
   "py-tools-ds",
   "redframes",
   "shakenbreak",
   "xopt"
  ]
 },
 "tests.test_io.test_raster":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_io.test_raster.test_gdal":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_io_manager":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.test_io_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_ipc":{
  "__set__":true,
  "elements":[
   "pymapd"
  ]
 },
 "tests.test_ipygany":{
  "__set__":true,
  "elements":[
   "ipygany"
  ]
 },
 "tests.test_ipynb_to_R":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_ipynb_to_py":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_ipynb_to_rmd":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_ir":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.test_irc_formatter":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_is_ground":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_is_initialized":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_is_stale":{
  "__set__":true,
  "elements":[
   "jupyter-packaging"
  ]
 },
 "tests.test_isocolor":{
  "__set__":true,
  "elements":[
   "ipygany"
  ]
 },
 "tests.test_issue_11":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_issue_69":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_issues":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "moviepy"
  ]
 },
 "tests.test_it":{
  "__set__":true,
  "elements":[
   "awslogs"
  ]
 },
 "tests.test_item":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_item_collection":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_item_search":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_items":{
  "__set__":true,
  "elements":[
   "pyrobuf",
   "tomlkit"
  ]
 },
 "tests.test_iterable":{
  "__set__":true,
  "elements":[
   "pampy"
  ]
 },
 "tests.test_ivlearner":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_java":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_javascript":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_jira":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_jmrui":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_job":{
  "__set__":true,
  "elements":[
   "condorpy"
  ]
 },
 "tests.test_job_output":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_join":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_joints":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_journals":{
  "__set__":true,
  "elements":[
   "goosebib"
  ]
 },
 "tests.test_jp2box":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_jp2box_jpx":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_jp2box_uuid":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_jp2box_xml":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_jp2k":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_json":{
  "__set__":true,
  "elements":[
   "overpy"
  ]
 },
 "tests.test_json_decoding":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_json_encoding":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_jsonapi":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_creating_resources":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_deleting_resources":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_document_structure":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_fetching_data":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_server_responsibilities":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_updating_relationships":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_updating_resources":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsondate":{
  "__set__":true,
  "elements":[
   "jsondate"
  ]
 },
 "tests.test_jsonpatch":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonserviceclient":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_julia":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_jupytext_errors":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_k_neighbors_regressor":{
  "__set__":true,
  "elements":[
   "ezyrb"
  ]
 },
 "tests.test_kde_funcs":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_ke3_service":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_ke4_model_source":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_ke4_service":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_keep_alive_timeout":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_keras":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_keras_retinanet":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_kerns":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_keys":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.test_kim_convergence":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_batch":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_outlier":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_scale":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats_beta_dist":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats_nonnormal_test":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats_normal_test":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats_s_normal_dist":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats_t_dist":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_timeseries":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_timeseries_equilibration_length":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_ucl":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_ucl_mser_m":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_edn":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_comment":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_decode":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_default":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_dump":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_encode_basestring_ascii":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_enum":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_fail":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_float":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_indent":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_pass1":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_pass2":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_pass3":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_recursion":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_scanstring":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_edn.test_unicode":{
  "__set__":true,
  "elements":[
   "kim-edn",
   "kim_edn"
  ]
 },
 "tests.test_kim_property":{
  "__set__":true,
  "elements":[
   "kim-property",
   "kim_property"
  ]
 },
 "tests.test_kim_property.test_create":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_definition":{
  "__set__":true,
  "elements":[
   "kim-property",
   "kim_property"
  ]
 },
 "tests.test_kim_property.test_destroy":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_instance":{
  "__set__":true,
  "elements":[
   "kim-property",
   "kim_property"
  ]
 },
 "tests.test_kim_property.test_kim_property":{
  "__set__":true,
  "elements":[
   "kim-property",
   "kim_property"
  ]
 },
 "tests.test_kim_property.test_modify":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_numeric":{
  "__set__":true,
  "elements":[
   "kim-property",
   "kim_property"
  ]
 },
 "tests.test_kim_property.test_pickle":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kinbot":{
  "__set__":true,
  "elements":[
   "kinbot"
  ]
 },
 "tests.test_kldiv":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_knitr_spin":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_known_good":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_kotlin":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_kpoints":{
  "__set__":true,
  "elements":[
   "parsevasp"
  ]
 },
 "tests.test_kylin_service":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_kylin_types":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_kylinpy":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_l10n":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_label":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_labels":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_ladybugs":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_lambda":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_lang":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_language_model":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_language_server":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.test_lastools":{
  "__set__":true,
  "elements":[
   "afwizard"
  ]
 },
 "tests.test_latent_class":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_latent_gaussian":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_latentdistributiontest":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_latentpositiontest":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_latex_formatter":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_lattice":{
  "__set__":true,
  "elements":[
   "crystals"
  ]
 },
 "tests.test_laue":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_launcher":{
  "__set__":true,
  "elements":[
   "swot_simulator"
  ]
 },
 "tests.test_layer":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_layout":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_layouts":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_leaflet":{
  "__set__":true,
  "elements":[
   "localtileserver"
  ]
 },
 "tests.test_legacy_load":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.test_lemmatizer":{
  "__set__":true,
  "elements":[
   "python-flair",
   "stanza"
  ]
 },
 "tests.test_level1":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_active":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_at_rule":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_class":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_comments":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_descendant":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_escapes":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_id":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_link":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_list":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_pseudo_class":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_pseudo_element":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_visited":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_attribute":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_first_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_focus":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_hover":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_lang":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_next_sibling":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_universal_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_attribute":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_checked":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_disabled":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_empty":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_enabled":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_first_of_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_last_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_last_of_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_namespace":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_not":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_last_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_last_of_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_of_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_only_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_only_of_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_root":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_subsequent_sibling":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_target":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_any_link":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_attribute":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_current":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_default":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_dir":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_focus_visible":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_focus_within":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_future":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_has":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_host":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_host_context":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_in_range":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_indeterminate":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_is":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_lang":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_local_link":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_matches":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_not":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_nth_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_optional":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_out_of_range":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_past":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_paused":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_placeholder_shown":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_playing":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_read_only":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_read_write":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_required":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_scope":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_target_within":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_user_invalid":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_where":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_lexers_other":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_lgbm":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_lib":{
  "__set__":true,
  "elements":[
   "edgetest",
   "pyale",
   "xyzservices"
  ]
 },
 "tests.test_library":{
  "__set__":true,
  "elements":[
   "afwizard",
   "model-index"
  ]
 },
 "tests.test_libtiff":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_lifespan":{
  "__set__":true,
  "elements":[
   "mesa"
  ]
 },
 "tests.test_lightning":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_likelihoods":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_limit":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_linalg":{
  "__set__":true,
  "elements":[
   "bdsim"
  ]
 },
 "tests.test_line":{
  "__set__":true,
  "elements":[
   "dexplot"
  ]
 },
 "tests.test_linear":{
  "__set__":true,
  "elements":[
   "ezyrb",
   "larch"
  ]
 },
 "tests.test_linear_diffusion":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_linear_model":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_link":{
  "__set__":true,
  "elements":[
   "nbgitpuller-link",
   "pystac"
  ]
 },
 "tests.test_linker":{
  "__set__":true,
  "elements":[
   "dbt"
  ]
 },
 "tests.test_linop":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.test_lint":{
  "__set__":true,
  "elements":[
   "nbsmoke",
   "pytmc"
  ]
 },
 "tests.test_lint_magics":{
  "__set__":true,
  "elements":[
   "nbsmoke"
  ]
 },
 "tests.test_lint_magics_hv":{
  "__set__":true,
  "elements":[
   "nbsmoke"
  ]
 },
 "tests.test_linters":{
  "__set__":true,
  "elements":[
   "pylama"
  ]
 },
 "tests.test_liquidmotor":{
  "__set__":true,
  "elements":[
   "rocketpy"
  ]
 },
 "tests.test_listing":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_lists":{
  "__set__":true,
  "elements":[
   "markdownify",
   "pyrobuf"
  ]
 },
 "tests.test_ln_utils":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_load":{
  "__set__":true,
  "elements":[
   "glidertools"
  ]
 },
 "tests.test_load_local":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.test_load_multiple":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_loaders":{
  "__set__":true,
  "elements":[
   "pymapd"
  ]
 },
 "tests.test_local":{
  "__set__":true,
  "elements":[
   "cloudpathlib",
   "shakenbreak"
  ]
 },
 "tests.test_local_structure":{
  "__set__":true,
  "elements":[
   "mofchecker"
  ]
 },
 "tests.test_locking":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_locks":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_log":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_log_code":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_logdensities":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_logger":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_loggers":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_logging":{
  "__set__":true,
  "elements":[
   "daops",
   "optuna",
   "sanic"
  ]
 },
 "tests.test_logo":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_logutils":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_loop":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_loss":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_magicgui":{
  "__set__":true,
  "elements":[
   "magicgui"
  ]
 },
 "tests.test_magpyVector":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_mailbox":{
  "__set__":true,
  "elements":[
   "o365"
  ]
 },
 "tests.test_main":{
  "__set__":true,
  "elements":[
   "deepforest",
   "dvclive",
   "enstat",
   "goosempl",
   "jupyter-packaging",
   "mesa",
   "mikeio",
   "regressio",
   "sumy",
   "tifftools",
   "tranquilizer"
  ]
 },
 "tests.test_maintainence":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_maintenance":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.test_manager":{
  "__set__":true,
  "elements":[
   "flask-restless",
   "server-thread"
  ]
 },
 "tests.test_manual":{
  "__set__":true,
  "elements":[
   "codext"
  ]
 },
 "tests.test_manually":{
  "__set__":true,
  "elements":[
   "python-barcode"
  ]
 },
 "tests.test_mapi":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_mapi_uri":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_mapping":{
  "__set__":true,
  "elements":[
   "glidertools"
  ]
 },
 "tests.test_maps_ordereddict":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_markdown":{
  "__set__":true,
  "elements":[
   "mktestdocs",
   "model-index"
  ]
 },
 "tests.test_markdown_lexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_marker":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_marker_casadi":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_markov_draftjs":{
  "__set__":true,
  "elements":[
   "markov_draftjs"
  ]
 },
 "tests.test_marquez_client":{
  "__set__":true,
  "elements":[
   "marquez-python"
  ]
 },
 "tests.test_marquez_clients":{
  "__set__":true,
  "elements":[
   "marquez-python"
  ]
 },
 "tests.test_marshalling":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_mase":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_mask":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_mass2":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_mass_matrix":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_match":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_match_fils":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_math":{
  "__set__":true,
  "elements":[
   "markdown-it-py",
   "pycsep",
   "pymc-base",
   "zfit"
  ]
 },
 "tests.test_math.test_math":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_maths":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_max_age":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_mds":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_mean_functions":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_meanfield":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_measurement":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.test_memfile":{
  "__set__":true,
  "elements":[
   "memo"
  ]
 },
 "tests.test_memlist":{
  "__set__":true,
  "elements":[
   "memo"
  ]
 },
 "tests.test_memory":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_memoryfile":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_merge_from":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_mesh":{
  "__set__":true,
  "elements":[
   "mikeio",
   "xrd_simulator"
  ]
 },
 "tests.test_meshkernel_utils":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_message":{
  "__set__":true,
  "elements":[
   "o365",
   "pyrobuf"
  ]
 },
 "tests.test_message_field_types":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_message_init_kwargs":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_message_with_colon_at_end":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_message_with_no_fields":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_meta":{
  "__set__":true,
  "elements":[
   "fiona",
   "nr.types",
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_confusion_balancer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_decay_estimator":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_estimatortransformer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_grouped_model":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_grouped_predictor":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_grouped_transformer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_outlier_classifier":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_outlier_remover":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_regression_outlier":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_subjective_classifier":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_thresholder":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_zero_inflated_regressor":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta_learners":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_metadata":{
  "__set__":true,
  "elements":[
   "autouri",
   "flask-restless",
   "geoarray",
   "openfisca-france",
   "verta"
  ]
 },
 "tests.test_metadata_filter":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_meteo":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_meteo_input":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_method_equivalence":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_methods":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_metrics":{
  "__set__":true,
  "elements":[
   "avalanche-lib",
   "blackjax",
   "kit4dl",
   "molsets",
   "oddt",
   "pydrill",
   "scikit-lego",
   "uncertainty-toolbox"
  ]
 },
 "tests.test_metrics.test_correlation_score":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_equal_opportunity":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_p_percent":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_subset_metric":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_metrics_accuracy":{
  "__set__":true,
  "elements":[
   "uncertainty-toolbox"
  ]
 },
 "tests.test_metrics_calibration":{
  "__set__":true,
  "elements":[
   "uncertainty-toolbox"
  ]
 },
 "tests.test_metrics_scoring_rule":{
  "__set__":true,
  "elements":[
   "uncertainty-toolbox"
  ]
 },
 "tests.test_metview":{
  "__set__":true,
  "elements":[
   "metview-python"
  ]
 },
 "tests.test_mex":{
  "__set__":true,
  "elements":[
   "msal"
  ]
 },
 "tests.test_middleware":{
  "__set__":true,
  "elements":[
   "django-hosts",
   "sanic"
  ]
 },
 "tests.test_middlewares":{
  "__set__":true,
  "elements":[
   "tinydb"
  ]
 },
 "tests.test_migrations":{
  "__set__":true,
  "elements":[
   "djangocms-admin-style"
  ]
 },
 "tests.test_minimizer":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_mirror":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_misc":{
  "__set__":true,
  "elements":[
   "flask-security-too",
   "gemgis",
   "gpflow",
   "jesth",
   "magpylib",
   "moviepy",
   "platformio",
   "shared",
   "trio-asyncio",
   "trio_asyncio",
   "xdmfwrite_h5py"
  ]
 },
 "tests.test_missing_plotly":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_mixer_fluid":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_mixer_shaft":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_mixins":{
  "__set__":true,
  "elements":[
   "kit4dl"
  ]
 },
 "tests.test_mktestdocs":{
  "__set__":true,
  "elements":[
   "mktestdocs"
  ]
 },
 "tests.test_mlconjug":{
  "__set__":true,
  "elements":[
   "mlconjug3"
  ]
 },
 "tests.test_mmcv":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_mnist_benckmarks":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_mock":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.test_model":{
  "__set__":true,
  "elements":[
   "deepforest",
   "dice-ml",
   "fiona",
   "flask-restplus",
   "gpflow",
   "lume-model",
   "mesa",
   "openamundsen",
   "plasmaboundaries",
   "pyessv",
   "pymc-base",
   "unifhy"
  ]
 },
 "tests.test_model5":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_model_basicCh":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicChRt_and_basicChRtTh":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicChSa":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicDd":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdHy":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdRt":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdSt":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicHyRt":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicHySa":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicHyVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicHy_and_basicHySt":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicRtSa_basicSa_basicSaVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicRtTh":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicRtVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicSaVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicStVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicSt_basicStTh":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicTh":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicThVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_creation":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_model_graph":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.test_model_group":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_model_interface":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_model_interface.test_base_model":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_model_interface.test_keras_tensorflow_model":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_model_interface.test_pytorch_model":{
  "__set__":true,
  "elements":[
   "dice-ml"
  ]
 },
 "tests.test_model_registry":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_model_registry.test_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_model_registry.test_model_base":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_model_registry.test_model_version":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_model_registry.test_standard_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_model_selection":{
  "__set__":true,
  "elements":[
   "gw-sklearn-xarray",
   "piecewise-regression",
   "scikit-lego"
  ]
 },
 "tests.test_model_selection.test_grouptimeseriessplit":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_model_selection.test_klusterfold":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_model_selection.test_timegapsplit":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_model_serializer":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.test_modelhandler":{
  "__set__":true,
  "elements":[
   "nlptest"
  ]
 },
 "tests.test_modeline":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_models":{
  "__set__":true,
  "elements":[
   "avalanche-lib",
   "bertopic",
   "btrack",
   "django-tinymce",
   "graspy",
   "mmsegmentation",
   "oddt",
   "pymace",
   "python-flair",
   "sumy"
  ]
 },
 "tests.test_models.test_backbones":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_beit":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_bisenetv1":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_bisenetv2":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_blocks":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_cgnet":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_clip_text_encoder":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_erfnet":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_fast_scnn":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_hrnet":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_icnet":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_mae":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_mit":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_mobilenet_v3":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_mscan":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_pidnet":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_resnest":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_resnet":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_resnext":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_stdc":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_swin":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_timm_backbone":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_twins":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_unet":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_vit":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_vpd":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.utils":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_data_preprocessor":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_dom":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_models.test_forward":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_ann_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_apc_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_aspp_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_cc_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_decode_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_dm_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_dnl_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_dpt_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_ema_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_fcn_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_gc_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_ham_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_isa_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_lraspp_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_mask2former_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_maskformer_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_nl_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_ocr_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_pidnet_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_psa_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_psp_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_san_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_segformer_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_segmenter_mask_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_setr_mla_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_setr_up_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_uper_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_vpd_depth_head":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.utils":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_feature2pyramid":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_fpn":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_ic_neck":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_jpu":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_mla_neck":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_multilevel_neck":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.test_cascade_encoder_decoder":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.test_depth_estimator":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.test_encoder_decoder":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.test_multimodal_encoder_decoder":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.test_seg_tta_model":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.utils":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_tf":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_models.test_utils":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_utils.test_embed":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_utils.test_shape_convert":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_models_accuracy":{
  "__set__":true,
  "elements":[
   "pyprocessmacro"
  ]
 },
 "tests.test_modules":{
  "__set__":true,
  "elements":[
   "pymace",
   "xclim"
  ]
 },
 "tests.test_mofchecker":{
  "__set__":true,
  "elements":[
   "mofchecker"
  ]
 },
 "tests.test_molecular_hamiltonian":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_molecule":{
  "__set__":true,
  "elements":[
   "prolif"
  ]
 },
 "tests.test_molgrid":{
  "__set__":true,
  "elements":[
   "mols2grid"
  ]
 },
 "tests.test_mollweide":{
  "__set__":true,
  "elements":[
   "uranography"
  ]
 },
 "tests.test_monetize":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_mongo_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_monitor":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "gpflow"
  ]
 },
 "tests.test_morton_distance":{
  "__set__":true,
  "elements":[
   "dask-geopandas"
  ]
 },
 "tests.test_motd":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_motion":{
  "__set__":true,
  "elements":[
   "pytmc",
   "xrd_simulator"
  ]
 },
 "tests.test_mpdist":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_mpi":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.test_mpx":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_mrs":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_base":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_basis":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_core":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_fitting":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_ima":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_image":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_io":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_mrsdata":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_processing":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_rda":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_twix":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_msa":{
  "__set__":true,
  "elements":[
   "pypythia"
  ]
 },
 "tests.test_mturk":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_muggeo":{
  "__set__":true,
  "elements":[
   "piecewise-regression"
  ]
 },
 "tests.test_multi_client_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_multi_serve":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_multiclass":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_multiconxn":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_multiline":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_multioutput":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_multioutput_features":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_multipart":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_multipart_helpers":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_multiple":{
  "__set__":true,
  "elements":[
   "baycomp"
  ]
 },
 "tests.test_multiprocessing":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_multiprocessing_logging":{
  "__set__":true,
  "elements":[
   "multiprocessing-logging"
  ]
 },
 "tests.test_multitask":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_multitasking":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_multithreading":{
  "__set__":true,
  "elements":[
   "aimsim"
  ]
 },
 "tests.test_mvc":{
  "__set__":true,
  "elements":[
   "spectate"
  ]
 },
 "tests.test_mvc.mock":{
  "__set__":true,
  "elements":[
   "spectate"
  ]
 },
 "tests.test_mvc.test_base":{
  "__set__":true,
  "elements":[
   "spectate"
  ]
 },
 "tests.test_mvc.test_dict":{
  "__set__":true,
  "elements":[
   "spectate"
  ]
 },
 "tests.test_mvc.test_events":{
  "__set__":true,
  "elements":[
   "spectate"
  ]
 },
 "tests.test_mvc.test_list":{
  "__set__":true,
  "elements":[
   "spectate"
  ]
 },
 "tests.test_mvc.test_object":{
  "__set__":true,
  "elements":[
   "spectate"
  ]
 },
 "tests.test_mvc.test_set":{
  "__set__":true,
  "elements":[
   "spectate"
  ]
 },
 "tests.test_mvdetectors":{
  "__set__":true,
  "elements":[
   "tsod"
  ]
 },
 "tests.test_mwt_expander":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_myst_block":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_myst_block.test_fixtures":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_myst_role":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_myst_role.test_fixtures":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_myst_role.test_role":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_n2v_utils":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.test_na2nc":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_na_file":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_na_file_1001":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_named_routes":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_namedparams":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_namedtuple":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_namers":{
  "__set__":true,
  "elements":[
   "django-filebrowser"
  ]
 },
 "tests.test_namespace":{
  "__set__":true,
  "elements":[
   "dlint",
   "flask-restplus"
  ]
 },
 "tests.test_nan":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_natural_coordinates":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_coordinates_casadi":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_segment":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_segment_casadi":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_vectors":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_velocities":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_velocities_casadi":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_nb_enfants":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.test_nb_run":{
  "__set__":true,
  "elements":[
   "jupytab-server"
  ]
 },
 "tests.test_nb_subproc_thread":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_nbextension_path":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.test_nbody_decay":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.test_nbsmoke":{
  "__set__":true,
  "elements":[
   "nbsmoke"
  ]
 },
 "tests.test_nc2csv":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_nc2na":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_nc_mt_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_nc_sit_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_ner_tagger":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_nested_issue55":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_network_io":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_network_utils":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_next_breakpoint":{
  "__set__":true,
  "elements":[
   "piecewise-regression"
  ]
 },
 "tests.test_nextset":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.test_ni_sit_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_nifti_options":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_njobs":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_nl_1":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_nlp":{
  "__set__":true,
  "elements":[
   "texthero"
  ]
 },
 "tests.test_nnnl":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_nocache_middleware":{
  "__set__":true,
  "elements":[
   "pythx"
  ]
 },
 "tests.test_node":{
  "__set__":true,
  "elements":[
   "condorpy"
  ]
 },
 "tests.test_nodes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.test_non_counting_layer":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_normalisation":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_not_vanilla_options":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_notebook":{
  "__set__":true,
  "elements":[
   "birdy",
   "nb_cron"
  ]
 },
 "tests.test_notebookapp":{
  "__set__":true,
  "elements":[
   "nbclassic"
  ]
 },
 "tests.test_notebooks":{
  "__set__":true,
  "elements":[
   "dice-ml",
   "gpflow",
   "histogrammar"
  ]
 },
 "tests.test_notinstalled":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_nozzle":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_nuclide":{
  "__set__":true,
  "elements":[
   "radioactivedecay"
  ]
 },
 "tests.test_numba":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_numeric":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_numeric.test_array":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_numeric.test_vector":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_numerical":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_numerical_optimizer":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.test_numerical_stability":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_numpy":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_numwords":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_oauth":{
  "__set__":true,
  "elements":[
   "mastercard-oauth1-signer",
   "oauth2"
  ]
 },
 "tests.test_oauth_ext":{
  "__set__":true,
  "elements":[
   "mastercard-oauth1-signer"
  ]
 },
 "tests.test_obj_BaseGeo":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_BaseGeo_v4motion":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Box":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Circular":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Collection":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Collection_child_parent":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Collection_v4motion":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Cuboid":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Cylinder":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_CylinderSegment":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Dipole":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Facet":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Line":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Loop":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Sensor":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Sphere":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Tetrahedron":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Triangle":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_TriangularMesh":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_object_creation":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_objectiveclexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_observable":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_observatory":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_ocv_relax":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_ode_solver":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_ogh":{
  "__set__":true,
  "elements":[
   "ogh"
  ]
 },
 "tests.test_ogr_capabilities":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_ogr_csv_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_ogr_esrijson_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_ogr_gpkg_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_ogr_shapefile_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_ogr_sql_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_ogr_sqlite_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_ogr_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_ogr_wfs_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_oid":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_omni":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_oms":{
  "__set__":true,
  "elements":[
   "mofchecker"
  ]
 },
 "tests.test_one_particle":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_oneof":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_online_resources":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_opals":{
  "__set__":true,
  "elements":[
   "afwizard"
  ]
 },
 "tests.test_open":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_open_file_detection":{
  "__set__":true,
  "elements":[
   "pytest-openfiles"
  ]
 },
 "tests.test_openapi":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_openers":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_openjp2":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_opensimplex":{
  "__set__":true,
  "elements":[
   "opensimplex"
  ]
 },
 "tests.test_operations":{
  "__set__":true,
  "elements":[
   "tinydb",
   "zfit"
  ]
 },
 "tests.test_optics":{
  "__set__":true,
  "elements":[
   "glidertools"
  ]
 },
 "tests.test_optimizer":{
  "__set__":true,
  "elements":[
   "torch-optimizer"
  ]
 },
 "tests.test_optimizer_with_nn":{
  "__set__":true,
  "elements":[
   "torch-optimizer"
  ]
 },
 "tests.test_optimizers":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "blackjax",
   "gpflow",
   "keras-radam"
  ]
 },
 "tests.test_options":{
  "__set__":true,
  "elements":[
   "pydrill",
   "pyxel-sim",
   "saws",
   "tifftools"
  ]
 },
 "tests.test_orchestrate":{
  "__set__":true,
  "elements":[
   "plurmy"
  ]
 },
 "tests.test_ordinal":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.test_organization":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_other":{
  "__set__":true,
  "elements":[
   "bertopic",
   "spec2nii"
  ]
 },
 "tests.test_other_func":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_outcar":{
  "__set__":true,
  "elements":[
   "parsevasp"
  ]
 },
 "tests.test_output":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_output_utils":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.test_overlay":{
  "__set__":true,
  "elements":[
   "movingpandas"
  ]
 },
 "tests.test_package":{
  "__set__":true,
  "elements":[
   "yarg"
  ]
 },
 "tests.test_package_api":{
  "__set__":true,
  "elements":[
   "doppel-cli"
  ]
 },
 "tests.test_package_collection":{
  "__set__":true,
  "elements":[
   "doppel-cli"
  ]
 },
 "tests.test_package_functions":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_package_rename":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_paired_paths":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_pairwise_dist":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_palaeoB":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_pandapower":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_pandas":{
  "__set__":true,
  "elements":[
   "emperor",
   "lux-api",
   "oddt"
  ]
 },
 "tests.test_pandas_coverage":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_pandas_cursor":{
  "__set__":true,
  "elements":[
   "pyathena"
  ]
 },
 "tests.test_pandas_histogrammar":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_pandora":{
  "__set__":true,
  "elements":[
   "pandora-geno"
  ]
 },
 "tests.test_panel":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_panes":{
  "__set__":true,
  "elements":[
   "mpl_plotter"
  ]
 },
 "tests.test_param":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_param_validation":{
  "__set__":true,
  "elements":[
   "torch-optimizer"
  ]
 },
 "tests.test_parameter":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_parameterdict":{
  "__set__":true,
  "elements":[
   "modelparameters"
  ]
 },
 "tests.test_parameters":{
  "__set__":true,
  "elements":[
   "modelparameters",
   "openfisca-france"
  ]
 },
 "tests.test_parametric":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.test_params":{
  "__set__":true,
  "elements":[
   "mpire"
  ]
 },
 "tests.test_parse":{
  "__set__":true,
  "elements":[
   "biom-format",
   "emperor",
   "recordwhat",
   "yarg"
  ]
 },
 "tests.test_parse_config":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_parse_identifiers":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.test_parser":{
  "__set__":true,
  "elements":[
   "aiida-castep",
   "jesth",
   "lux-api",
   "pydifact",
   "pyrobuf",
   "pytermgui",
   "tomlkit"
  ]
 },
 "tests.test_parser.test_field_validity":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_map_field":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_missing_lbraces":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_oneof":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_syntax":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_parser_custom":{
  "__set__":true,
  "elements":[
   "rse"
  ]
 },
 "tests.test_parser_github":{
  "__set__":true,
  "elements":[
   "rse"
  ]
 },
 "tests.test_parser_gitlab":{
  "__set__":true,
  "elements":[
   "rse"
  ]
 },
 "tests.test_parser_name":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.test_parser_template":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.test_parser_zenodo":{
  "__set__":true,
  "elements":[
   "rse"
  ]
 },
 "tests.test_parsers":{
  "__set__":true,
  "elements":[
   "crystals",
   "sphinx-js"
  ]
 },
 "tests.test_parsing":{
  "__set__":true,
  "elements":[
   "pytmc",
   "starfile"
  ]
 },
 "tests.test_partial_integration":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_particle_number_obs":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_passwordless":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_pastel":{
  "__set__":true,
  "elements":[
   "pastel"
  ]
 },
 "tests.test_patches":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_path":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_path_or_fobj":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.test_pathfinder":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_paths":{
  "__set__":true,
  "elements":[
   "afwizard",
   "andes",
   "goosehdf5",
   "jupyter_server"
  ]
 },
 "tests.test_pattern":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_patterns":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_payload":{
  "__set__":true,
  "elements":[
   "aiohttp",
   "flask-restplus"
  ]
 },
 "tests.test_payload_too_large":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_pdal":{
  "__set__":true,
  "elements":[
   "afwizard"
  ]
 },
 "tests.test_pdf_cauchy":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pdf_cb":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pdf_conditional":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pdf_fftconv":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pdf_kde":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pdf_normal":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pdf_poisson":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pdf_polynomials":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pdf_sumpdf":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pdf_template":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pdfs":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_pec":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_pep8":{
  "__set__":true,
  "elements":[
   "isofit",
   "jupytext"
  ]
 },
 "tests.test_performance":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_perllexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_permissions":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.test_lazy_lists":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.test_sharing_old":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.test_visibility_api":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.test_visibility_e2e":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.test_workspace":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_persistence":{
  "__set__":true,
  "elements":[
   "magicgui",
   "tsod"
  ]
 },
 "tests.test_pfaffian":{
  "__set__":true,
  "elements":[
   "pfapack"
  ]
 },
 "tests.test_pflow_matpower":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_pfs":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_pgbart":{
  "__set__":true,
  "elements":[
   "pymc-bart"
  ]
 },
 "tests.test_phase":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_philips_data_list":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_philips_dicom":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_philips_dicom_orientation":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_philips_sdat_spar":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_philips_sdat_spar_orientation":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_phone":{
  "__set__":true,
  "elements":[
   "gruut-ipa"
  ]
 },
 "tests.test_phonemes":{
  "__set__":true,
  "elements":[
   "gruut-ipa"
  ]
 },
 "tests.test_php":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_phys_api":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_phys_flame":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_phys_fluid":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_phys_overpressure":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_phys_utils":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_physics":{
  "__set__":true,
  "elements":[
   "glidertools",
   "phasespace",
   "pyremo"
  ]
 },
 "tests.test_physics_consistency":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_pickle":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_pickle_unpickle_theano_fn":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.test_pickling":{
  "__set__":true,
  "elements":[
   "prolif"
  ]
 },
 "tests.test_pipelines":{
  "__set__":true,
  "elements":[
   "explainerdashboard",
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_pipelining":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_pl_si":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_placeholder":{
  "__set__":true,
  "elements":[
   "bamnostic"
  ]
 },
 "tests.test_placeholders":{
  "__set__":true,
  "elements":[
   "texplain"
  ]
 },
 "tests.test_plaintext_parser":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_planisphere":{
  "__set__":true,
  "elements":[
   "uranography"
  ]
 },
 "tests.test_planner":{
  "__set__":true,
  "elements":[
   "o365"
  ]
 },
 "tests.test_platform":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_plbvfu1":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_plot":{
  "__set__":true,
  "elements":[
   "glidertools",
   "graspy",
   "typhos",
   "xugrid",
   "xymol"
  ]
 },
 "tests.test_plots":{
  "__set__":true,
  "elements":[
   "pycsep",
   "radioactivedecay",
   "rocketpy"
  ]
 },
 "tests.test_plotting":{
  "__set__":true,
  "elements":[
   "bertopic",
   "blimpy",
   "lifelines",
   "muttlib",
   "pandora-geno",
   "shakenbreak"
  ]
 },
 "tests.test_plotting.test_approximate":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_plotting.test_bar":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_plotting.test_documents":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_plotting.test_dynamic":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_plotting.test_heatmap":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_plotting.test_term_rank":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_plotting.test_topics":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_plugin":{
  "__set__":true,
  "elements":[
   "pyls-memestra"
  ]
 },
 "tests.test_plugin_interface":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_plugins":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_plugins.fake_actions":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_plugins.fake_configs":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_plume":{
  "__set__":true,
  "elements":[
   "sed-plume"
  ]
 },
 "tests.test_plurmy":{
  "__set__":true,
  "elements":[
   "plurmy"
  ]
 },
 "tests.test_pod":{
  "__set__":true,
  "elements":[
   "ezyrb"
  ]
 },
 "tests.test_podae":{
  "__set__":true,
  "elements":[
   "ezyrb"
  ]
 },
 "tests.test_poi_data":{
  "__set__":true,
  "elements":[
   "tesspy"
  ]
 },
 "tests.test_point_output":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_policy":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_policy_kwargs":{
  "__set__":true,
  "elements":[
   "docker-map"
  ]
 },
 "tests.test_polycrystal":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_pool":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "mpire"
  ]
 },
 "tests.test_popfinder":{
  "__set__":true,
  "elements":[
   "popfinder"
  ]
 },
 "tests.test_porosity_error":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_port":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_port.test_fixtures":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_port.test_references":{
  "__set__":true,
  "elements":[
   "markdown-it-py"
  ]
 },
 "tests.test_pos":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_poscar":{
  "__set__":true,
  "elements":[
   "parsevasp"
  ]
 },
 "tests.test_pose2d":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_pose3d":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_positioner":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_post":{
  "__set__":true,
  "elements":[
   "jupyter_to_medium"
  ]
 },
 "tests.test_postgresql_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_posthocs":{
  "__set__":true,
  "elements":[
   "scikit-posthocs"
  ]
 },
 "tests.test_postlist":{
  "__set__":true,
  "elements":[
   "ablog"
  ]
 },
 "tests.test_postman":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_postprocessing":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "xmip"
  ]
 },
 "tests.test_pp_metview":{
  "__set__":true,
  "elements":[
   "metview-python"
  ]
 },
 "tests.test_praat":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_pre_v32":{
  "__set__":true,
  "elements":[
   "pygml"
  ]
 },
 "tests.test_precip":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_precip_changer":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_predict":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_predictor":{
  "__set__":true,
  "elements":[
   "pypythia"
  ]
 },
 "tests.test_prepare":{
  "__set__":true,
  "elements":[
   "bar_chart_race",
   "pymonetdb",
   "sanic"
  ]
 },
 "tests.test_prepare_resources":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_preproc":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_preprocess":{
  "__set__":true,
  "elements":[
   "deepforest",
   "matrixprofile"
  ]
 },
 "tests.test_preprocessing":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "gw-sklearn-xarray",
   "openfisca-france",
   "py-cordex",
   "scikit-lego",
   "texthero",
   "xmip"
  ]
 },
 "tests.test_preprocessing.test_columncapper":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_columndropper":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_columnselector":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_dictmapper":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_identitytransformer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_informationfilter":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_interval_encoder":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_orthogonal_transformer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_outlier_remover":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_pandastypeselector":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_patsy_transformer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_randomadder":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_repeatingbasisfunction":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing_cloud":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "xmip"
  ]
 },
 "tests.test_preserve_empty_cells":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_presets":{
  "__set__":true,
  "elements":[
   "mpl_plotter"
  ]
 },
 "tests.test_pretrain":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_printing":{
  "__set__":true,
  "elements":[
   "aesara",
   "glymur",
   "pymc-base",
   "theano-pymc"
  ]
 },
 "tests.test_priors":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_privateMath":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_privy":{
  "__set__":true,
  "elements":[
   "dbxfs",
   "privy"
  ]
 },
 "tests.test_prms":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_processing":{
  "__set__":true,
  "elements":[
   "glidertools"
  ]
 },
 "tests.test_processing_algebra":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_processing_filter":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_processing_interp":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_processing_marker":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_processing_misc":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_processing_rt":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_profile":{
  "__set__":true,
  "elements":[
   "fiona",
   "plonk"
  ]
 },
 "tests.test_profiler":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_profiles":{
  "__set__":true,
  "elements":[
   "pydrill"
  ]
 },
 "tests.test_profiling":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_program":{
  "__set__":true,
  "elements":[
   "guidance"
  ]
 },
 "tests.test_project":{
  "__set__":true,
  "elements":[
   "anyscale",
   "pytmc"
  ]
 },
 "tests.test_project_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_project_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_projectconf":{
  "__set__":true,
  "elements":[
   "platformio"
  ]
 },
 "tests.test_promotion":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.test_pronunciation":{
  "__set__":true,
  "elements":[
   "gruut-ipa"
  ]
 },
 "tests.test_propensity":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_properties":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_property_checking_middleware":{
  "__set__":true,
  "elements":[
   "pythx"
  ]
 },
 "tests.test_proposal":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_props":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_proto":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_protobuf":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_protocol":{
  "__set__":true,
  "elements":[
   "o365",
   "pygls"
  ]
 },
 "tests.test_protonate":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "tests.test_protos":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_providers":{
  "__set__":true,
  "elements":[
   "xyzservices"
  ]
 },
 "tests.test_prox":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.test_proxy":{
  "__set__":true,
  "elements":[
   "aiohttp",
   "nr.types"
  ]
 },
 "tests.test_proxy_functional":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_prsint":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_pseudo_data":{
  "__set__":true,
  "elements":[
   "aiida-gaussian-datatypes"
  ]
 },
 "tests.test_psse_parser":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_psycopg":{
  "__set__":true,
  "elements":[
   "autodynatrace"
  ]
 },
 "tests.test_ptr":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_publicMath":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_pwd":{
  "__set__":true,
  "elements":[
   "inflect"
  ]
 },
 "tests.test_py_base":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_pydantic":{
  "__set__":true,
  "elements":[
   "erdantic",
   "xopt"
  ]
 },
 "tests.test_pydrill_setup":{
  "__set__":true,
  "elements":[
   "pydrill"
  ]
 },
 "tests.test_pylexique":{
  "__set__":true,
  "elements":[
   "pylexique"
  ]
 },
 "tests.test_pypi":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_pyplot":{
  "__set__":true,
  "elements":[
   "mpl-interactions"
  ]
 },
 "tests.test_pyprojroot":{
  "__set__":true,
  "elements":[
   "pyprojroot"
  ]
 },
 "tests.test_pyremo":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_pyrootutils":{
  "__set__":true,
  "elements":[
   "pyrootutils"
  ]
 },
 "tests.test_pystac_api":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_pystardb":{
  "__set__":true,
  "elements":[
   "pystardb"
  ]
 },
 "tests.test_pysyncrosim":{
  "__set__":true,
  "elements":[
   "pysyncrosim"
  ]
 },
 "tests.test_pytensorf":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.test_pytest_plugin":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_python":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_python_api":{
  "__set__":true,
  "elements":[
   "remove_dagmc_tags"
  ]
 },
 "tests.test_python_utils":{
  "__set__":true,
  "elements":[
   "python-utils"
  ]
 },
 "tests.test_pythonize":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_pytorch":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.test_qartod":{
  "__set__":true,
  "elements":[
   "ioos_qc"
  ]
 },
 "tests.test_qartod_performance":{
  "__set__":true,
  "elements":[
   "ioos_qc"
  ]
 },
 "tests.test_qbasiclexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_qmnl":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_qra_analysis":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_qra_blends":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_qra_consequence":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_qra_effects":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_qra_fatalities":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_qra_ignition_probs":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_qra_pipe_size":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_qra_positions":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_qra_probits":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_qra_risk":{
  "__set__":true,
  "elements":[
   "hyram"
  ]
 },
 "tests.test_quadrature":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_quaternion":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_queries":{
  "__set__":true,
  "elements":[
   "tinydb"
  ]
 },
 "tests.test_query":{
  "__set__":true,
  "elements":[
   "pydrill",
   "verta"
  ]
 },
 "tests.test_quick_test":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_quickle":{
  "__set__":true,
  "elements":[
   "quickle"
  ]
 },
 "tests.test_r":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_r_squared":{
  "__set__":true,
  "elements":[
   "piecewise-regression"
  ]
 },
 "tests.test_race_cond":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_radiation":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_radio_browser":{
  "__set__":true,
  "elements":[
   "pyradios"
  ]
 },
 "tests.test_radio_facets":{
  "__set__":true,
  "elements":[
   "pyradios"
  ]
 },
 "tests.test_radionuclide":{
  "__set__":true,
  "elements":[
   "radioactivedecay"
  ]
 },
 "tests.test_radius_neighbors_regressor":{
  "__set__":true,
  "elements":[
   "ezyrb"
  ]
 },
 "tests.test_random":{
  "__set__":true,
  "elements":[
   "phasespace"
  ]
 },
 "tests.test_random_seed":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_random_signal":{
  "__set__":true,
  "elements":[
   "swot_simulator"
  ]
 },
 "tests.test_randomforest_explainer":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_rap":{
  "__set__":true,
  "elements":[
   "herbie-data"
  ]
 },
 "tests.test_raster":{
  "__set__":true,
  "elements":[
   "gemgis"
  ]
 },
 "tests.test_raster_input":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_rasterio_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_rate":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.test_rating":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.test_raxmlng":{
  "__set__":true,
  "elements":[
   "pypythia"
  ]
 },
 "tests.test_raxmlng_parser":{
  "__set__":true,
  "elements":[
   "pypythia"
  ]
 },
 "tests.test_ray_version_checker":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_rdf":{
  "__set__":true,
  "elements":[
   "rdfpy"
  ]
 },
 "tests.test_rdkitfixer":{
  "__set__":true,
  "elements":[
   "oddt"
  ]
 },
 "tests.test_reacnetgen":{
  "__set__":true,
  "elements":[
   "reacnetgenerator"
  ]
 },
 "tests.test_read":{
  "__set__":true,
  "elements":[
   "pymapvbvd"
  ]
 },
 "tests.test_read_all_py":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_drivers":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_read_incomplete_rmd":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_lzw_tiff":{
  "__set__":true,
  "elements":[
   "n2v"
  ]
 },
 "tests.test_read_simple_R":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_bare":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_hydrogen":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_ipynb":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_julia":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_markdown":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_percent":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_python":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_rmd":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_scheme":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_sphinx":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_structure":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_read_tiff":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.test_read_write_round_trip":{
  "__set__":true,
  "elements":[
   "starfile"
  ]
 },
 "tests.test_readjs":{
  "__set__":true,
  "elements":[
   "uranography"
  ]
 },
 "tests.test_readme":{
  "__set__":true,
  "elements":[
   "redframes",
   "tifftools"
  ]
 },
 "tests.test_rebuild_vrts":{
  "__set__":true,
  "elements":[
   "rabpro"
  ]
 },
 "tests.test_recalibration":{
  "__set__":true,
  "elements":[
   "uncertainty-toolbox"
  ]
 },
 "tests.test_rechunking":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_recipe_item":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_recognise":{
  "__set__":true,
  "elements":[
   "goosebib"
  ]
 },
 "tests.test_record":{
  "__set__":true,
  "elements":[
   "aesara",
   "pytmc",
   "recordwhat",
   "theano-pymc"
  ]
 },
 "tests.test_record_links":{
  "__set__":true,
  "elements":[
   "recordwhat"
  ]
 },
 "tests.test_recoverable":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_recreateDB":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_rectilinear":{
  "__set__":true,
  "elements":[
   "pyvista-xarray"
  ]
 },
 "tests.test_redirect":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_redirects":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_reducedordermodel":{
  "__set__":true,
  "elements":[
   "ezyrb"
  ]
 },
 "tests.test_reduction":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_reduction.test_merge":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_reflectbitorder":{
  "__set__":true,
  "elements":[
   "crccheck"
  ]
 },
 "tests.test_reformat":{
  "__set__":true,
  "elements":[
   "goosebib"
  ]
 },
 "tests.test_regex":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_regex_tokenizer":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_regexlexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_regexopt":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_regimes":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_regionmask":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "intake-geopandas",
   "xmip"
  ]
 },
 "tests.test_regions":{
  "__set__":true,
  "elements":[
   "py-cordex",
   "pycsep"
  ]
 },
 "tests.test_register_schema":{
  "__set__":true,
  "elements":[
   "jupyter_telemetry"
  ]
 },
 "tests.test_registerable":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_registration":{
  "__set__":true,
  "elements":[
   "kotsu"
  ]
 },
 "tests.test_registry":{
  "__set__":true,
  "elements":[
   "python-docker",
   "xpersist"
  ]
 },
 "tests.test_regression":{
  "__set__":true,
  "elements":[
   "pycircstat"
  ]
 },
 "tests.test_regression_base":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_regression_explainer":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_regressions":{
  "__set__":true,
  "elements":[
   "cachecontrol",
   "larch"
  ]
 },
 "tests.test_regrid":{
  "__set__":true,
  "elements":[
   "esmlab"
  ]
 },
 "tests.test_regular_grid":{
  "__set__":true,
  "elements":[
   "ezyrb"
  ]
 },
 "tests.test_relation_classifier":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_relational":{
  "__set__":true,
  "elements":[
   "qme"
  ]
 },
 "tests.test_release":{
  "__set__":true,
  "elements":[
   "yarg"
  ]
 },
 "tests.test_reloader":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_remo_ds":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_remote":{
  "__set__":true,
  "elements":[
   "intake-xarray",
   "localtileserver"
  ]
 },
 "tests.test_remote_cache":{
  "__set__":true,
  "elements":[
   "intake-geopandas"
  ]
 },
 "tests.test_remove":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_render":{
  "__set__":true,
  "elements":[
   "qhub"
  ]
 },
 "tests.test_renderer":{
  "__set__":true,
  "elements":[
   "jesth"
  ]
 },
 "tests.test_repeated_enum":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_reply_handling":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_report":{
  "__set__":true,
  "elements":[
   "dvclive",
   "edgetest",
   "server-thread"
  ]
 },
 "tests.test_reporters":{
  "__set__":true,
  "elements":[
   "doppel-cli"
  ]
 },
 "tests.test_reporting":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_repository":{
  "__set__":true,
  "elements":[
   "cachy"
  ]
 },
 "tests.test_repr":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_representation":{
  "__set__":true,
  "elements":[
   "bertopic",
   "texthero"
  ]
 },
 "tests.test_representation.test_get":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_representation.test_labels":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_representation.test_representations":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_reqparse":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_request":{
  "__set__":true,
  "elements":[
   "ooipy",
   "overpy",
   "sanic"
  ]
 },
 "tests.test_request_cancel":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_request_construction":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_request_data":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_request_stream":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_requests":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_requirements":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_res1d":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_resampling":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_residues":{
  "__set__":true,
  "elements":[
   "prolif"
  ]
 },
 "tests.test_resolvable":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.test_resolver":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_resolvers":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.test_resource":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.test_resource_analysis":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_resourcerelease":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_resourcereleasedemo":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_resources":{
  "__set__":true,
  "elements":[
   "pcmdi_metrics",
   "saws"
  ]
 },
 "tests.test_response":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "flask-security-too",
   "sanic"
  ]
 },
 "tests.test_response_timeout":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_restapi":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.test_result":{
  "__set__":true,
  "elements":[
   "overpy"
  ]
 },
 "tests.test_result_set":{
  "__set__":true,
  "elements":[
   "pyathena"
  ]
 },
 "tests.test_result_way":{
  "__set__":true,
  "elements":[
   "overpy"
  ]
 },
 "tests.test_results_set":{
  "__set__":true,
  "elements":[
   "pymapd",
   "pyomniscidb"
  ]
 },
 "tests.test_resultset":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_revolvingdoor":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_rfc3339":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_rfc64_tin":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_rfc822":{
  "__set__":true,
  "elements":[
   "pyproject-metadata"
  ]
 },
 "tests.test_riccati":{
  "__set__":true,
  "elements":[
   "riccati"
  ]
 },
 "tests.test_river_utils":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_rmd_to_ipynb":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_robustness":{
  "__set__":true,
  "elements":[
   "nlptest"
  ]
 },
 "tests.test_rocket":{
  "__set__":true,
  "elements":[
   "rocketpy"
  ]
 },
 "tests.test_rolling":{
  "__set__":true,
  "elements":[
   "focal-stats"
  ]
 },
 "tests.test_root_imports":{
  "__set__":true,
  "elements":[
   "jesth",
   "shared"
  ]
 },
 "tests.test_rootcling":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_rop":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_rotations":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_route_def":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_routes":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_rsmq":{
  "__set__":true,
  "elements":[
   "pyrsmq"
  ]
 },
 "tests.test_rt_libradtran":{
  "__set__":true,
  "elements":[
   "isofit"
  ]
 },
 "tests.test_rtf_formatter":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_ruby":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_run":{
  "__set__":true,
  "elements":[
   "e3sm_diags",
   "kotsu",
   "nbsmoke",
   "propka"
  ]
 },
 "tests.test_run_app":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_run_length":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_run_train":{
  "__set__":true,
  "elements":[
   "pymace"
  ]
 },
 "tests.test_runner":{
  "__set__":true,
  "elements":[
   "memo",
   "yggdrasil"
  ]
 },
 "tests.test_runtime_env":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_runtime_udf":{
  "__set__":true,
  "elements":[
   "pymapd",
   "pyomniscidb"
  ]
 },
 "tests.test_s2_obs":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_s3":{
  "__set__":true,
  "elements":[
   "anyscale",
   "awacs"
  ]
 },
 "tests.test_s3_specific":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_s3uri":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_saferound":{
  "__set__":true,
  "elements":[
   "iteround"
  ]
 },
 "tests.test_sample":{
  "__set__":true,
  "elements":[
   "nlptest"
  ]
 },
 "tests.test_sampler":{
  "__set__":true,
  "elements":[
   "mmsegmentation"
  ]
 },
 "tests.test_sampling":{
  "__set__":true,
  "elements":[
   "blackjax",
   "zfit"
  ]
 },
 "tests.test_save_api":{
  "__set__":true,
  "elements":[
   "waybackpy"
  ]
 },
 "tests.test_save_multiple":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_saver":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_saws":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.test_scaffold":{
  "__set__":true,
  "elements":[
   "mesa"
  ]
 },
 "tests.test_scalebar_detection":{
  "__set__":true,
  "elements":[
   "imagedataextractor"
  ]
 },
 "tests.test_scaled_euclid_dist":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_scaling":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_scanf":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_scatter":{
  "__set__":true,
  "elements":[
   "dexplot"
  ]
 },
 "tests.test_scatterer":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_scattering_unit":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_scenarios":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.test_schema":{
  "__set__":true,
  "elements":[
   "edgetest",
   "fiona",
   "llama-index",
   "qhub",
   "yggdrasil"
  ]
 },
 "tests.test_schema_geom":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_scipy":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.test_scoring":{
  "__set__":true,
  "elements":[
   "oddt"
  ]
 },
 "tests.test_scram":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_scrimp":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_scripts":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_atlasq_list_summary":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_atlasq_ohi":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_atlasq_query":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_fsl_apply_x5":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_fsl_convert_x5":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_fsl_ents":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_imglob":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_immv_imcp":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_resample_image":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_sd":{
  "__set__":true,
  "elements":[
   "napkin"
  ]
 },
 "tests.test_sd_frag":{
  "__set__":true,
  "elements":[
   "napkin"
  ]
 },
 "tests.test_search":{
  "__set__":true,
  "elements":[
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_section":{
  "__set__":true,
  "elements":[
   "jesth"
  ]
 },
 "tests.test_sections":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_segment":{
  "__set__":true,
  "elements":[
   "pyannote.core",
   "pydifact"
  ]
 },
 "tests.test_segmentation":{
  "__set__":true,
  "elements":[
   "afwizard",
   "medcam"
  ]
 },
 "tests.test_segmentation.smp_test":{
  "__set__":true,
  "elements":[
   "medcam"
  ]
 },
 "tests.test_segmentation.unet_seg_dataset":{
  "__set__":true,
  "elements":[
   "medcam"
  ]
 },
 "tests.test_segmentation.unet_seg_test":{
  "__set__":true,
  "elements":[
   "medcam"
  ]
 },
 "tests.test_segmentcollection":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_sel2d":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.test_select":{
  "__set__":true,
  "elements":[
   "mols2grid"
  ]
 },
 "tests.test_select_dimension":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_semaphore":{
  "__set__":true,
  "elements":[
   "redis-semaphore"
  ]
 },
 "tests.test_semgrex":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_sensitivity":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_sensorthings_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_sentence":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_sequence_tagger":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_serialization":{
  "__set__":true,
  "elements":[
   "cachecontrol",
   "flask-restless",
   "pangeo-forge-recipes",
   "servicestack"
  ]
 },
 "tests.test_serialization_utilities":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.test_serialize":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_serializer":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_serializers":{
  "__set__":true,
  "elements":[
   "xpersist"
  ]
 },
 "tests.test_series":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_server":{
  "__set__":true,
  "elements":[
   "poster",
   "server-thread"
  ]
 },
 "tests.test_server_events":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_server_heartbeat":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_server_http_version":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_server_loop":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_server_misc":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_server_request":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_server_start":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_serverapp":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_servicedesk":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_services":{
  "__set__":true,
  "elements":[
   "andes",
   "yggdrasil"
  ]
 },
 "tests.test_session":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "fiona",
   "gpflow",
   "quilt",
   "quilt3",
   "web.py"
  ]
 },
 "tests.test_set":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.test_set_decoded_components":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_setgetOption":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_settings":{
  "__set__":true,
  "elements":[
   "chebfun",
   "django-filebrowser",
   "django-versatileimagefield",
   "planetary-computer",
   "pydeck"
  ]
 },
 "tests.test_settings_attr":{
  "__set__":true,
  "elements":[
   "django-pwa"
  ]
 },
 "tests.test_setup":{
  "__set__":true,
  "elements":[
   "blimpy",
   "optimade",
   "orbit-ml"
  ]
 },
 "tests.test_setup_commands":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_severity_enum":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_sg":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_shaft":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_shakenbreak":{
  "__set__":true,
  "elements":[
   "shakenbreak"
  ]
 },
 "tests.test_shape":{
  "__set__":true,
  "elements":[
   "oddt"
  ]
 },
 "tests.test_shapely":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_sharing":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_shell":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_show_versions":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.test_shtab":{
  "__set__":true,
  "elements":[
   "shtab"
  ]
 },
 "tests.test_side_effects":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_sidecar":{
  "__set__":true,
  "elements":[
   "dcm2bids"
  ]
 },
 "tests.test_siemens_dicom":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_siemens_mrsi_orientation":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_siemens_rda":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_siemens_special_data":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_siemens_svs_orientation":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_sign_assets":{
  "__set__":true,
  "elements":[
   "planetary-computer"
  ]
 },
 "tests.test_signal":{
  "__set__":true,
  "elements":[
   "mpire",
   "typhos"
  ]
 },
 "tests.test_signal_handlers":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_signals":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_signature":{
  "__set__":true,
  "elements":[
   "magicgui",
   "plum-dispatch"
  ]
 },
 "tests.test_signed_integer":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_signer":{
  "__set__":true,
  "elements":[
   "mastercard-oauth1-signer"
  ]
 },
 "tests.test_signing":{
  "__set__":true,
  "elements":[
   "planetary-computer"
  ]
 },
 "tests.test_sigproc":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_similar":{
  "__set__":true,
  "elements":[
   "keras-radam"
  ]
 },
 "tests.test_simple":{
  "__set__":true,
  "elements":[
   "texplain"
  ]
 },
 "tests.test_simple_detachment_limited":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_simple_subclass":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_simplify":{
  "__set__":true,
  "elements":[
   "flake8-simplify"
  ]
 },
 "tests.test_sims":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_sims_corr":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_simulate":{
  "__set__":true,
  "elements":[
   "jhub-client"
  ]
 },
 "tests.test_simulation":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_single":{
  "__set__":true,
  "elements":[
   "baycomp"
  ]
 },
 "tests.test_single_card":{
  "__set__":true,
  "elements":[
   "spectrumdevice"
  ]
 },
 "tests.test_single_channel":{
  "__set__":true,
  "elements":[
   "spectrumdevice"
  ]
 },
 "tests.test_single_file_stac":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_singlefile":{
  "__set__":true,
  "elements":[
   "model-index"
  ]
 },
 "tests.test_singularity":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_sinks":{
  "__set__":true,
  "elements":[
   "bdsim"
  ]
 },
 "tests.test_sites":{
  "__set__":true,
  "elements":[
   "django-filebrowser",
   "django-hosts"
  ]
 },
 "tests.test_sjoin":{
  "__set__":true,
  "elements":[
   "dask-geopandas"
  ]
 },
 "tests.test_skimp":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_skip_remote_data":{
  "__set__":true,
  "elements":[
   "pytest-remotedata"
  ]
 },
 "tests.test_sklearn":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_skorch_models":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_slddb":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_slddb.test_converters":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_slddb.test_dbcreation":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_slddb.test_dbmaterial":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_slddb.test_elements":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_slddb.test_formula":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_slddb.test_material":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_slddb.test_webapi":{
  "__set__":true,
  "elements":[
   "orsopy"
  ]
 },
 "tests.test_slice":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_slicing":{
  "__set__":true,
  "elements":[
   "glymur",
   "pymapvbvd"
  ]
 },
 "tests.test_sliding_window":{
  "__set__":true,
  "elements":[
   "pandora-geno"
  ]
 },
 "tests.test_smarty":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_smc":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_smc_ess":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_smuserlist":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_snap":{
  "__set__":true,
  "elements":[
   "plonk",
   "xugrid"
  ]
 },
 "tests.test_snapshot":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_snapshot_util":{
  "__set__":true,
  "elements":[
   "anyscale"
  ]
 },
 "tests.test_snippets":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_snow":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_sns":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_socketblocker":{
  "__set__":true,
  "elements":[
   "pytest-remotedata"
  ]
 },
 "tests.test_socrata_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_solidmotor":{
  "__set__":true,
  "elements":[
   "rocketpy"
  ]
 },
 "tests.test_solver":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_sort":{
  "__set__":true,
  "elements":[
   "emperor"
  ]
 },
 "tests.test_sorting":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.test_source":{
  "__set__":true,
  "elements":[
   "intake-avro",
   "intake-parquet"
  ]
 },
 "tests.test_sourcecode":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_sources":{
  "__set__":true,
  "elements":[
   "bdsim"
  ]
 },
 "tests.test_space":{
  "__set__":true,
  "elements":[
   "mesa",
   "unifhy",
   "zfit"
  ]
 },
 "tests.test_space_0":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_spacy_model":{
  "__set__":true,
  "elements":[
   "nlptest"
  ]
 },
 "tests.test_spark":{
  "__set__":true,
  "elements":[
   "intake-spark"
  ]
 },
 "tests.test_spark_histogrammar":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_sparknlp_model":{
  "__set__":true,
  "elements":[
   "nlptest"
  ]
 },
 "tests.test_sparkypandy":{
  "__set__":true,
  "elements":[
   "sparkypandy"
  ]
 },
 "tests.test_spatial":{
  "__set__":true,
  "elements":[
   "bdsim",
   "mikeio",
   "oddt",
   "pycsep"
  ]
 },
 "tests.test_spatial_partitioning":{
  "__set__":true,
  "elements":[
   "dask-geopandas"
  ]
 },
 "tests.test_spatialite":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_spatialvector":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_spec":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_specs":{
  "__set__":true,
  "elements":[
   "adagio"
  ]
 },
 "tests.test_spectral_embed":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_sph":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_sphere":{
  "__set__":true,
  "elements":[
   "uranography"
  ]
 },
 "tests.test_spheremap":{
  "__set__":true,
  "elements":[
   "uranography"
  ]
 },
 "tests.test_split":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.test_split_rules":{
  "__set__":true,
  "elements":[
   "pymc-bart"
  ]
 },
 "tests.test_sql":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_sql_source":{
  "__set__":true,
  "elements":[
   "intake-geopandas"
  ]
 },
 "tests.test_sqla_types":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_sqlalchemy_athena":{
  "__set__":true,
  "elements":[
   "pyathena"
  ]
 },
 "tests.test_sqlite_geopackage_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_sqlite_phonemizer":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_sqlite_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_sqs":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_sscursor":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.test_ssml":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_stac_api_io":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_stac_api_object":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_stac_io":{
  "__set__":true,
  "elements":[
   "pystac",
   "pystac-client"
  ]
 },
 "tests.test_stack":{
  "__set__":true,
  "elements":[
   "pastel"
  ]
 },
 "tests.test_standard_metadata":{
  "__set__":true,
  "elements":[
   "pyproject-metadata"
  ]
 },
 "tests.test_star_hub":{
  "__set__":true,
  "elements":[
   "spectrumdevice"
  ]
 },
 "tests.test_stars":{
  "__set__":true,
  "elements":[
   "uranography"
  ]
 },
 "tests.test_stat_dist":{
  "__set__":true,
  "elements":[
   "pygpcca"
  ]
 },
 "tests.test_state":{
  "__set__":true,
  "elements":[
   "docker-map",
   "edgedb-python"
  ]
 },
 "tests.test_stateplane":{
  "__set__":true,
  "elements":[
   "stateplane"
  ]
 },
 "tests.test_static":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_station":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_statistics":{
  "__set__":true,
  "elements":[
   "esmlab",
   "lifelines",
   "matrixprofile"
  ]
 },
 "tests.test_stats":{
  "__set__":true,
  "elements":[
   "metocean-stats",
   "pycsep"
  ]
 },
 "tests.test_status":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_stax":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_stemmers":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_step_size":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_stix":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_stomp":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_storage":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes",
   "pydrill"
  ]
 },
 "tests.test_storage_filecache":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_storage_redis":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_storages":{
  "__set__":true,
  "elements":[
   "tinydb"
  ]
 },
 "tests.test_store":{
  "__set__":true,
  "elements":[
   "kotsu"
  ]
 },
 "tests.test_str":{
  "__set__":true,
  "elements":[
   "model-index"
  ]
 },
 "tests.test_strategy":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_stream":{
  "__set__":true,
  "elements":[
   "nr.types",
   "parsevasp"
  ]
 },
 "tests.test_streamflow":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_streaming":{
  "__set__":true,
  "elements":[
   "poster"
  ]
 },
 "tests.test_streamio":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "tests.test_streams":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_strict_check":{
  "__set__":true,
  "elements":[
   "pytest-remotedata"
  ]
 },
 "tests.test_stringparser":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_struct":{
  "__set__":true,
  "elements":[
   "quickle"
  ]
 },
 "tests.test_structs":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_structure":{
  "__set__":true,
  "elements":[
   "dcm2bids"
  ]
 },
 "tests.test_structured":{
  "__set__":true,
  "elements":[
   "nr.types",
   "pyvista-xarray"
  ]
 },
 "tests.test_structured_utils":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_structures":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_study":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_study_entity":{
  "__set__":true,
  "elements":[
   "jacqq"
  ]
 },
 "tests.test_study_point":{
  "__set__":true,
  "elements":[
   "jacqq"
  ]
 },
 "tests.test_study_statistic":{
  "__set__":true,
  "elements":[
   "jacqq"
  ]
 },
 "tests.test_stuf":{
  "__set__":true,
  "elements":[
   "stuf"
  ]
 },
 "tests.test_style":{
  "__set__":true,
  "elements":[
   "metview-python",
   "pastel"
  ]
 },
 "tests.test_styles":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_sub_models":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_sub_models.test_cluster":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_sub_models.test_dim_reduction":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_sub_models.test_embeddings":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_sub_models.test_mmr":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_subset":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_substitute":{
  "__set__":true,
  "elements":[
   "gridtest"
  ]
 },
 "tests.test_subtypes":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_suds":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_suffix_tree":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.test_suite":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_summaries":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_summarize_mtz_dtypes":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_summarizers":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_edmundson":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_kl":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_lex_rank":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_lsa":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_luhn":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_luhn_sentence_rating":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_random":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_reduction":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_sum_basic":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_text_rank":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summary_writer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.test_sumtype":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_supercell":{
  "__set__":true,
  "elements":[
   "crystals"
  ]
 },
 "tests.test_surface":{
  "__set__":true,
  "elements":[
   "oddt"
  ]
 },
 "tests.test_svd":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_svs":{
  "__set__":true,
  "elements":[
   "pymapvbvd"
  ]
 },
 "tests.test_sw_extras":{
  "__set__":true,
  "elements":[
   "oceans"
  ]
 },
 "tests.test_swagger":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_swagger_utils":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_symmetry":{
  "__set__":true,
  "elements":[
   "mofchecker"
  ]
 },
 "tests.test_sync":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.test_sync_query":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_sync_retry":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_sync_tx":{
  "__set__":true,
  "elements":[
   "edgedb-python"
  ]
 },
 "tests.test_syntax_v1":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_sz_obs":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_table":{
  "__set__":true,
  "elements":[
   "biom-format",
   "magicgui",
   "pdfme",
   "plottable"
  ]
 },
 "tests.test_table_source":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_tables":{
  "__set__":true,
  "elements":[
   "markdownify",
   "py-cordex",
   "tinydb"
  ]
 },
 "tests.test_tagged_cache":{
  "__set__":true,
  "elements":[
   "cachy"
  ]
 },
 "tests.test_tagger":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_tailing_slash_client_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_tank":{
  "__set__":true,
  "elements":[
   "rocketpy"
  ]
 },
 "tests.test_tarcisBug":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_target":{
  "__set__":true,
  "elements":[
   "gw-sklearn-xarray"
  ]
 },
 "tests.test_tars":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_tasks":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_tax_rates":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.test_tcp_helpers":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_tds_resume":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_team_rating":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.test_teams":{
  "__set__":true,
  "elements":[
   "o365"
  ]
 },
 "tests.test_techstacks":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_telemetry":{
  "__set__":true,
  "elements":[
   "quilt3"
  ]
 },
 "tests.test_tempeh":{
  "__set__":true,
  "elements":[
   "tempeh"
  ]
 },
 "tests.test_temperature":{
  "__set__":true,
  "elements":[
   "pyet",
   "xclim"
  ]
 },
 "tests.test_tempered_smc":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_template":{
  "__set__":true,
  "elements":[
   "web.py"
  ]
 },
 "tests.test_template_tag_meta":{
  "__set__":true,
  "elements":[
   "django-pwa"
  ]
 },
 "tests.test_templates":{
  "__set__":true,
  "elements":[
   "condorpy",
   "xrd_simulator"
  ]
 },
 "tests.test_templatetags":{
  "__set__":true,
  "elements":[
   "django-controlcenter",
   "django-filebrowser",
   "django-hosts"
  ]
 },
 "tests.test_temporal":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_temporary":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_terminal":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_terminal_formatter":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_terrain":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_tessellation":{
  "__set__":true,
  "elements":[
   "tesspy"
  ]
 },
 "tests.test_tessellation_functions":{
  "__set__":true,
  "elements":[
   "tesspy"
  ]
 },
 "tests.test_test_client_port":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_test_utils":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_testing":{
  "__set__":true,
  "elements":[
   "sparkypandy",
   "sphinx-js"
  ]
 },
 "tests.test_tests":{
  "__set__":true,
  "elements":[
   "pycircstat"
  ]
 },
 "tests.test_tex":{
  "__set__":true,
  "elements":[
   "goosebib"
  ]
 },
 "tests.test_texplain_example1":{
  "__set__":true,
  "elements":[
   "texplain"
  ]
 },
 "tests.test_text":{
  "__set__":true,
  "elements":[
   "embetter",
   "pdfme"
  ]
 },
 "tests.test_text_classifier":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_text_processor":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_text_regressor":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_text_to_phonemes":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_textfmts":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_textnets":{
  "__set__":true,
  "elements":[
   "textnets"
  ]
 },
 "tests.test_tfext":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_tfrecords":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_theseus_layer":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.test_threads":{
  "__set__":true,
  "elements":[
   "pydrill"
  ]
 },
 "tests.test_thresh":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.test_tie_point_grid":{
  "__set__":true,
  "elements":[
   "arosics"
  ]
 },
 "tests.test_tiff2jp2":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_time":{
  "__set__":true,
  "elements":[
   "mesa",
   "unifhy"
  ]
 },
 "tests.test_time_series":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_time_slice":{
  "__set__":true,
  "elements":[
   "jacqq"
  ]
 },
 "tests.test_time_utilities":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_timeline":{
  "__set__":true,
  "elements":[
   "pyannote.core"
  ]
 },
 "tests.test_timeout_logic":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_timezone":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_timing":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_tinydb":{
  "__set__":true,
  "elements":[
   "tinydb"
  ]
 },
 "tests.test_tinydb_catalogue_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_tinydb_manager_for_parallel_requests":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_tinyimagenet":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_tls":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_to_file":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_to_html_file":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_to_terminal":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_token":{
  "__set__":true,
  "elements":[
   "pydifact",
   "pygments"
  ]
 },
 "tests.test_token_cache":{
  "__set__":true,
  "elements":[
   "msal"
  ]
 },
 "tests.test_tokenize_data":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_tokenize_sentence":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_tokenize_utils":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_tokenizer":{
  "__set__":true,
  "elements":[
   "pydifact",
   "stanza"
  ]
 },
 "tests.test_tokenizers":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_toml_document":{
  "__set__":true,
  "elements":[
   "tomlkit"
  ]
 },
 "tests.test_toml_file":{
  "__set__":true,
  "elements":[
   "tomlkit"
  ]
 },
 "tests.test_toml_spec_tests":{
  "__set__":true,
  "elements":[
   "tomlkit"
  ]
 },
 "tests.test_toml_tests":{
  "__set__":true,
  "elements":[
   "tomlkit"
  ]
 },
 "tests.test_toolbar":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.test_toolkit":{
  "__set__":true,
  "elements":[
   "oddt"
  ]
 },
 "tests.test_tools":{
  "__set__":true,
  "elements":[
   "moviepy",
   "pymace",
   "reacnetgenerator",
   "yggdrasil"
  ]
 },
 "tests.test_tools_matrix":{
  "__set__":true,
  "elements":[
   "rocketpy"
  ]
 },
 "tests.test_tools_vector":{
  "__set__":true,
  "elements":[
   "rocketpy"
  ]
 },
 "tests.test_top_k_discords":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_top_k_motifs":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_topic_representation":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_topojson":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_tornado":{
  "__set__":true,
  "elements":[
   "mesa"
  ]
 },
 "tests.test_touchup":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_tqdm":{
  "__set__":true,
  "elements":[
   "magicgui"
  ]
 },
 "tests.test_tracing":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_track_packages":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_trackable":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_tracker":{
  "__set__":true,
  "elements":[
   "btrack"
  ]
 },
 "tests.test_tracklets":{
  "__set__":true,
  "elements":[
   "btrack"
  ]
 },
 "tests.test_trainer":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_traits":{
  "__set__":true,
  "elements":[
   "jupyter_telemetry"
  ]
 },
 "tests.test_trajectory":{
  "__set__":true,
  "elements":[
   "blackjax",
   "movingpandas"
  ]
 },
 "tests.test_transactions":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_transcription":{
  "__set__":true,
  "elements":[
   "deepgram-sdk"
  ]
 },
 "tests.test_transect":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_transfers":{
  "__set__":true,
  "elements":[
   "bdsim"
  ]
 },
 "tests.test_transform":{
  "__set__":true,
  "elements":[
   "fiona",
   "fslpy",
   "py-cordex"
  ]
 },
 "tests.test_transform.test_affine":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transform.test_flirt":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transform.test_fnirt":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transform.test_nonlinear":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transform.test_x5":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transformation_matrix":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_transformations":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.test_transforms":{
  "__set__":true,
  "elements":[
   "gpflow",
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_transport":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_transport_http":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_tree":{
  "__set__":true,
  "elements":[
   "dlint",
   "pymc-bart"
  ]
 },
 "tests.test_trial":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_triang":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_tridiag":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_trust_notebook":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_trusted_context_connect":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_trusted_context_pconnect":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_tsne":{
  "__set__":true,
  "elements":[
   "fasttsne"
  ]
 },
 "tests.test_turbine":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_turbofan":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_turbofan_geom":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_turbofan_weight":{
  "__set__":true,
  "elements":[
   "pyturbo"
  ]
 },
 "tests.test_tutorial":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_tutorials":{
  "__set__":true,
  "elements":[
   "hydra-core"
  ]
 },
 "tests.test_twist":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_twisted":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_twisted.test_inlinecallbacks_yield_statement":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_twisted.test_returnvalue_in_inlinecallbacks":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_twisted.test_yield_return_statement":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_twix":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_two_factor":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_two_particle":{
  "__set__":true,
  "elements":[
   "pennylane-qchem"
  ]
 },
 "tests.test_type":{
  "__set__":true,
  "elements":[
   "lux-api",
   "plum-dispatch"
  ]
 },
 "tests.test_type_hints":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_typed_lists":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_typedoc":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.test_types":{
  "__set__":true,
  "elements":[
   "magicgui",
   "nptyping",
   "tranquilizer"
  ]
 },
 "tests.test_types.test_bool":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_types.test_complex":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_types.test_datetime64":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_types.test_hashed_subscriptable_type":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_types.test_ndarray":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_types.test_number":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_types.test_object":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_types.test_structured_type":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_types.test_subarray_type":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_types.test_timedelta64":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_types.test_unicode":{
  "__set__":true,
  "elements":[
   "nptyping"
  ]
 },
 "tests.test_typing":{
  "__set__":true,
  "elements":[
   "erdantic",
   "hydrofunctions",
   "pampy"
  ]
 },
 "tests.test_udf":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.test_ugrid1d":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_ugrid2d":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_ugrid_dataset":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_ugrid_io":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_ui":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.test_uih":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_uih_orientation":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_ultimate_examples":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_ultimate_inverse_kinematics":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_uncertain_conditional":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_unicode":{
  "__set__":true,
  "elements":[
   "fiona",
   "inflect",
   "jupytext",
   "pymonetdb"
  ]
 },
 "tests.test_unicode_strings":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_unified_signin":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_unistring":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_units":{
  "__set__":true,
  "elements":[
   "modelparameters",
   "yggdrasil"
  ]
 },
 "tests.test_unix_socket":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_unknown_field":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_unpack":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_updates":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_updating":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_updatingrelationship":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_uplift_trees":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_uris":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.test_url_building":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_url_for":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_url_for_static":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_urldispatch":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_usersettableparam":{
  "__set__":true,
  "elements":[
   "mesa"
  ]
 },
 "tests.test_usgs_rdb":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_using_api":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_utf8":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_util":{
  "__set__":true,
  "elements":[
   "amset",
   "anyscale",
   "biom-format",
   "borb",
   "dlint",
   "emperor",
   "jupytab",
   "napkin",
   "ncar-jobqueue",
   "pdpipe",
   "plum-dispatch",
   "pygeoapi",
   "pygments",
   "pymc-base",
   "quilt",
   "quilt3",
   "recordwhat",
   "sigpy",
   "technical",
   "yodatools"
  ]
 },
 "tests.test_util_manipulation":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_util_methods":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_utilities":{
  "__set__":true,
  "elements":[
   "chebfun",
   "deepforest",
   "localtileserver",
   "rocketpy"
  ]
 },
 "tests.test_utility":{
  "__set__":true,
  "elements":[
   "magpylib",
   "weldx"
  ]
 },
 "tests.test_utility_functions":{
  "__set__":true,
  "elements":[
   "jupyter-packaging"
  ]
 },
 "tests.test_utility_spec":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_utils":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "aiida-castep",
   "airflow",
   "artificial-adversary",
   "baycomp",
   "bertopic",
   "birdy",
   "blimpy",
   "btrack",
   "causalml",
   "clisops",
   "cmip6_preprocessing",
   "cmyt",
   "conservedwatersearch",
   "disk-objectstore",
   "django-controlcenter",
   "django-hosts",
   "dphtools",
   "edgetest",
   "embetter",
   "extract_model",
   "flask-restplus",
   "flask-security-too",
   "gemgis",
   "graspy",
   "grayskull",
   "gw-sklearn-xarray",
   "hydra-core",
   "ioos_qc",
   "jupyter_server",
   "llama-index",
   "lume-model",
   "lux-api",
   "marquez-python",
   "mastercard-oauth1-signer",
   "matrixprofile",
   "metview-python",
   "modelparameters",
   "mofchecker",
   "mols2grid",
   "mpire",
   "muttlib",
   "neutronics_material_maker",
   "numba_celltree",
   "oddt",
   "onnx-caffe2",
   "pangeo-forge-recipes",
   "prolif",
   "pycircstat",
   "pygpcca",
   "pypythia",
   "pyradios",
   "pyremo",
   "pyrsmq",
   "pysentiment2",
   "pystac",
   "python-flair",
   "rabpro",
   "radioactivedecay",
   "responsibleai",
   "rtfde",
   "sanic",
   "stanza",
   "stuf",
   "sumy",
   "tinydb",
   "tomlkit",
   "torch-optimizer",
   "typhos",
   "uncertainty-toolbox",
   "unifhy",
   "verta",
   "waybackpy",
   "web.py",
   "xclim",
   "xmip",
   "xopt",
   "xrd_simulator",
   "yodapy"
  ]
 },
 "tests.test_utils.fake_datetime":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.test_utils.test_arg_handler":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_clock":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.test_utils.test_compass":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.test_utils.test_compat":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_utils.test_exchanger":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.test_utils.test_file_utils":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_histogram":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_http_session":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_main_utils":{
  "__set__":true,
  "elements":[
   "rtfde"
  ]
 },
 "tests.test_utils.test_pagination":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_pip_requirements":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_record":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.test_utils.test_state":{
  "__set__":true,
  "elements":[
   "unifhy"
  ]
 },
 "tests.test_utils.test_time_utils":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_unicode_compatible_class":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_utils.test_utils":{
  "__set__":true,
  "elements":[
   "sumy",
   "verta"
  ]
 },
 "tests.test_utils.utils":{
  "__set__":true,
  "elements":[
   "rtfde"
  ]
 },
 "tests.test_utils_typing":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_uturn":{
  "__set__":true,
  "elements":[
   "blackjax"
  ]
 },
 "tests.test_v32":{
  "__set__":true,
  "elements":[
   "pygml"
  ]
 },
 "tests.test_v33":{
  "__set__":true,
  "elements":[
   "pygml"
  ]
 },
 "tests.test_validate":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_validation":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_validation_01":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.test_validation_02":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.test_value_optimization":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_value_resolution":{
  "__set__":true,
  "elements":[
   "docker-map"
  ]
 },
 "tests.test_var_units":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_variables":{
  "__set__":true,
  "elements":[
   "lume-model"
  ]
 },
 "tests.test_varian":{
  "__set__":true,
  "elements":[
   "spec2nii"
  ]
 },
 "tests.test_variational":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_variations":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_variations.test_class":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_variations.test_dynamic":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_variations.test_hierarchy":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_varint_encoding":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_vary":{
  "__set__":true,
  "elements":[
   "cachecontrol"
  ]
 },
 "tests.test_vector":{
  "__set__":true,
  "elements":[
   "edgedb-python",
   "gemgis"
  ]
 },
 "tests.test_vector_pipeline":{
  "__set__":true,
  "elements":[
   "rabpro"
  ]
 },
 "tests.test_vector_util_geometry":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_vector_util_geoseries":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_vector_util_grid":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_vectorizers":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_vectorizers.test_ctfidf":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_vectorizers.test_online_cv":{
  "__set__":true,
  "elements":[
   "bertopic"
  ]
 },
 "tests.test_velocimetry":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_verify":{
  "__set__":true,
  "elements":[
   "nbsmoke"
  ]
 },
 "tests.test_version":{
  "__set__":true,
  "elements":[
   "afwizard",
   "aiobotocore",
   "dcm2bids",
   "fiona",
   "geofileops",
   "jupyter_server",
   "propka",
   "pystac",
   "sigpy"
  ]
 },
 "tests.test_version_request":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_version_response":{
  "__set__":true,
  "elements":[
   "mythx-models"
  ]
 },
 "tests.test_versioning":{
  "__set__":true,
  "elements":[
   "sanic",
   "verta"
  ]
 },
 "tests.test_versioning.test_code":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_versioning.test_configuration":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_versioning.test_dataset":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_versioning.test_environment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_versioning.test_repository":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_versions":{
  "__set__":true,
  "elements":[
   "awslogs",
   "django-filebrowser"
  ]
 },
 "tests.test_vfs":{
  "__set__":true,
  "elements":[
   "fiona"
  ]
 },
 "tests.test_vhosts":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_video":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_videotools":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_view":{
  "__set__":true,
  "elements":[
   "django-pwa"
  ]
 },
 "tests.test_views":{
  "__set__":true,
  "elements":[
   "django-tinymce",
   "sanic"
  ]
 },
 "tests.test_virtualscreening":{
  "__set__":true,
  "elements":[
   "oddt"
  ]
 },
 "tests.test_vis":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_vision":{
  "__set__":true,
  "elements":[
   "embetter"
  ]
 },
 "tests.test_visual":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_visualization":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "gemgis",
   "mesa",
   "optuna",
   "plonk",
   "texthero",
   "weldx"
  ]
 },
 "tests.test_visualize":{
  "__set__":true,
  "elements":[
   "deepforest",
   "matrixprofile"
  ]
 },
 "tests.test_viz":{
  "__set__":true,
  "elements":[
   "uncertainty-toolbox"
  ]
 },
 "tests.test_vocs":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.test_voronoi":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_voyager_data_load":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_vs_mag2":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_vsa_aeff":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_vsi":{
  "__set__":true,
  "elements":[
   "localtileserver"
  ]
 },
 "tests.test_vue_widget":{
  "__set__":true,
  "elements":[
   "ipyvue"
  ]
 },
 "tests.test_waiter":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_walk":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_warn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_warnings":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_warp":{
  "__set__":true,
  "elements":[
   "ipygany"
  ]
 },
 "tests.test_water_clustering":{
  "__set__":true,
  "elements":[
   "conservedwatersearch"
  ]
 },
 "tests.test_waterfall":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_waterfall2":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_waterwatch":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_wavelet":{
  "__set__":true,
  "elements":[
   "sigpy"
  ]
 },
 "tests.test_wdl_parser":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_web":{
  "__set__":true,
  "elements":[
   "gemgis"
  ]
 },
 "tests.test_web_app":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_cli":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_exceptions":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_functional":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_log":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_middleware":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_request":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_request_handler":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_response":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_runner":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_sendfile":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_sendfile_functional":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_server":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_urldispatcher":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_websocket":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_web_websocket_functional":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_websocket_handshake":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_websocket_parser":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_websocket_writer":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_websockets":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_weights":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_welding_util":{
  "__set__":true,
  "elements":[
   "weldx"
  ]
 },
 "tests.test_whiley":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_widgets":{
  "__set__":true,
  "elements":[
   "afwizard",
   "django-tinymce",
   "magicgui",
   "typhos"
  ]
 },
 "tests.test_widgets_charts":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "tests.test_widgets_core":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "tests.test_widgets_simple":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "tests.test_windows":{
  "__set__":true,
  "elements":[
   "focal-stats"
  ]
 },
 "tests.test_worker":{
  "__set__":true,
  "elements":[
   "aiohttp"
  ]
 },
 "tests.test_workflow":{
  "__set__":true,
  "elements":[
   "condorpy"
  ]
 },
 "tests.test_workflows":{
  "__set__":true,
  "elements":[
   "quilt3"
  ]
 },
 "tests.test_workspace":{
  "__set__":true,
  "elements":[
   "pygls"
  ]
 },
 "tests.test_wps_caps":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_client":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_climatology_esp":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_climpred_hindcast_verification":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_era5":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_forecast_evaluation":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_forecast_flood_risk":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_forecast_graphs":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_generic_raster_subset":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_generic_shape_properties":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_generic_terrain_analysis":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_generic_zonal_stats":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_graph_fit":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_graph_tsstats":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_hindcast":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_hydrobasins_shape_selection":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_nalcms_zonal_stats":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_nrcan_daily":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_objective_functions":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_ostrich_gr4j_cemaneige":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_ostrich_hbv_ec":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_ostrich_hmets":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_ostrich_mohyse":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven_gr4j_cemaneige":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven_hbv_ec":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven_hmets":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven_mohyse":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven_multi_model":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_realtime_forecast":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_regionalization":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wrapper":{
  "__set__":true,
  "elements":[
   "otwrapy",
   "waybackpy"
  ]
 },
 "tests.test_write":{
  "__set__":true,
  "elements":[
   "fiona",
   "tomlkit"
  ]
 },
 "tests.test_write_does_not_modify_notebook":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_write_tiff":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.test_write_to_fil":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_writers":{
  "__set__":true,
  "elements":[
   "crystals",
   "pangeo-forge-recipes",
   "python-barcode"
  ]
 },
 "tests.test_writing":{
  "__set__":true,
  "elements":[
   "pystac",
   "starfile"
  ]
 },
 "tests.test_writing_tiles":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_wsgi":{
  "__set__":true,
  "elements":[
   "web.py"
  ]
 },
 "tests.test_wstrust":{
  "__set__":true,
  "elements":[
   "msal"
  ]
 },
 "tests.test_xarray":{
  "__set__":true,
  "elements":[
   "daops",
   "dask_groupby",
   "flox"
  ]
 },
 "tests.test_xarray.test_xarray_aggregation":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_xarray_netcdf_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_xarray_utils":{
  "__set__":true,
  "elements":[
   "nappy"
  ]
 },
 "tests.test_xarray_zarr_provider":{
  "__set__":true,
  "elements":[
   "pygeoapi"
  ]
 },
 "tests.test_xgboost":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_xgboost_explainer":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_xgboost_treeviz":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_xml":{
  "__set__":true,
  "elements":[
   "overpy"
  ]
 },
 "tests.test_xml_collector":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_xml_event":{
  "__set__":true,
  "elements":[
   "parsevasp"
  ]
 },
 "tests.test_xml_obj":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_xml_regular":{
  "__set__":true,
  "elements":[
   "parsevasp"
  ]
 },
 "tests.test_xns11":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_xopt":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.test_xsum":{
  "__set__":true,
  "elements":[
   "xsum"
  ]
 },
 "tests.test_xsum.test_xsum":{
  "__set__":true,
  "elements":[
   "xsum"
  ]
 },
 "tests.test_xyz":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_yamlfile":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_yml_head":{
  "__set__":true,
  "elements":[
   "model-index"
  ]
 },
 "tests.test_z":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_z_numpy":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_z_random":{
  "__set__":true,
  "elements":[
   "zfit"
  ]
 },
 "tests.test_zeopp":{
  "__set__":true,
  "elements":[
   "mofchecker"
  ]
 },
 "tests.testalternative":{
  "__set__":true,
  "elements":[
   "pyet"
  ]
 },
 "tests.testapp":{
  "__set__":true,
  "elements":[
   "django-tinymce"
  ]
 },
 "tests.testapp.admin":{
  "__set__":true,
  "elements":[
   "django-tinymce"
  ]
 },
 "tests.testapp.migrations":{
  "__set__":true,
  "elements":[
   "django-tinymce"
  ]
 },
 "tests.testapp.migrations.0001_initial":{
  "__set__":true,
  "elements":[
   "django-tinymce"
  ]
 },
 "tests.testapp.migrations.0002_testmodel":{
  "__set__":true,
  "elements":[
   "django-tinymce"
  ]
 },
 "tests.testapp.models":{
  "__set__":true,
  "elements":[
   "django-tinymce"
  ]
 },
 "tests.testavro":{
  "__set__":true,
  "elements":[
   "scrapy-contrib-bigexporters"
  ]
 },
 "tests.testbasic":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.testcarrierdata":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testcarrierdata.data0":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_800":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_882":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_979":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_AD":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_AE":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_AM":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_AO":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_AR":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_AU":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_BB":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_BR":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_BS":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_BY":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_CA":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_CC":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_CN":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_CX":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_DE":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_FR":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_GB":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_GG":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_IT":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_JP":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_KR":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_MX":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_NZ":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_PL":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_RE":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_RU":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_SE":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_SG":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_TA":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_US":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_UZ":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testdata.region_YT":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testfao56":{
  "__set__":true,
  "elements":[
   "pyet"
  ]
 },
 "tests.testgeodata":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testgeodata.data0":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testgpu":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.testing":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.testing_utilities":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.testitem":{
  "__set__":true,
  "elements":[
   "scrapy-contrib-bigexporters"
  ]
 },
 "tests.testmetadatatest":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testmeteo":{
  "__set__":true,
  "elements":[
   "pyet"
  ]
 },
 "tests.testnumpy":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.testorc":{
  "__set__":true,
  "elements":[
   "scrapy-contrib-bigexporters"
  ]
 },
 "tests.testparquet":{
  "__set__":true,
  "elements":[
   "scrapy-contrib-bigexporters"
  ]
 },
 "tests.testrootcling":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.tests":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield",
   "fancylog",
   "ffx",
   "micrometa",
   "moviepy",
   "neurokit2",
   "openmichrom",
   "plantcv",
   "portalocker",
   "rabpro"
  ]
 },
 "tests.tests.test_DUMMY":{
  "__set__":true,
  "elements":[
   "fancylog"
  ]
 },
 "tests.tests.test_micrometa":{
  "__set__":true,
  "elements":[
   "micrometa"
  ]
 },
 "tests.tests.test_tools":{
  "__set__":true,
  "elements":[
   "micrometa"
  ]
 },
 "tests.tests_authorization":{
  "__set__":true,
  "elements":[
   "crossref_commons_py"
  ]
 },
 "tests.tests_bio":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_complexity":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_data":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_default":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_adversarial_jax":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_ahp_lif_torch":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_boolean_state":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_dropout":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_exp_smooth_jax":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_exp_syn":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_exp_syn_exodus":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_exp_syn_jax":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_exp_syn_torch":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_ffwd_stack":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_filter_bank":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_graph_base":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_graph_modules":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_graph_tracing":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_graph_utils":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_import":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_instant":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_jax":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_jax_loss":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_lif":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_lif_bitshift_torch":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_lif_jax":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_lif_neuron_torch":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_lif_sinabs":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_lif_torch":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_linear":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_linear_torch":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_modules":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_param_transformer":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_parameters":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_quantize":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_rate":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_rate_torch":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_residual":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_samna_readout":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_sequential":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_softmax_jax":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_standard_dynamics":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_surrogate_gradients":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_synnet":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_timedmodule":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_timeseries":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_torch_loss":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_torch_module":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_torch_transform":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_updown_torch":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_wavesense_torch":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_default.test_xylosim_v2":{
  "__set__":true,
  "elements":[
   "rockpool"
  ]
 },
 "tests.tests_ecg":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_ecg_delineate":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_ecg_findpeaks":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_eda":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_eeg":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_electronic_structure":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_electronic_structure.test_optics":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_emg":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_eog":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_epochs":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_events":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_for_travis":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.tests_hrv":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_http_utils":{
  "__set__":true,
  "elements":[
   "crossref_commons_py"
  ]
 },
 "tests.tests_io":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_io.test_castep":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_io.test_questaal":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_microstates":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_phonon":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_phonon.test_phonopy":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_plotting":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_plotting.test_band_plotter":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_plotting.test_dos_plotter":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_ppg":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_rsp":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_sampling":{
  "__set__":true,
  "elements":[
   "crossref_commons_py"
  ]
 },
 "tests.tests_signal":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_signal_fixpeaks":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_stats":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_symmetry":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_symmetry.test_bradcrack_kpath":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_symmetry.test_custom_kpath":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_symmetry.test_pymatgen_kpath":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_symmetry.test_seekpath_kpath":{
  "__set__":true,
  "elements":[
   "sumo"
  ]
 },
 "tests.tests_utils":{
  "__set__":true,
  "elements":[
   "crossref_commons_py"
  ]
 },
 "tests.testspec":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.testtzdata":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.testtzdata.data0":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.text_splitter":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.text_splitter.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.text_splitter.test_code_splitter":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.text_splitter.test_markdown_splitter":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.text_splitter.test_sentence_splitter":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.text_splitter.test_token_splitter":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.text_stages":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.text_stages.test_drop_tokens_by_length":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.text_stages.test_drop_tokens_by_list":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.text_stages.test_regex_replace":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.text_test":{
  "__set__":true,
  "elements":[
   "pynlp-lib"
  ]
 },
 "tests.theanolm":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.basiclayer_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.classdistribution_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.iterators_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.lattice_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.latticedecoder_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.operations_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.probfunctions_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.recurrentstate_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.score_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.statistics_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.textsampler_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.textscorer_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.trainers_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.vocabulary_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.wordclass_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.ti_deps":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.contexts":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.dag_ti_slots_available_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.dag_unpaused_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.dagrun_exists_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.fake_models":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.not_in_retry_period_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.not_running_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.not_skipped_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.pool_has_space_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.prev_dagrun_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.runnable_exec_date_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.trigger_rule_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.valid_state_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.time_strategies":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.timezonetest":{
  "__set__":true,
  "elements":[
   "phonenumbers"
  ]
 },
 "tests.timing_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.token":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.token.conftest":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.token.test_auth":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.token.test_basic":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.token_predictor":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.token_predictor.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.tool_test":{
  "__set__":true,
  "elements":[
   "json5"
  ]
 },
 "tests.toolkit":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.html_to_pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.html_to_pdf.test_export_html_to_pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.markdown_to_pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.markdown_to_pdf.test_export_markdown_to_pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_jpg":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_jpg.test_export_pdf_to_jpg":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_json":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_json.test_export_pdf_to_json":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_mp3":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_mp3.test_export_to_mp3":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_svg":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_svg.test_export_pdf_to_svg":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.image.test_extract_images":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.image.test_optimize_images":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.ocr":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.ocr.test_extract_text_using_ocr":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.paragraph":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.paragraph.test_simple_paragraph_extraction":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.redact":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.redact.test_redact_common_regular_expressions":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.table.test_detect_table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_courier_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_keywords":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_red_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_regex":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_text_from_self_made_invoice":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_part_of_speech_tagger":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.tools":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "amset",
   "diffprivlib",
   "llama-index",
   "responsibleai",
   "xyzspaces"
  ]
 },
 "tests.tools.conftest":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.tools.data":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.data.orbital":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.data.orbital.test_orbitals":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.dbimporters":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.dbimporters.test_icsd":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.dbimporters.test_materialsproject":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.graph":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.graph.test_age":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.graph.test_graph_traversers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.groups":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.groups.test_paths":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.common":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.common.test_archive":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_migration":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_migrations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v01_to_v02":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v02_to_v03":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v03_to_v04":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v04_to_v05":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v05_to_v06":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v06_to_v07":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v07_to_v08":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v08_to_v09":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_attributes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_calculations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_codes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_comments":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_computers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_extras":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_groups":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_links":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_logs":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_users":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.test_complex":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.test_prov_redesign":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.test_simple":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.test_specific_import":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.shared":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.tools.shared.test_attribute_serialization":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.tools.shared.test_state_directory_management":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.tools.shared.test_versions":{
  "__set__":true,
  "elements":[
   "responsibleai"
  ]
 },
 "tests.tools.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.tools.test_count_nonzero":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_deformation":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.tools.test_histogram":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_histogram2d":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_histogramdd":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_mean":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_median":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_nanmean":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_nanstd":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_nansum":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_nanvar":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_ondemand_loader":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.tools.test_percentile":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_quantile":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_std":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_sum":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_tools":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.tools.test_utils":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.tools.test_var":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.tool_spec":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.tools.tool_spec.test_base":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.tools.visualization":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.visualization.test_graph":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.topology":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.topology.test_bulk_topology":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.topology.test_topology":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.torch":{
  "__set__":true,
  "elements":[
   "lume-model"
  ]
 },
 "tests.torch.test_model":{
  "__set__":true,
  "elements":[
   "lume-model"
  ]
 },
 "tests.torch.test_module":{
  "__set__":true,
  "elements":[
   "lume-model"
  ]
 },
 "tests.torsion":{
  "__set__":true,
  "elements":[
   "polyfempy"
  ]
 },
 "tests.training":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_ar1":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_dictionary_mbatches":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_losses":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_online_strategies":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_plugins":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_regularization":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_replay":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_strategies":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_strategies_accuracy":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_strategy_utils":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_stream_completeness":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_supervised_regression":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_training_utils":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.transform_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.transformation":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.transformation.test_cli":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.transformation.test_main":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.transformation.test_tools":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.transforms":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transforms._test_trafos2":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transforms.test_geometric_transform":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transforms.test_integral":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transforms.test_map_coordinates":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transforms.test_trafos":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transports":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.transports.test_all_plugins":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.transports.test_local":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.transports.test_ssh":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tuning":{
  "__set__":true,
  "elements":[
   "pymc-base",
   "wrighttools"
  ]
 },
 "tests.tuning.spectral_delay_correction":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.tuning.spectral_delay_correction.process_wigner":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.tuning.test_scaling":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.tuning.test_starting":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.two_funcs":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.typed_list":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.typed_list.test_basic":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.typed_list.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.typed_list.test_type":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.typewriter":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.unit":{
  "__set__":true,
  "elements":[
   "aloe",
   "climix",
   "docarray",
   "fair-research-login",
   "globus-cli",
   "globus-sdk",
   "google-cloud-appengine-logging",
   "google-cloud-bigquery",
   "google-cloud-monitoring",
   "google-cloud-recommendations-ai",
   "google-cloud-resource-manager",
   "graypy",
   "hcloud",
   "histolab",
   "inquirer",
   "jupyterlab-git",
   "neo4j-python-driver",
   "pyproprop",
   "python-gitlab",
   "qpd",
   "readchar",
   "redisgraph-py",
   "serverlessrepo",
   "small-text"
  ]
 },
 "tests.unit.actions":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.actions.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.actions.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.actions.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.array":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_content":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_embed":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_empty":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_eval_class":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_getset":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_group":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_io":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_magic":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_match":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_parallel":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_plot":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_reduce":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_sample":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_text":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.mixins.test_traverse":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.test_advance_indexing":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.test_construct":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.test_from_to_bytes":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.test_ravel_unravel":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.array.test_sequence":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.certificates":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.certificates.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.certificates.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.certificates.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.conftest":{
  "__set__":true,
  "elements":[
   "fair-research-login",
   "hcloud",
   "python-gitlab",
   "serverlessrepo"
  ]
 },
 "tests.unit.core":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.core.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.core.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.data":{
  "__set__":true,
  "elements":[
   "histolab",
   "neo4j-python-driver"
  ]
 },
 "tests.unit.data.test_data":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.data.test_packing":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.datacenters":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.datacenters.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.datacenters.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.document":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_converters":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_docdata":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_feature_hashing":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_io":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_namedscore":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_ndarray":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_pickle":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_porting":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_protobuf":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_repr_str":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.document.test_summary":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.features":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.features.steps":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.filters":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.filters.test_image_filters":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.filters.test_morphological_filters":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.filters.test_util":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.firewalls":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.firewalls.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.firewalls.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.firewalls.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.floating_ips":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.floating_ips.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.floating_ips.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.floating_ips.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.gapic":{
  "__set__":true,
  "elements":[
   "google-cloud-appengine-logging",
   "google-cloud-recommendations-ai",
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.appengine_logging_v1":{
  "__set__":true,
  "elements":[
   "google-cloud-appengine-logging"
  ]
 },
 "tests.unit.gapic.appengine_logging_v1.test_appengine_logging_v1":{
  "__set__":true,
  "elements":[
   "google-cloud-appengine-logging"
  ]
 },
 "tests.unit.gapic.recommendationengine_v1beta1":{
  "__set__":true,
  "elements":[
   "google-cloud-recommendations-ai"
  ]
 },
 "tests.unit.gapic.recommendationengine_v1beta1.test_catalog_service":{
  "__set__":true,
  "elements":[
   "google-cloud-recommendations-ai"
  ]
 },
 "tests.unit.gapic.recommendationengine_v1beta1.test_prediction_api_key_registry":{
  "__set__":true,
  "elements":[
   "google-cloud-recommendations-ai"
  ]
 },
 "tests.unit.gapic.recommendationengine_v1beta1.test_prediction_service":{
  "__set__":true,
  "elements":[
   "google-cloud-recommendations-ai"
  ]
 },
 "tests.unit.gapic.recommendationengine_v1beta1.test_user_event_service":{
  "__set__":true,
  "elements":[
   "google-cloud-recommendations-ai"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_folders":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_organizations":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_projects":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_tag_bindings":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_tag_keys":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_tag_values":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.helper":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.unit.helpers":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.helpers.test_labels":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.images":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.images.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.images.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.images.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.index_functions":{
  "__set__":true,
  "elements":[
   "climix"
  ]
 },
 "tests.unit.index_functions.conftest":{
  "__set__":true,
  "elements":[
   "climix"
  ]
 },
 "tests.unit.index_functions.test_index_functions":{
  "__set__":true,
  "elements":[
   "climix"
  ]
 },
 "tests.unit.index_functions.test_percentile_functions":{
  "__set__":true,
  "elements":[
   "climix"
  ]
 },
 "tests.unit.index_functions.test_support":{
  "__set__":true,
  "elements":[
   "climix"
  ]
 },
 "tests.unit.io":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.conftest":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_class_bolt":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_class_bolt3":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_class_bolt4x0":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_class_bolt4x1":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_class_bolt4x2":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_direct":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_routing":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.isos":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.isos.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.isos.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.isos.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.load_balancer_types":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.load_balancer_types.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.load_balancer_types.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.load_balancers":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.load_balancers.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.load_balancers.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.load_balancers.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.locations":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.locations.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.locations.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.mixins":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.mixins.test_meta_mixins":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.mixins.test_mixin_methods":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.mixins.test_object_mixins_attributes":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.mocks":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.unit.networks":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.networks.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.networks.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.networks.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.objects":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.conftest":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_appearance":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_applications":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_audit_events":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_badges":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_bridges":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_commits":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_deploy_tokens":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_deployments":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_environments":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_groups":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_hooks":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_issues":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_job_artifacts":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_jobs":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_keys":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_members":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_merge_request_pipelines":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_merge_requests":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_mro":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_packages":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_personal_access_tokens":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_pipeline_schedules":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_pipelines":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_project_access_tokens":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_project_import_export":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_project_merge_request_approvals":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_project_statistics":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_projects":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_releases":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_remote_mirrors":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_repositories":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_resource_label_events":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_resource_milestone_events":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_resource_state_events":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_runners":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_services":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_snippets":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_submodules":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_todos":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_users":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_variables":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.options":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.options.test_options":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.options.test_processed_property_with_option":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.placement_groups":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.placement_groups.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.placement_groups.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.placement_groups.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.primary_ips":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.primary_ips.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.primary_ips.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.primary_ips.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.processed_property":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_cast":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_compare":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_default":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_general":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_iterable":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_optimisable":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_option":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_parse_kwargs":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_post_method":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_read_only":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_str_format":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.processed_property.test_type_repr_error_msg":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.qpd":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd._parser":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd._parser.test_sql":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd._parser.test_utils":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd._parser.test_visitors":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd.test_dataframe":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd.test_specs":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd.test_workflow":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_dask":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_dask.test_engine":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_dask.test_sql":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_pandas":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_pandas.test_engine":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_pandas.test_sql":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_ray":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_ray.test_engine":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_ray.test_sql":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_test":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.qpd_test.test_utils":{
  "__set__":true,
  "elements":[
   "qpd"
  ]
 },
 "tests.unit.server_types":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.server_types.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.server_types.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.servers":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.servers.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.servers.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.servers.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.small_text":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.classifiers.test_classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.classifiers.test_factories":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.conftest":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.data":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.data.test_dataset_construction":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.data.test_datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.data.test_datatset_views":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.data.test_sampling":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.initialization":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.initialization.test_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.classifiers.test_base":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.classifiers.test_factories":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.classifiers.test_kimcnn":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.models":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.models.test_kimcnn":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.test_dataset_construction":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.test_datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.test_imports":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.test_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.test_utils":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.utils":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.utils.test_data":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.utils.test_labels":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.utils.test_loss":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.utils.test_misc":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.classifiers.test_classification":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.classifiers.test_factories":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.classifiers.test_setfit":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.test_dataset_construction":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.test_datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.test_imports":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.utils":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.utils.test_classification":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.query_strategies.test_base":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.query_strategies.test_bayesian":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.query_strategies.test_coresets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.query_strategies.test_multi_label":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.query_strategies.test_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.stopping_criteria":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.stopping_criteria.test_base":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.stopping_criteria.test_change":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.stopping_criteria.test_kappa":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.stopping_criteria.test_uncertainty":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.stopping_criteria.test_utility":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.test_active_learner":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.test_base":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.test_imports":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.test_version":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.training":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.training.test_early_stopping":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.training.test_metrics":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.training.test_model_selection":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_annotations":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_classification":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_clustering":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_data":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_datetime":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_labels":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_logging":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.ssh_keys":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.ssh_keys.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.ssh_keys.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.ssh_keys.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.test_ExcludeFilter":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.unit.test_GELFRabbitHandler":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.unit.test__dataframe":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test__helpers":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery"
  ]
 },
 "tests.unit.test__http":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery",
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_access_token_authorizer":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_activation_response":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_addressing":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_api":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_application_metadata":{
  "__set__":true,
  "elements":[
   "serverlessrepo"
  ]
 },
 "tests.unit.test_application_policy":{
  "__set__":true,
  "elements":[
   "serverlessrepo"
  ]
 },
 "tests.unit.test_auth_client":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_base":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.test_base_client":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_basic_authorizer":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_bookmark_commands":{
  "__set__":true,
  "elements":[
   "globus-cli"
  ]
 },
 "tests.unit.test_branch":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_chunking":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.unit.test_cli":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.test_client":{
  "__set__":true,
  "elements":[
   "fair-research-login",
   "google-cloud-bigquery",
   "google-cloud-monitoring",
   "hcloud"
  ]
 },
 "tests.unit.test_client_credentials_authorizer":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_clone":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_code_handler":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.unit.test_codegen":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_compositions":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_conf":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_confidential_client":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_config":{
  "__set__":true,
  "elements":[
   "globus-sdk",
   "jupyterlab-git",
   "python-gitlab"
  ]
 },
 "tests.unit.test_config_loading":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_data":{
  "__set__":true,
  "elements":[
   "globus-sdk",
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_dataset":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery"
  ]
 },
 "tests.unit.test_delegate_proxy":{
  "__set__":true,
  "elements":[
   "globus-cli"
  ]
 },
 "tests.unit.test_diff":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_edge":{
  "__set__":true,
  "elements":[
   "redisgraph-py"
  ]
 },
 "tests.unit.test_endpoint_create":{
  "__set__":true,
  "elements":[
   "globus-cli"
  ]
 },
 "tests.unit.test_endpoint_update":{
  "__set__":true,
  "elements":[
   "globus-cli"
  ]
 },
 "tests.unit.test_exc":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_exceptions":{
  "__set__":true,
  "elements":[
   "histolab",
   "neo4j-python-driver",
   "python-gitlab"
  ]
 },
 "tests.unit.test_fs":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_get_identities":{
  "__set__":true,
  "elements":[
   "globus-cli"
  ]
 },
 "tests.unit.test_git":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_gitlab":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.test_gitlab_auth":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.test_gitlab_http_methods":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.test_graph":{
  "__set__":true,
  "elements":[
   "redisgraph-py"
  ]
 },
 "tests.unit.test_group":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_handler":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.unit.test_handlers":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_hcloud":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.test_import_neo4j":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_job":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery"
  ]
 },
 "tests.unit.test_key":{
  "__set__":true,
  "elements":[
   "readchar"
  ]
 },
 "tests.unit.test_label":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_language_fr":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_language_ptbr":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_language_ru":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_local_server":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.unit.test_login_command":{
  "__set__":true,
  "elements":[
   "globus-cli"
  ]
 },
 "tests.unit.test_main":{
  "__set__":true,
  "elements":[
   "climix"
  ]
 },
 "tests.unit.test_masks":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_metric":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_named_iterable":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.test_native_client":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_node":{
  "__set__":true,
  "elements":[
   "redisgraph-py"
  ]
 },
 "tests.unit.test_null_authorizer":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_oauth2_authorization_code":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_oauth2_native_app":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_one_use_option":{
  "__set__":true,
  "elements":[
   "globus-cli"
  ]
 },
 "tests.unit.test_paging":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_parser":{
  "__set__":true,
  "elements":[
   "aloe",
   "serverlessrepo"
  ]
 },
 "tests.unit.test_path":{
  "__set__":true,
  "elements":[
   "redisgraph-py"
  ]
 },
 "tests.unit.test_permission_helper":{
  "__set__":true,
  "elements":[
   "serverlessrepo"
  ]
 },
 "tests.unit.test_placeholder":{
  "__set__":true,
  "elements":[
   "docarray"
  ]
 },
 "tests.unit.test_prompt":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.unit.test_publish":{
  "__set__":true,
  "elements":[
   "serverlessrepo"
  ]
 },
 "tests.unit.test_pushpull":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_query":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery",
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_query_result":{
  "__set__":true,
  "elements":[
   "redisgraph-py"
  ]
 },
 "tests.unit.test_question":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.unit.test_readkey":{
  "__set__":true,
  "elements":[
   "readchar"
  ]
 },
 "tests.unit.test_record":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_refresh_token_authorizer":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_registry":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_renewing_authorizer":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_resource":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_response":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_scenario_parsing":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_schema":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery"
  ]
 },
 "tests.unit.test_scorer":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_security":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_slide":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_step_parsing":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_storage_classes":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.unit.test_storage_tools":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.unit.test_str_format_function":{
  "__set__":true,
  "elements":[
   "pyproprop"
  ]
 },
 "tests.unit.test_strings":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_table":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery"
  ]
 },
 "tests.unit.test_testing":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_theme":{
  "__set__":true,
  "elements":[
   "inquirer"
  ]
 },
 "tests.unit.test_tile":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_tiler":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_timeseries":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_token_response":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_tools":{
  "__set__":true,
  "elements":[
   "aloe"
  ]
 },
 "tests.unit.test_transfer_client":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_transfer_client_manager":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_transfer_client_shared":{
  "__set__":true,
  "elements":[
   "globus-sdk"
  ]
 },
 "tests.unit.test_types":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver",
   "python-gitlab"
  ]
 },
 "tests.unit.test_util":{
  "__set__":true,
  "elements":[
   "histolab",
   "redisgraph-py"
  ]
 },
 "tests.unit.test_utils":{
  "__set__":true,
  "elements":[
   "aloe",
   "pyproprop",
   "python-gitlab"
  ]
 },
 "tests.unit.time":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_clock":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_clocktime":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_date":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_datetime":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_duration":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_hydration":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_time":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.volumes":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.volumes.conftest":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.volumes.test_client":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit.volumes.test_domain":{
  "__set__":true,
  "elements":[
   "hcloud"
  ]
 },
 "tests.unit_tests":{
  "__set__":true,
  "elements":[
   "lightwood",
   "param_persist",
   "verta",
   "vizlo"
  ]
 },
 "tests.unit_tests.agents":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.agents.sqlalchemy_agent":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.agents.sqlalchemy_agent.conftest":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.agents.sqlalchemy_agent.test_sqlalchemy_agent":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.agents.test_base_agent":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.custom_modules":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.custom_modules.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.custom_modules.test_custom_modules_util":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.data":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.data.test_imputers":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.data.test_transform_ts":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.deployment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.deployment.test_build":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.deployment.test_build_scan":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.deployment.test_deployed_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.deployment.test_endpoint":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.encoder":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.audio":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.audio.test_mfcc":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.categorical":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.categorical.test_autoencoder":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.categorical.test_binary":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.categorical.test_multihot":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.categorical.test_onehot":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.date":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.date.test_datetime":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.identity":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.identity.test_identity":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.images":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.images.test_img_2_vec":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.numeric":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.numeric.test_numeric":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.text":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.text.test_pretrained":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.text.test_rnn":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.text.test_short":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.text.test_tfidf":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.text.test_vocab":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.time_series":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.time_series.test_timeseries_rnn":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.encoder.time_series.test_transformer":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.environment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.environment.test_python":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.helpers":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.unit_tests.pipeline":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.pipeline.test_step_handler":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.registry":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.registry.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.registry.test_check_model_dependencies":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.registry.test_model_dependencies":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.registry.test_registered_model_version":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.sqlalchemy_data_models":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.sqlalchemy_data_models.conftest":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.sqlalchemy_data_models.test_instance_model":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.sqlalchemy_data_models.test_param_model":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.strategies":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.test_deployed_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.test_endpoint":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.test_endpoint_class":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.test_runtime":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.test_solving":{
  "__set__":true,
  "elements":[
   "vizlo"
  ]
 },
 "tests.unit_tests.test_transformation":{
  "__set__":true,
  "elements":[
   "vizlo"
  ]
 },
 "tests.unit_tests.test_visualization":{
  "__set__":true,
  "elements":[
   "vizlo"
  ]
 },
 "tests.unit_tests_utils":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.units":{
  "__set__":true,
  "elements":[
   "tsfresh",
   "wrighttools"
  ]
 },
 "tests.units.feature_extraction":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_extraction.test_extraction":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_extraction.test_feature_calculations":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_extraction.test_settings":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_benjamini_hochberg_test":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_checks":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_feature_significance":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_relevance":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_selection":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_significance_tests":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.scripts":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.scripts.test_run_tsfresh":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.transformers":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.transformers.test_feature_augmenter":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.transformers.test_feature_selector":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.transformers.test_per_column_imputer":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.transformers.test_relevant_feature_augmenter":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.utilities":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.utilities.test_dataframe_functions":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.utilities.test_distribution":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.utilities.test_string_manipilations":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.unittest_brain":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_fromnumeric":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_function_base":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_multiarray":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_numeric":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_numerictypes":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_umath":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_ndarray":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_random_mtrand":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_builder":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_helpers":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_inference":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_lookup":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_manager":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_modutils":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_nodes":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_object_model":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_objects":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_protocols":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_python3":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_raw_building":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_regrtest":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_scoped_nodes":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_tools":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.unittest_transforms":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_utils":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittests":{
  "__set__":true,
  "elements":[
   "pymp-pypi",
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_arguments":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_calibration":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_detector":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_environment":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_fitting":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_model_function":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_pyxel_loader":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.updated_hessian_test_suite":{
  "__set__":true,
  "elements":[
   "acorns"
  ]
 },
 "tests.updated_hessian_test_suite_random":{
  "__set__":true,
  "elements":[
   "acorns"
  ]
 },
 "tests.updated_test_suite":{
  "__set__":true,
  "elements":[
   "acorns"
  ]
 },
 "tests.updated_test_suite_random":{
  "__set__":true,
  "elements":[
   "acorns"
  ]
 },
 "tests.urls":{
  "__set__":true,
  "elements":[
   "django-filebrowser",
   "django-hosts",
   "django-tinymce",
   "django-versatileimagefield"
  ]
 },
 "tests.urls.complex":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.urls.multiple":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.urls.root":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.urls.simple":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.usecases":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.usecases.test_creation":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.ut":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.backends":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.backends.test_memcached":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.backends.test_memory":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.backends.test_redis":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.conftest":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.test_base":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.test_decorators":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.test_exceptions":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.test_factory":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.test_lock":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.test_plugins":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.ut.test_serializers":{
  "__set__":true,
  "elements":[
   "aiocache"
  ]
 },
 "tests.util":{
  "__set__":true,
  "elements":[
   "deeptime",
   "herbie-data",
   "intake-elasticsearch",
   "intake-iris",
   "intake-spark",
   "intake-xarray",
   "openskill",
   "plum-dispatch",
   "pyathena",
   "pygeoapi",
   "pygml",
   "pymonetdb",
   "quacc",
   "recordwhat",
   "shared"
  ]
 },
 "tests.util.conftest":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.util.test_atoms":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.util.test_calc":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.util.test_data":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_decorators":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_ladder_pairs":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_pop_analysis":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.util.test_pytorch":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_quantity_statistics":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_rankings":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_score":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_slabs":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.util.test_sparse_utils":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_types":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_unwind":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_util_a":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_util_c":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_util_sum_q":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.utilities":{
  "__set__":true,
  "elements":[
   "chebfun",
   "pygrametl"
  ]
 },
 "tests.utils":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "aiida-castep",
   "aiida-core",
   "aiocache",
   "airflow",
   "alive-progress",
   "baycomp",
   "bionc",
   "biothings_client",
   "cachecontrol",
   "crystals",
   "deepchecks",
   "dpu-utils",
   "erdantic",
   "esmlab",
   "extract_model",
   "genestboost",
   "globus-compute-endpoint",
   "guidance",
   "intake-avro",
   "intake-parquet",
   "iohexperimenter",
   "ipygany",
   "jupyter-packaging",
   "jupyter_server",
   "jupytext",
   "kit4dl",
   "landlab",
   "lightwood",
   "maml",
   "mf2",
   "modelbase",
   "mpire",
   "mvt",
   "nr.types",
   "oddt",
   "parsevasp",
   "pdfme",
   "pdfstream",
   "plantcv",
   "plateau",
   "polyfempy",
   "pyannote.core",
   "pybtex",
   "pyessv",
   "pynsee",
   "pyomeca",
   "pyoos",
   "pystac",
   "pyswarms",
   "python-benedict",
   "quilt",
   "quilt3",
   "small-text",
   "starfile",
   "sumy",
   "superset",
   "torch-optimizer",
   "triad",
   "trio-asyncio",
   "trio_asyncio",
   "tyssue",
   "verta",
   "xcube_geodb",
   "xplique",
   "xyzspaces"
  ]
 },
 "tests.utils.archives":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.utils.compression":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.utils.configuration":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.utils.conftest":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.utils.convert_examples":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.data_generation":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.utils.datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.utils.dates":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.utils.decorators":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.decorators.conftest":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.decorators.test_decorators":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.dispatcher_examples":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.dispatcher_examples.examples":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.dispatcher_examples.invalid":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.functions":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.functions.conftest":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.functions.test_singleobj_bounds":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.functions.test_singleobj_dims":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.functions.test_singleobj_return":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.functions.test_singleobj_returndims":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.gradients_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.utils.metrics_test":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.utils.misc":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.utils.models_test":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.utils.object_factory":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.utils.plotters":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.plotters.conftest":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.plotters.test_plotters":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.processes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.utils.search":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.search.conftest":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.search.test_gridsearch":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.search.test_randomsearch":{
  "__set__":true,
  "elements":[
   "pyswarms"
  ]
 },
 "tests.utils.simple_models_test":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.utils.stac_io_mock":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.utils.test_assertion":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_cases":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.utils.test_cells":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.utils.test_chunkwriter":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.utils.test_class_extension":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_cli":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.utils.test_convert":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_converters":{
  "__set__":true,
  "elements":[
   "plateau"
  ]
 },
 "tests.utils.test_count_repeats":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_data_conversion":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.utils.test_data_split":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.utils.test_dct_ops":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.utils.test_decorators":{
  "__set__":true,
  "elements":[
   "landlab",
   "tyssue"
  ]
 },
 "tests.utils.test_dispatcher":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_distance_from_divide":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_flow__distance":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_funcdef":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.utils.test_function":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.utils.test_halo":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_hash":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_iter":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_iterators":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.utils.test_json":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_json2csv":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.utils.test_jupyter":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.utils.test_lammps":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.utils.test_matrix":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_neighbor_node_array":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_pandas":{
  "__set__":true,
  "elements":[
   "plateau"
  ]
 },
 "tests.utils.test_pandas_like":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_plotting":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.utils.test_preprocessing":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.utils.test_pyarrow":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_pyarrow_convert":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_pynsee_utils":{
  "__set__":true,
  "elements":[
   "pynsee"
  ]
 },
 "tests.utils.test_rename":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_return_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_richpath":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.utils.test_sample_images":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.utils.test_schema":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_signal_processing":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.utils.test_source_tracking_algorithm":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_stable_priority_queue":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_stats":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.utils.test_store":{
  "__set__":true,
  "elements":[
   "plateau"
  ]
 },
 "tests.utils.test_string":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_string_utils":{
  "__set__":true,
  "elements":[
   "deepchecks"
  ]
 },
 "tests.utils.test_structured_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_tabulate_bayes_classes":{
  "__set__":true,
  "elements":[
   "plantcv"
  ]
 },
 "tests.utils.test_tempfile":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.utils.test_threading":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_time":{
  "__set__":true,
  "elements":[
   "esmlab"
  ]
 },
 "tests.utils.test_timing":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.utils.test_type_util":{
  "__set__":true,
  "elements":[
   "python-benedict"
  ]
 },
 "tests.utils.test_utils":{
  "__set__":true,
  "elements":[
   "tyssue",
   "xyzspaces"
  ]
 },
 "tests.utils.test_value_profile":{
  "__set__":true,
  "elements":[
   "maml"
  ]
 },
 "tests.utils.test_warppers":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.utils.test_watershed":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.testing":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.utils.timing":{
  "__set__":true,
  "elements":[
   "lightwood"
  ]
 },
 "tests.utils.validator":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.utils_assert":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.utils_factory":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.utils_model":{
  "__set__":true,
  "elements":[
   "pyessv"
  ]
 },
 "tests.utils_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.utils_tests":{
  "__set__":true,
  "elements":[
   "labelme",
   "superset"
  ]
 },
 "tests.utils_tests.test_draw":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.utils_tests.test_image":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.utils_tests.test_shape":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.utils_tests.util":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.validation":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.validation.test_schema_uri_map":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.validation.test_validate":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.values":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.values.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.values.test_synthetic":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.variant":{
  "__set__":true,
  "elements":[
   "biothings_client"
  ]
 },
 "tests.variational":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_approximations":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_callbacks":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_inference":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_minibatch_rv":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_opvi":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_updates":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.vector_stores":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_cassandra":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_cogsearch":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_docarray":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_elasticsearch":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_epsilla":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_lancedb":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_milvus":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_mongodb":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_postgres":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_qdrant":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_rockset":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_simple":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_tair":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_timescalevector":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.vector_stores.test_weaviate":{
  "__set__":true,
  "elements":[
   "llama-index"
  ]
 },
 "tests.versioning":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.environment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.environment.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.environment.test_docker":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.environment.test_environment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.environment.test_python":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.test_code":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.test_configuration":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.test_dataset":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.view_scaffold":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.views":{
  "__set__":true,
  "elements":[
   "django-hosts"
  ]
 },
 "tests.visualization":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.visualization.test_main":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.visualization.test_tools":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.visualization_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.matplotlib_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.matplotlib_tests.test_edf":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.matplotlib_tests.test_intermediate_plot":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.matplotlib_tests.test_optimization_history":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.matplotlib_tests.test_parallel_coordinate":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_contour":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_edf":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_intermediate_plot":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_optimization_history":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_parallel_coordinate":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_param_importances":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_slice":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_utils":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.viz":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.viz.test_jupyter_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.viz.test_plot_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.viz_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.waiters":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.waiters.conftest":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.waiters.test_waiters":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.way_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.weak_learners":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.weak_learners.simple_pls_data":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.weak_learners.simple_pls_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.widgets_tests":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.widgets_tests.test_label_dialog":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.windows_tests":{
  "__set__":true,
  "elements":[
   "pymonetdb"
  ]
 },
 "tests.wordclasses":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.wordclasses.bigramoptimizer_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.wrappers":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "pdpipe",
   "xplique"
  ]
 },
 "tests.wrappers.test_expectation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.wrappers.test_fitonly":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.wrappers.test_pytorch_wrapper":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.wrappers.test_query_efficient_bb":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.wrappers.test_wrapper":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.www":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.www.api":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.www.api.experimental":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.www.api.experimental.test_endpoints":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.www.api.experimental.test_kerberos_endpoints":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.x-custom_tests":{
  "__set__":true,
  "elements":[
   "sheet2dict"
  ]
 },
 "tests.x_square_test":{
  "__set__":true,
  "elements":[
   "ffx"
  ]
 },
 "tests.xr":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.xr.test_triangular_mesh_netcdf":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.zipf":{
  "__set__":true,
  "elements":[
   "sketchnu"
  ]
 },
 "tests_integration":{
  "__set__":true,
  "elements":[
   "crossref_commons_py"
  ]
 },
 "tests_integration.tests_http_utils":{
  "__set__":true,
  "elements":[
   "crossref_commons_py"
  ]
 },
 "tests_integration.tests_iteration":{
  "__set__":true,
  "elements":[
   "crossref_commons_py"
  ]
 },
 "tests_integration.tests_relations":{
  "__set__":true,
  "elements":[
   "crossref_commons_py"
  ]
 },
 "tests_integration.tests_retrieval":{
  "__set__":true,
  "elements":[
   "crossref_commons_py"
  ]
 },
 "tests_integration.tests_sampling":{
  "__set__":true,
  "elements":[
   "crossref_commons_py"
  ]
 },
 "tests_negative":{
  "__set__":true,
  "elements":[
   "webdriver-manager"
  ]
 },
 "tests_negative.test_browsers_not_installed":{
  "__set__":true,
  "elements":[
   "webdriver-manager"
  ]
 },
 "tests_sql":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.conftest":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.context":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.test_sql_compiler":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.test_sql_executor":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.test_sql_export":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.test_sql_interestingness":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_xdist":{
  "__set__":true,
  "elements":[
   "webdriver-manager"
  ]
 },
 "tests_xdist.conftest":{
  "__set__":true,
  "elements":[
   "webdriver-manager"
  ]
 },
 "tests_xdist.test_cuncurent_1":{
  "__set__":true,
  "elements":[
   "webdriver-manager"
  ]
 },
 "tests_xdist.test_cuncurent_2":{
  "__set__":true,
  "elements":[
   "webdriver-manager"
  ]
 },
 "testslide":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.cli":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.dsl":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.import_profiler":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.lib":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.matchers":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.mock_callable":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.mock_constructor":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.patch":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.patch_attribute":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.runner":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.strict_mock":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 }
}