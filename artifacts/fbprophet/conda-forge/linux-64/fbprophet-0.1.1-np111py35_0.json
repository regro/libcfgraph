{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge/linux-64",
   "https://conda.anaconda.org/conda-forge/noarch",
   "https://repo.continuum.io/pkgs/free/linux-64",
   "https://repo.continuum.io/pkgs/free/noarch",
   "https://repo.continuum.io/pkgs/pro/linux-64",
   "https://repo.continuum.io/pkgs/pro/noarch"
  ],
  "conda_build_version": "2.1.10",
  "conda_env_version": "4.2.13",
  "conda_private": false,
  "conda_version": "4.2.13",
  "description": "Implements a procedure for forecasting time series data based on an\nadditive model where non-linear trends are fit with yearly and weekly\nseasonality, plus holidays. It works best with daily periodicity data with\nat least one year of historical data. Prophet is robust to missing data,\nshifts in the trend, and large outliers.\n",
  "dev_url": "https://github.com/facebookincubator/prophet",
  "doc_url": "https://facebookincubator.github.io/prophet/docs/quick_start.html",
  "env_vars": {
   "CIO_TEST": "<not set>",
   "CONDA_DEFAULT_ENV": "root",
   "CONDA_ENVS_PATH": "<not set>",
   "LD_LIBRARY_PATH": "/opt/rh/devtoolset-2/root/usr/lib64:/opt/rh/devtoolset-2/root/usr/lib",
   "PATH": "/opt/conda/bin:/opt/rh/devtoolset-2/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/bin",
   "PYTHONHOME": "<not set>",
   "PYTHONPATH": "/opt/rh/devtoolset-2/root/usr/lib64/python2.6/site-packages:/opt/rh/devtoolset-2/root/usr/lib/python2.6/site-packages"
  },
  "home": "https://facebookincubator.github.io/prophet/",
  "license": "BSD 3-Clause",
  "license_family": "BSD",
  "offline": false,
  "root_pkgs": [
   "conda-forge::anaconda-client-1.5.1-py35_0",
   "conda-forge::beautifulsoup4-4.5.3-py35_0",
   "conda-forge::ca-certificates-2017.1.23-0",
   "conda-forge::certifi-2017.1.23-py35_0",
   "conda-forge::chardet-3.0.2-py35_0",
   "conda-forge::clyent-1.2.1-py35_0",
   "conda-forge::conda-4.2.13-py35_0",
   "conda-forge::conda-build-2.1.10-py35_0",
   "conda-forge::conda-env-2.6.0-0",
   "conda-forge::conda-forge-build-setup-4.4.4-0",
   "conda-forge::conda-verify-2.0.0-py35_0",
   "conda-forge::curl-7.52.1-0",
   "conda-forge::expat-2.1.0-2",
   "conda-forge::filelock-2.0.6-py35_0",
   "conda-forge::git-2.12.2-4",
   "conda-forge::jinja2-2.9.5-py35_0",
   "conda-forge::libiconv-1.14-4",
   "conda-forge::markupsafe-0.23-py35_1",
   "conda-forge::ncurses-5.9-10",
   "conda-forge::obvious-ci-0.6.1-py35_2",
   "conda-forge::openssl-1.0.2k-0",
   "conda-forge::patchelf-0.9-1",
   "conda-forge::pip-9.0.1-py35_0",
   "conda-forge::pkginfo-1.2.1-py35_0",
   "conda-forge::pycosat-0.6.1-py35_0",
   "conda-forge::pycrypto-2.6.1-py35_0",
   "conda-forge::python-3.5.3-1",
   "conda-forge::python-dateutil-2.6.0-py35_0",
   "conda-forge::pytz-2017.2-py35_0",
   "conda-forge::pyyaml-3.12-py35_1",
   "conda-forge::readline-6.2-0",
   "conda-forge::requests-2.13.0-py35_0",
   "conda-forge::ruamel_yaml-0.11.14-py35_0",
   "conda-forge::setuptools-33.1.1-py35_0",
   "conda-forge::six-1.10.0-py35_1",
   "conda-forge::sqlite-3.13.0-1",
   "conda-forge::tk-8.5.19-1",
   "conda-forge::wheel-0.29.0-py35_0",
   "conda-forge::xz-5.2.2-0",
   "conda-forge::yaml-0.1.6-0",
   "conda-forge::zlib-1.2.11-0"
  ],
  "summary": "Automatic Forecasting Procedure"
 },
 "conda_build_config": {},
 "files": [
  "lib/python3.5/site-packages/fbprophet/models.py",
  "lib/python3.5/site-packages/fbprophet/stan_models/logistic_growth.pkl",
  "lib/python3.5/site-packages/fbprophet/forecaster.py",
  "lib/python3.5/site-packages/fbprophet-0.1.1-py3.5.egg-info/not-zip-safe",
  "lib/python3.5/site-packages/fbprophet/__init__.py",
  "lib/python3.5/site-packages/fbprophet/tests/__init__.py",
  "lib/python3.5/site-packages/fbprophet-0.1.1-py3.5.egg-info/PKG-INFO",
  "lib/python3.5/site-packages/fbprophet/stan_models/linear_growth.pkl",
  "lib/python3.5/site-packages/fbprophet/tests/test_prophet.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "np111py35_0",
  "build_number": 0,
  "depends": [
   "cython >=0.22",
   "matplotlib",
   "numpy 1.11*",
   "pandas >=0.18.1",
   "pystan >=2.14",
   "python 3.5*",
   "setuptools"
  ],
  "license": "BSD 3-Clause",
  "license_family": "BSD",
  "name": "fbprophet",
  "platform": "linux",
  "subdir": "linux-64",
  "version": "0.1.1"
 },
 "metadata_version": 1,
 "name": "fbprophet",
 "raw_recipe": "{%set name = \"fbprophet\" %}\n{%set version = \"0.1.1\" %}\n{%set compress_type = \"tar.gz\" %}\n{%set hash_type = \"sha256\" %}\n{%set hash_val = \"5be931cf0f2c73eb221b269241bb15be0860497511026fd34a7e4da76395f20e\" %}\n{%set build_num = \"0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.{{ compress_type }}\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ compress_type }}\n  {{ hash_type }}: {{ hash_val }}\n\nbuild:\n  skip: True  # [win and py27]\n  number: {{ build_num }}\n  script: python setup.py install --single-version-externally-managed --record=record.txt\n  features:\n    - vc14  # [win and py35]\n    - vc14  # [win and py36]\n  binary_has_prefix_files:\n    - Lib/site-packages/fbprophet/stan_models/linear_growth.pkl            # [win]\n    - Lib/site-packages/fbprophet/stan_models/logistic_growth.pkl          # [win]\n    - lib/python*/site-packages/fbprophet/stan_models/linear_growth.pkl    # [unix]\n    - lib/python*/site-packages/fbprophet/stan_models/logistic_growth.pkl  # [unix]\n\nrequirements:\n  build:\n    - toolchain  # [unix]\n    - python\n    - setuptools\n    - cython >=0.22\n    - pystan >=2.14\n    # Pystan models depend on numpy and as they are compiled and pickled we\n    # need to pin numpy version.\n    - numpy x.x\n\n  run:\n    - python\n    # setuptools is required for pkg_resources\n    - setuptools\n    - cython >=0.22\n    - pystan >=2.14\n    - numpy x.x\n    - pandas >=0.18.1\n    - matplotlib\n\ntest:\n  requires:\n    - pytest\n\n  commands:\n    - py.test -v --pyargs fbprophet\n\nabout:\n  home: https://facebookincubator.github.io/prophet/\n  license: BSD 3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Automatic Forecasting Procedure'\n  description: |\n    Implements a procedure for forecasting time series data based on an\n    additive model where non-linear trends are fit with yearly and weekly\n    seasonality, plus holidays. It works best with daily periodicity data with\n    at least one year of historical data. Prophet is robust to missing data,\n    shifts in the trend, and large outliers.\n  doc_url: https://facebookincubator.github.io/prophet/docs/quick_start.html\n  dev_url: https://github.com/facebookincubator/prophet\n\nextra:\n  recipe-maintainers:\n    - pmlandwehr\n    - rolando\n",
 "rendered_recipe": {
  "about": {
   "description": "Implements a procedure for forecasting time series data based on an\nadditive model where non-linear trends are fit with yearly and weekly\nseasonality, plus holidays. It works best with daily periodicity data with\nat least one year of historical data. Prophet is robust to missing data,\nshifts in the trend, and large outliers.\n",
   "dev_url": "https://github.com/facebookincubator/prophet",
   "doc_url": "https://facebookincubator.github.io/prophet/docs/quick_start.html",
   "home": "https://facebookincubator.github.io/prophet/",
   "license": "BSD 3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Automatic Forecasting Procedure"
  },
  "build": {
   "binary_has_prefix_files": [
    "lib/python*/site-packages/fbprophet/stan_models/linear_growth.pkl",
    "lib/python*/site-packages/fbprophet/stan_models/logistic_growth.pkl"
   ],
   "features": "",
   "noarch": "",
   "noarch_python": false,
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record=record.txt",
   "string": "np111py35_0"
  },
  "extra": {
   "final": true,
   "recipe-maintainers": [
    "pmlandwehr",
    "rolando"
   ]
  },
  "package": {
   "name": "fbprophet",
   "version": "0.1.1"
  },
  "requirements": {
   "build": [
    "cython 0.25.2 py35_1",
    "matplotlib 2.0.0 np111py35_3",
    "tk 8.5.19 1",
    "python 3.5.3 1",
    "python-dateutil 2.6.0 py35_0",
    "xorg-libxau 1.0.8 3",
    "ca-certificates 2017.1.23 0",
    "gettext 0.19.7 1",
    "pcre 8.39 0",
    "sqlite 3.13.0 1",
    "toolchain 2.0.0 0",
    "freetype 2.7 1",
    "pyqt 5.6.0 py35_1",
    "ncurses 5.9 10",
    "gst-plugins-base 1.8.0 0",
    "cycler 0.10.0 py35_0",
    "icu 58.1 1",
    "openblas 0.2.19 2",
    "libffi 3.2.1 3",
    "zlib 1.2.11 0",
    "sip 4.18 py35_1",
    "xorg-libxdmcp 1.1.2 3",
    "readline 6.2 0",
    "qt 5.6.2 1",
    "glib 2.51.4 0",
    "fontconfig 2.12.1 4",
    "expat 2.1.0 2",
    "libgfortran 3.0.0 1",
    "libxcb 1.12 1",
    "xz 5.2.2 0",
    "tornado 4.4.3 py35_0",
    "dbus 1.10.10 3",
    "numpy 1.11.3 py35_blas_openblas_200",
    "pystan 2.14.0.0 py35_0",
    "libpng 1.6.28 0",
    "blas 1.1 openblas",
    "openssl 1.0.2k 0",
    "libxml2 2.9.4 4",
    "gstreamer 1.8.0 1",
    "certifi 2017.1.23 py35_0",
    "pytz 2017.2 py35_0",
    "jpeg 9b 0",
    "libiconv 1.14 4",
    "pyparsing 2.2.0 py35_0",
    "setuptools 33.1.1 py35_0",
    "six 1.10.0 py35_1"
   ],
   "run": [
    "python",
    "setuptools",
    "cython >=0.22",
    "pystan >=2.14",
    "numpy x.x",
    "pandas >=0.18.1",
    "matplotlib"
   ]
  },
  "source": {
   "fn": "fbprophet-0.1.1.tar.gz",
   "sha256": "5be931cf0f2c73eb221b269241bb15be0860497511026fd34a7e4da76395f20e",
   "url": "https://pypi.io/packages/source/f/fbprophet/fbprophet-0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "py.test -v --pyargs fbprophet"
   ],
   "requires": [
    "pytest"
   ]
  }
 },
 "version": "0.1.1"
}