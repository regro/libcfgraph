{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge/win-64",
   "https://conda.anaconda.org/conda-forge/noarch",
   "https://repo.continuum.io/pkgs/free/win-64",
   "https://repo.continuum.io/pkgs/free/noarch",
   "https://repo.continuum.io/pkgs/pro/win-64",
   "https://repo.continuum.io/pkgs/pro/noarch",
   "https://repo.continuum.io/pkgs/msys2/win-64",
   "https://repo.continuum.io/pkgs/msys2/noarch"
  ],
  "conda_build_version": "2.1.10",
  "conda_env_version": "4.2.13",
  "conda_private": false,
  "conda_version": "4.2.13",
  "description": "This library implements the SPAKE2 password-authenticated key exchange (\"PAKE\") algorithm. This allows two parties, who share a weak password, to safely derive a strong shared secret (and therefore build an encrypted+authenticated channel). A passive attacker who eavesdrops on the connection learns no information about the password or the generated secret. An active attacker (man-in-the-middle) gets exactly one guess at the password, and unless they get it right, they learn no information about the password or the generated secret. Each execution of the protocol enables one guess. The use of a weak password is made safer by the rate-limiting of guesses: no off-line dictionary attack is available to the network-level attacker, and the protocol does not depend upon having previously-established confidentiality of the network (unlike e.g. sending a plaintext password over TLS). The protocol requires the exchange of one pair of messages, so only one round trip is necessary to establish the session key. If key-confirmation is necessary, that will require a second round trip. All messages are bytestrings. For the default security level (using the Ed25519 elliptic curve, roughly equivalent to an 128-bit symmetric key), the message is 33 bytes long.\n",
  "dev_url": "https://github.com/warner/python-spake2",
  "doc_url": "https://github.com/warner/python-spake2",
  "env_vars": {
   "CIO_TEST": "<not set>",
   "CONDA_DEFAULT_ENV": "root",
   "CONDA_ENVS_PATH": "<not set>",
   "PATH": "C:\\Miniconda-x64\\Library\\bin;C:\\Miniconda-x64\\Library\\bin;C:\\Miniconda-x64\\Library\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 9.0\\VC\\Bin\\amd64;C:\\Program Files (x86)\\Microsoft Visual Studio 9.0\\VC\\vcpackages;C:\\Program Files (x86)\\Microsoft Visual Studio 9.0\\Common7\\IDE;C:\\Program Files\\Microsoft SDKs\\Windows\\v7.0\\Bin\\x64;C:\\Program Files\\Microsoft SDKs\\Windows\\v7.0\\Bin;C:\\windows\\Microsoft.NET\\Framework64\\v3.5;C:\\windows\\Microsoft.NET\\Framework\\v3.5;C:\\windows\\Microsoft.NET\\Framework64\\v2.0.50727;C:\\windows\\Microsoft.NET\\Framework\\v2.0.50727;C:\\Program Files\\Microsoft SDKs\\Windows\\v7.0\\Setup;C:\\Miniconda-x64;C:\\Miniconda-x64\\Library\\mingw-w64\\bin;C:\\Miniconda-x64\\Library\\usr\\bin;C:\\Miniconda-x64\\Library\\bin;C:\\Miniconda-x64\\Scripts;C:\\Perl\\site\\bin;C:\\Perl\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\7-Zip;C:\\Program Files\\Microsoft\\Web Platform Installer\\;C:\\Tools\\GitVersion;C:\\Tools\\PsTools;C:\\Program Files\\Git LFS;C:\\Program Files (x86)\\Subversion\\bin;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\110\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\120\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\Tools\\Binn\\ManagementStudio\\;C:\\Tools\\WebDriver;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.4\\;C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\IDE\\PrivateAssemblies\\;C:\\Program Files (x86)\\Microsoft SDKs\\Azure\\CLI\\wbin;C:\\Ruby193\\bin;C:\\Tools\\NUnit\\bin;C:\\Tools\\xUnit;C:\\Tools\\MSpec;C:\\Tools\\Coverity\\bin;C:\\Program Files (x86)\\CMake\\bin;C:\\go\\bin;C:\\Program Files\\Java\\jdk1.8.0\\bin;C:\\Python27;C:\\Program Files\\nodejs;C:\\Program Files (x86)\\iojs;C:\\Program Files\\iojs;C:\\Users\\appveyor\\AppData\\Roaming\\npm;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\Extensions\\Microsoft\\SQLDB\\DAC\\120;C:\\Tools\\NuGet;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow;C:\\Program Files\\Microsoft DNX\\Dnvm;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\DTS\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\110\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\DTS\\Binn\\;C:\\Program Files (x86)\\Apache\\Maven\\bin;C:\\Python27\\Scripts;C:\\Tools\\NUnit3;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Mercurial\\;C:\\Program Files (x86)\\Yarn\\bin;C:\\Program Files\\LLVM\\bin;C:\\Program Files\\dotnet\\;C:\\Program Files\\erl8.3\\bin;C:\\Tools\\curl\\bin;C:\\Program Files\\Microsoft Service Fabric\\bin\\Fabric\\Fabric.Code;C:\\Program Files\\Microsoft SDKs\\Service Fabric\\Tools\\ServiceFabricLocalClusterManager;C:\\Program Files (x86)\\nodejs\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Git\\usr\\bin;C:\\Program Files\\Amazon\\AWSCLI\\;C:\\Users\\appveyor\\AppData\\Local\\Yarn\\.bin;C:\\Users\\appveyor\\AppData\\Roaming\\npm;C:\\Program Files\\AppVeyor\\BuildAgent\\",
   "PYTHONHOME": "<not set>",
   "PYTHONPATH": "<not set>"
  },
  "home": "https://github.com/warner/python-spake2",
  "license": "MIT",
  "license_family": "MIT",
  "offline": false,
  "root_pkgs": [
   "conda-forge::anaconda-client-1.5.1-py27_0",
   "conda-forge::beautifulsoup4-4.5.3-py27_0",
   "cffi-1.9.1-py27_0",
   "conda-forge::chardet-3.0.2-py27_1",
   "conda-forge::clyent-1.2.1-py27_0",
   "conda-forge::conda-4.2.13-py27_0",
   "conda-forge::conda-build-2.1.10-py27_0",
   "conda-forge::conda-env-2.6.0-0",
   "conda-forge::conda-forge-build-setup-4.4.4-0",
   "conda-forge::conda-verify-2.0.0-py27_0",
   "console_shortcut-0.1.1-py27_1",
   "conda-forge::contextlib2-0.5.4-py27_0",
   "cryptography-1.7.1-py27_0",
   "enum34-1.1.6-py27_0",
   "conda-forge::filelock-2.0.6-py27_0",
   "conda-forge::futures-3.0.5-py27_0",
   "idna-2.2-py27_0",
   "ipaddress-1.0.18-py27_0",
   "conda-forge::jinja2-2.9.5-py27_0",
   "conda-forge::markupsafe-0.23-py27_1",
   "menuinst-1.4.4-py27_0",
   "conda-forge::obvious-ci-0.6.1-py27_2",
   "openssl-1.0.2k-vc9_0",
   "pip-9.0.1-py27_1",
   "conda-forge::pkginfo-1.2.1-py27_0",
   "pyasn1-0.1.9-py27_0",
   "pycosat-0.6.1-py27_1",
   "pycparser-2.17-py27_0",
   "conda-forge::pycrypto-2.6.1-py27_0",
   "pyopenssl-16.2.0-py27_0",
   "python-2.7.13-0",
   "conda-forge::python-dateutil-2.6.0-py27_0",
   "conda-forge::pytz-2017.2-py27_0",
   "pywin32-220-py27_2",
   "conda-forge::pyyaml-3.12-py27_1",
   "requests-2.12.4-py27_0",
   "ruamel_yaml-0.11.14-py27_1",
   "setuptools-27.2.0-py27_1",
   "six-1.10.0-py27_0",
   "conda-forge::vs2008_express_vc_python_patch-1.0.0-0",
   "vs2008_runtime-9.00.30729.5054-0",
   "wheel-0.29.0-py27_0",
   "conda-forge::yaml-0.1.6-vc9_0"
  ],
  "summary": "This library implements the SPAKE2 password-authenticated key exchange (\"PAKE\") algorithm. "
 },
 "conda_build_config": {},
 "files": [
  "Lib/site-packages/spake2/test/test_compat.py",
  "Lib/site-packages/spake2/__init__.py",
  "Lib/site-packages/spake2/test/test_utils.py",
  "Lib/site-packages/spake2/ed25519_basic.py",
  "Lib/site-packages/spake2/groups.py",
  "Lib/site-packages/spake2/spake2.py",
  "Lib/site-packages/spake2-0.7-py2.7.egg-info/PKG-INFO",
  "Lib/site-packages/spake2/test/test_spake2.py",
  "Lib/site-packages/spake2/six.py",
  "Lib/site-packages/spake2/test/common.py",
  "Lib/site-packages/spake2/util.py",
  "Lib/site-packages/spake2/test/myhkdf.py",
  "Lib/site-packages/spake2/ed25519_group.py",
  "Lib/site-packages/spake2/test/__init__.py",
  "Lib/site-packages/spake2/_version.py",
  "Lib/site-packages/spake2/params.py",
  "Lib/site-packages/spake2/test/test_group.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "1",
  "build_number": 1,
  "depends": [
   "hkdf"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "spake2",
  "platform": "win",
  "subdir": "win-64",
  "version": "0.7"
 },
 "metadata_version": 1,
 "name": "spake2",
 "raw_recipe": "{% set url_name = \"python-spake2\" %}\n{% set name = \"spake2\" %}\n{% set version = \"0.7\" %}\n{% set sha256 = \"1eea1c4627233d0a7a5299019a5d7bdc0aeabc0f765dd843ecbef20a71262536\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ url_name }}-{{ version }}.tar.gz\n  url: https://github.com/warner/{{ url_name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  script: python setup.py install --single-version-externally-managed --record record.txt\n\nrequirements:\n  build:\n    - python\n    - hkdf\n    - setuptools\n  run:\n    - hkdf\n\ntest:\n  source_files:\n    - src/spake2/\n  requires:\n    - pytest\n  commands:\n    - py.test\n\nabout:\n  home: https://github.com/warner/python-spake2\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'This library implements the SPAKE2 password-authenticated key exchange (\"PAKE\") algorithm. '\n\n  description: |\n    This library implements the SPAKE2 password-authenticated key exchange (\"PAKE\") algorithm. This allows two parties, who share a weak password, to safely derive a strong shared secret (and therefore build an encrypted+authenticated channel). A passive attacker who eavesdrops on the connection learns no information about the password or the generated secret. An active attacker (man-in-the-middle) gets exactly one guess at the password, and unless they get it right, they learn no information about the password or the generated secret. Each execution of the protocol enables one guess. The use of a weak password is made safer by the rate-limiting of guesses: no off-line dictionary attack is available to the network-level attacker, and the protocol does not depend upon having previously-established confidentiality of the network (unlike e.g. sending a plaintext password over TLS). The protocol requires the exchange of one pair of messages, so only one round trip is necessary to establish the session key. If key-confirmation is necessary, that will require a second round trip. All messages are bytestrings. For the default security level (using the Ed25519 elliptic curve, roughly equivalent to an 128-bit symmetric key), the message is 33 bytes long.\n  doc_url: https://github.com/warner/python-spake2\n  dev_url: https://github.com/warner/python-spake2\n\nextra:\n  recipe-maintainers:\n    - CJ-Wright\n",
 "rendered_recipe": {
  "about": {
   "description": "This library implements the SPAKE2 password-authenticated key exchange (\"PAKE\") algorithm. This allows two parties, who share a weak password, to safely derive a strong shared secret (and therefore build an encrypted+authenticated channel). A passive attacker who eavesdrops on the connection learns no information about the password or the generated secret. An active attacker (man-in-the-middle) gets exactly one guess at the password, and unless they get it right, they learn no information about the password or the generated secret. Each execution of the protocol enables one guess. The use of a weak password is made safer by the rate-limiting of guesses: no off-line dictionary attack is available to the network-level attacker, and the protocol does not depend upon having previously-established confidentiality of the network (unlike e.g. sending a plaintext password over TLS). The protocol requires the exchange of one pair of messages, so only one round trip is necessary to establish the session key. If key-confirmation is necessary, that will require a second round trip. All messages are bytestrings. For the default security level (using the Ed25519 elliptic curve, roughly equivalent to an 128-bit symmetric key), the message is 33 bytes long.\n",
   "dev_url": "https://github.com/warner/python-spake2",
   "doc_url": "https://github.com/warner/python-spake2",
   "home": "https://github.com/warner/python-spake2",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "This library implements the SPAKE2 password-authenticated key exchange (\"PAKE\") algorithm. "
  },
  "build": {
   "noarch": "",
   "noarch_python": false,
   "number": "1",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "1"
  },
  "extra": {
   "final": true,
   "recipe-maintainers": [
    "CJ-Wright"
   ]
  },
  "package": {
   "name": "spake2",
   "version": "0.7"
  },
  "requirements": {
   "build": [
    "setuptools 33.1.1 py27_0",
    "python 2.7.12 2",
    "certifi 2017.4.17 py27_0",
    "hkdf 0.0.3 py27_0",
    "wincertstore 0.2 py27_0",
    "vs2008_runtime 9.00.30729.5054 0"
   ],
   "run": [
    "hkdf"
   ]
  },
  "source": {
   "fn": "python-spake2-0.7.tar.gz",
   "sha256": "1eea1c4627233d0a7a5299019a5d7bdc0aeabc0f765dd843ecbef20a71262536",
   "url": "https://github.com/warner/python-spake2/archive/v0.7.tar.gz"
  },
  "test": {
   "commands": [
    "py.test"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "src/spake2/"
   ]
  }
 },
 "version": "0.7"
}