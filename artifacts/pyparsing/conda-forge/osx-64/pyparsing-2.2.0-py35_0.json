{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge/osx-64",
   "https://conda.anaconda.org/conda-forge/noarch",
   "https://repo.continuum.io/pkgs/free/osx-64",
   "https://repo.continuum.io/pkgs/free/noarch",
   "https://repo.continuum.io/pkgs/pro/osx-64",
   "https://repo.continuum.io/pkgs/pro/noarch"
  ],
  "conda_build_version": "2.1.4",
  "conda_env_version": "4.2.13",
  "conda_private": false,
  "conda_version": "4.2.13",
  "description": "The pyparsing module is an alternative approach to creating and executing\nsimple grammars, vs. the traditional lex/yacc approach, or the use of\nregular expressions. The pyparsing module provides a library of classes\nthat client code uses to construct the grammar directly in Python code.\n",
  "dev_url": "https://svn.code.sf.net/p/pyparsing/code/",
  "doc_url": "http://pyparsing.wikispaces.com/Documentation",
  "env_vars": {
   "CIO_TEST": "<not set>",
   "CONDA_DEFAULT_ENV": "root",
   "CONDA_ENVS_PATH": "<not set>",
   "DYLD_LIBRARY_PATH": "<not set>",
   "PATH": "/Users/travis/miniconda3/bin:/Users/travis/.rvm/gems/ruby-2.0.0-p643/bin:/Users/travis/.rvm/gems/ruby-2.0.0-p643@global/bin:/Users/travis/.rvm/rubies/ruby-2.0.0-p643/bin:/Users/travis/.rvm/bin:/Users/travis/bin:/Users/travis/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin",
   "PYTHONHOME": "<not set>",
   "PYTHONPATH": "<not set>"
  },
  "home": "http://pyparsing.wikispaces.com/",
  "license": "MIT",
  "offline": false,
  "root_pkgs": [
   "anaconda-client-1.6.2-py36_0",
   "conda-forge::beautifulsoup4-4.5.3-py36_0",
   "cffi-1.9.1-py36_0",
   "conda-forge::chardet-2.3.0-py36_0",
   "conda-forge::clyent-1.2.1-py36_0",
   "conda-forge::conda-4.2.13-py36_0",
   "conda-forge::conda-build-2.1.4-py36_1",
   "conda-forge::conda-env-2.6.0-0",
   "conda-forge::conda-forge-build-setup-4.4.1-0",
   "conda-forge::conda-verify-2.0.0-py36_0",
   "cryptography-1.7.1-py36_0",
   "conda-forge::filelock-2.0.6-py36_0",
   "idna-2.2-py36_0",
   "conda-forge::jinja2-2.9.5-py36_0",
   "conda-forge::markupsafe-0.23-py36_1",
   "openssl-1.0.2k-0",
   "pip-9.0.1-py36_1",
   "conda-forge::pkginfo-1.2.1-py36_0",
   "pyasn1-0.1.9-py36_0",
   "pycosat-0.6.1-py36_1",
   "pycparser-2.17-py36_0",
   "pycrypto-2.6.1-py36_4",
   "pyopenssl-16.2.0-py36_0",
   "python-3.6.0-0",
   "conda-forge::python-dateutil-2.6.0-py36_0",
   "conda-forge::pytz-2016.10-py36_0",
   "conda-forge::pyyaml-3.12-py36_0",
   "readline-6.2-2",
   "requests-2.12.4-py36_0",
   "ruamel_yaml-0.11.14-py36_1",
   "setuptools-27.2.0-py36_0",
   "six-1.10.0-py36_0",
   "sqlite-3.13.0-0",
   "tk-8.5.18-0",
   "wheel-0.29.0-py36_0",
   "xz-5.2.2-1",
   "yaml-0.1.6-0",
   "zlib-1.2.8-3"
  ],
  "summary": "Create and execute simple grammars"
 },
 "conda_build_config": {},
 "files": [
  "lib/python3.5/site-packages/pyparsing.py",
  "lib/python3.5/site-packages/pyparsing-2.2.0-py3.5.egg-info/PKG-INFO"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py35_0",
  "build_number": 0,
  "depends": [
   "python 3.5*"
  ],
  "license": "MIT",
  "name": "pyparsing",
  "platform": "osx",
  "subdir": "osx-64",
  "version": "2.2.0"
 },
 "metadata_version": 1,
 "name": "pyparsing",
 "raw_recipe": "{% set version=\"2.2.0\" %}\n\npackage:\n  name: pyparsing\n  version: {{ version }}\n\nsource:\n  fn: pyparsing-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/p/pyparsing/pyparsing-{{ version }}.tar.gz\n  sha256: 0832bcf47acd283788593e7a0f542407bd9550a55a8a8435214a1960e04bcb04\n\nbuild:\n  number: 0\n  script: python setup.py install --single-version-externally-managed --record=record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n  run:\n    - python\n\ntest:\n  imports:\n    - pyparsing\n\nabout:\n  home: http://pyparsing.wikispaces.com/\n  license: MIT\n  license_file: LICENSE\n  summary: Create and execute simple grammars\n  description: |\n    The pyparsing module is an alternative approach to creating and executing\n    simple grammars, vs. the traditional lex/yacc approach, or the use of\n    regular expressions. The pyparsing module provides a library of classes\n    that client code uses to construct the grammar directly in Python code.\n  doc_url: http://pyparsing.wikispaces.com/Documentation\n  dev_url: https://svn.code.sf.net/p/pyparsing/code/\n\nextra:\n  recipe-maintainers:\n    - msarahan\n    - ocefpaf\n",
 "rendered_recipe": {
  "about": {
   "description": "The pyparsing module is an alternative approach to creating and executing\nsimple grammars, vs. the traditional lex/yacc approach, or the use of\nregular expressions. The pyparsing module provides a library of classes\nthat client code uses to construct the grammar directly in Python code.\n",
   "dev_url": "https://svn.code.sf.net/p/pyparsing/code/",
   "doc_url": "http://pyparsing.wikispaces.com/Documentation",
   "home": "http://pyparsing.wikispaces.com/",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Create and execute simple grammars"
  },
  "build": {
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record=record.txt",
   "string": "py35_0"
  },
  "extra": {
   "recipe-maintainers": [
    "msarahan",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "pyparsing",
   "version": "2.2.0"
  },
  "requirements": {
   "build": [],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "pyparsing-2.2.0.tar.gz",
   "sha256": "0832bcf47acd283788593e7a0f542407bd9550a55a8a8435214a1960e04bcb04",
   "url": "https://pypi.io/packages/source/p/pyparsing/pyparsing-2.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyparsing"
   ]
  }
 },
 "version": "2.2.0"
}