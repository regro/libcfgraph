{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.25.0",
  "conda_version": "23.3.1",
  "description": "This is a C-level implementation of a fast, re-entrant,\noptimistic lock for CPython. It is a drop-in replacement for\nthreading.RLock. FastRLock is implemented in Cython and also provides a\nC-API for direct use from Cython code via from fastrlock cimport rlock.\n\nUnder normal conditions, it is about 10x faster than threading.RLock in\nPython 2.7 because it avoids all locking unless two or more threads try to\nacquire it at the same time. Under congestion, it is still about 10% faster\nthan RLock due to being implemented in Cython.\n\nThis is mostly equivalent to the revised RLock implementation in Python\n3.2, but still faster due to being implemented in Cython. Note that the\nthreading.RLock implementation in Python 3.4 and later tends to be as fast\nor even faster than the lock provided by this package, when called through\nthe Python API. FastRLock is still faster also on these systems when called\nthrough its Cython API.\n",
  "dev_url": "https://github.com/scoder/fastrlock",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "hmaarrfk"
   ]
  },
  "home": "https://github.com/scoder/fastrlock",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "charset-normalizer 3.2.0 pyhd8ed1ab_0",
   "click 8.1.7 unix_pyh707e725_0",
   "libev 4.33 h6eb9509_1",
   "libwebp-base 1.3.1 ha17a0cc_0",
   "pluggy 1.3.0 pyhd8ed1ab_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "libgomp 13.1.0 h39a4be8_0",
   "libxml2 2.11.5 h0545f4b_1",
   "pytz 2023.3 pyhd8ed1ab_0",
   "pygments 2.16.1 pyhd8ed1ab_0",
   "referencing 0.30.2 pyhd8ed1ab_0",
   "libmamba 1.4.2 h7b0afcb_0",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "yaml-cpp 0.7.0 hbbae597_2",
   "libdeflate 1.18 h4194056_0",
   "cffi 1.15.1 py310h8b509f7_3",
   "libtiff 4.5.1 h50938e9_1",
   "markdown-it-py 3.0.0 pyhd8ed1ab_0",
   "conda-package-handling 2.2.0 pyh38be061_0",
   "git 2.42.0 pl5321h7a00b28_0",
   "libxcb 1.15 h4194056_0",
   "tini 0.19.0 hb283c62_1",
   "platformdirs 3.10.0 pyhd8ed1ab_0",
   "libssh2 1.11.0 hb363fe5_0",
   "brotlipy 0.7.0 py310h939259b_1005",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "su-exec 0.2 hb283c62_1003",
   "libffi 3.4.2 h4e0d66e_5",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "libnghttp2 1.52.0 hb3a6636_0",
   "cryptography 41.0.3 py310h4d74ddc_0",
   "zstandard 0.19.0 py310h287625a_2",
   "conda-pack 0.7.1 pyhd8ed1ab_0",
   "patchelf 0.17.2 hea85c5d_0",
   "ripgrep 13.0.0 h0cb23b2_2",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "readline 8.2 h0b9b154_1",
   "fmt 9.1.0 h06f31f1_0",
   "filelock 3.12.2 pyhd8ed1ab_0",
   "freetype 2.12.1 h90753b0_1",
   "jsonschema 4.19.0 pyhd8ed1ab_1",
   "perl 5.32.1 4_ha17a0cc_perl5",
   "pcre2 10.40 h02375f6_0",
   "icu 73.2 h3b4ca64_0",
   "pillow 10.0.0 py310h0fec2d4_0",
   "libsqlite 3.43.0 hd4bbf49_0",
   "xorg-libxdmcp 1.1.3 h4e0d66e_0",
   "anaconda-client 1.12.0 pyhd8ed1ab_1",
   "reproc 14.2.4 h4194056_0",
   "typing_extensions 4.7.1 pyha770c72_0",
   "conda 23.3.1 py310h194a6c8_0",
   "reproc-cpp 14.2.4 h883269e_0",
   "krb5 1.21.2 hee07e50_0",
   "pip 23.2.1 pyhd8ed1ab_0",
   "jsonpatch 1.32 pyhd8ed1ab_0",
   "ruamel.yaml.clib 0.2.7 py310h82c586f_1",
   "gettext 0.21.1 hbbae597_0",
   "packaging 23.1 pyhd8ed1ab_0",
   "tqdm 4.66.1 pyhd8ed1ab_0",
   "requests 2.31.0 pyhd8ed1ab_0",
   "psutil 5.9.5 py310h82c586f_0",
   "attrs 23.1.0 pyh71513ae_1",
   "rich 13.5.1 pyhd8ed1ab_0",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "liblief 0.12.3 hbbae597_0",
   "conda-index 0.2.3 pyhd8ed1ab_0",
   "boa 0.15.1 pyhd8ed1ab_0",
   "conda-package-streaming 0.9.0 pyhd8ed1ab_0",
   "glob2 0.7 py_0",
   "libsolv 0.7.24 hff1ad0c_3",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "urllib3 1.26.15 pyhd8ed1ab_0",
   "ld_impl_linux-ppc64le 2.40 hfa29eb9_0",
   "typing-extensions 4.7.1 hd8ed1ab_0",
   "json5 0.9.14 pyhd8ed1ab_0",
   "python_abi 3.10 3_cp310",
   "curl 8.2.1 ha571e8f_0",
   "pycosat 0.6.4 py310h939259b_1",
   "conda-build 3.25.0 py310h194a6c8_0",
   "more-itertools 10.1.0 pyhd8ed1ab_0",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "prompt-toolkit 3.0.39 pyha770c72_0",
   "mamba 1.4.2 py310h400a96e_0",
   "tornado 6.3.3 py310h6ed3b71_0",
   "ruamel.yaml 0.17.32 py310h05217ba_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "anyio 3.7.1 pyhd8ed1ab_0",
   "openssl 3.1.2 ha17a0cc_0",
   "six 1.16.0 pyh6c4a22f_0",
   "rpds-py 0.9.2 py310h25cbde3_0",
   "bzip2 1.0.8 h4e0d66e_4",
   "yaml 0.2.5 h4e0d66e_2",
   "python 3.10.12 h4005451_0_cpython",
   "c-ares 1.19.1 ha17a0cc_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "brotli-python 1.0.9 py310h76aa780_9",
   "jsonpointer 2.0 py_0",
   "exceptiongroup 1.1.3 pyhd8ed1ab_0",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "py-lief 0.12.3 py310h76aa780_0",
   "lz4-c 1.9.4 h883269e_0",
   "joblib 1.3.2 pyhd8ed1ab_0",
   "libzlib 1.2.13 ha17a0cc_5",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "lerc 4.0.0 hbbae597_0",
   "zipp 3.16.2 pyhd8ed1ab_0",
   "idna 3.4 pyhd8ed1ab_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "python-fastjsonschema 2.18.0 pyhd8ed1ab_0",
   "wheel 0.41.2 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "chardet 5.2.0 py310hd032262_0",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "conda-libmamba-solver 23.3.0 pyhd8ed1ab_0",
   "libnsl 2.0.0 h4e0d66e_0",
   "xorg-libxau 1.0.11 ha17a0cc_0",
   "libarchive 3.6.2 h087afff_1",
   "tk 8.6.12 h41c6715_0",
   "libmambapy 1.4.2 py310hd638ff3_0",
   "markupsafe 2.1.3 py310h6ed3b71_0",
   "lzo 2.10 h6eb9509_1000",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "libedit 3.1.20191231 h41a240f_2",
   "python-libarchive-c 5.0 py310h194a6c8_1",
   "prompt_toolkit 3.0.39 hd8ed1ab_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "lcms2 2.15 h0139fb3_1",
   "ruamel_yaml 0.15.80 py310h939259b_1008",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "pyopenssl 23.2.0 pyhd8ed1ab_1",
   "libiconv 1.17 hb283c62_0",
   "libgcc-ng 13.1.0 h39a4be8_0",
   "nbformat 5.9.2 pyhd8ed1ab_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "jupyter_core 5.3.1 py310h194a6c8_0",
   "pyyaml 6.0.1 py310h05217ba_0",
   "patch 2.7.6 h4e0d66e_1002",
   "jsonschema-specifications 2023.7.1 pyhd8ed1ab_0",
   "zstd 1.5.2 h7292585_7",
   "backports.functools_lru_cache 1.6.5 pyhd8ed1ab_0",
   "backports 1.0 pyhd8ed1ab_3",
   "pycparser 2.21 pyhd8ed1ab_0",
   "importlib_resources 6.0.1 pyhd8ed1ab_0",
   "certifi 2023.7.22 pyhd8ed1ab_0",
   "openjpeg 2.5.0 hbcaec15_2",
   "setuptools 68.1.2 pyhd8ed1ab_0",
   "pthread-stubs 0.4 h339bb43_1001",
   "libjpeg-turbo 2.1.5.1 h4194056_0",
   "xz 5.2.6 hb283c62_0",
   "ncurses 6.4 h344580c_0",
   "libstdcxx-ng 13.1.0 h09f375a_0",
   "keyutils 1.6.1 hb283c62_0",
   "ca-certificates 2023.7.22 h0f6029e_0",
   "tzdata 2023c h71feb2d_0",
   "_openmp_mutex 4.5 2_gnu",
   "libcurl 8.2.1 ha571e8f_0",
   "libpng 1.6.39 hcc10993_0",
   "libexpat 2.5.0 h883269e_1",
   "clyent 1.2.2 py_1",
   "libuuid 2.38.1 h4194056_0",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "conda-env 2.6.0 1",
   "conda-forge-metadata 0.5.2 pyhd8ed1ab_0",
   "conda-forge-ci-setup 3.32.5 py310h9f1fc6e_100",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "oniguruma 6.9.8 hb283c62_0",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "jq 1.6 h339bb43_1000"
  ],
  "summary": "This is a C-level implementation of a fast, re-entrant, optimistic lock for CPython",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "12",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "12",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_73_pypy",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "conda_pkg_format": "2",
 "files": [
  "lib/python3.8/site-packages/fastrlock-0.8.2.dist-info/INSTALLER",
  "lib/python3.8/site-packages/fastrlock-0.8.2.dist-info/LICENSE",
  "lib/python3.8/site-packages/fastrlock-0.8.2.dist-info/METADATA",
  "lib/python3.8/site-packages/fastrlock-0.8.2.dist-info/RECORD",
  "lib/python3.8/site-packages/fastrlock-0.8.2.dist-info/REQUESTED",
  "lib/python3.8/site-packages/fastrlock-0.8.2.dist-info/WHEEL",
  "lib/python3.8/site-packages/fastrlock-0.8.2.dist-info/direct_url.json",
  "lib/python3.8/site-packages/fastrlock/__init__.pxd",
  "lib/python3.8/site-packages/fastrlock/__init__.py",
  "lib/python3.8/site-packages/fastrlock/_lock.pxi",
  "lib/python3.8/site-packages/fastrlock/rlock.pxd",
  "lib/python3.8/site-packages/fastrlock/rlock.pypy38-pp73-ppc_64-linux-gnu.so"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "py38hadfccef_0",
  "build_number": 0,
  "depends": [
   "libgcc-ng >=12",
   "libstdcxx-ng >=12",
   "pypy3.8 >=7.3.11",
   "python >=3.8,<3.9.0a0",
   "python_abi 3.8 *_pypy38_pp73"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "fastrlock",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1693149745283,
  "version": "0.8.2"
 },
 "metadata_version": 1,
 "name": "fastrlock",
 "raw_recipe": "{% set name = \"fastrlock\" %}\n{% set version = \"0.8.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 644ec9215cf9c4df8028d8511379a15d9c1af3e16d80e47f1b6fdc6ba118356a\n\nbuild:\n  number: 0\n  # We need to pass --with-cython to force cython to regenerate the .c file\n  script: {{ PYTHON }} -m pip install . --global-option=\"--with-cython\" -vv\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n  host:\n    - python\n    - pip\n    - cython\n  run:\n    - python\n\ntest:\n  imports:\n    - fastrlock\n\nabout:\n  home: https://github.com/scoder/fastrlock\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: This is a C-level implementation of a fast, re-entrant, optimistic lock for CPython\n  description: |\n    This is a C-level implementation of a fast, re-entrant,\n    optimistic lock for CPython. It is a drop-in replacement for\n    threading.RLock. FastRLock is implemented in Cython and also provides a\n    C-API for direct use from Cython code via from fastrlock cimport rlock.\n\n    Under normal conditions, it is about 10x faster than threading.RLock in\n    Python 2.7 because it avoids all locking unless two or more threads try to\n    acquire it at the same time. Under congestion, it is still about 10% faster\n    than RLock due to being implemented in Cython.\n\n    This is mostly equivalent to the revised RLock implementation in Python\n    3.2, but still faster due to being implemented in Cython. Note that the\n    threading.RLock implementation in Python 3.4 and later tends to be as fast\n    or even faster than the lock provided by this package, when called through\n    the Python API. FastRLock is still faster also on these systems when called\n    through its Cython API.\n  dev_url: https://github.com/scoder/fastrlock\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n",
 "rendered_recipe": {
  "about": {
   "description": "This is a C-level implementation of a fast, re-entrant,\noptimistic lock for CPython. It is a drop-in replacement for\nthreading.RLock. FastRLock is implemented in Cython and also provides a\nC-API for direct use from Cython code via from fastrlock cimport rlock.\n\nUnder normal conditions, it is about 10x faster than threading.RLock in\nPython 2.7 because it avoids all locking unless two or more threads try to\nacquire it at the same time. Under congestion, it is still about 10% faster\nthan RLock due to being implemented in Cython.\n\nThis is mostly equivalent to the revised RLock implementation in Python\n3.2, but still faster due to being implemented in Cython. Note that the\nthreading.RLock implementation in Python 3.4 and later tends to be as fast\nor even faster than the lock provided by this package, when called through\nthe Python API. FastRLock is still faster also on these systems when called\nthrough its Cython API.\n",
   "dev_url": "https://github.com/scoder/fastrlock",
   "home": "https://github.com/scoder/fastrlock",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "This is a C-level implementation of a fast, re-entrant, optimistic lock for CPython"
  },
  "build": {
   "number": "0",
   "script": "/home/conda/feedstock_root/build_artifacts/fastrlock_1693149523301/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . --global-option=\"--with-cython\" -vv",
   "string": "py38hadfccef_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "hmaarrfk"
   ]
  },
  "package": {
   "name": "fastrlock",
   "version": "0.8.2"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "_sysroot_linux-ppc64le_curr_repodata_hack 4 h43410cf_13",
    "binutils_impl_linux-ppc64le 2.40 hba8546e_0",
    "binutils_linux-ppc64le 2.40 habd53a0_1",
    "gcc_impl_linux-ppc64le 12.3.0 h42a156f_0",
    "gcc_linux-ppc64le 12.3.0 ha704aac_1",
    "gxx_impl_linux-ppc64le 12.3.0 h42a156f_0",
    "gxx_linux-ppc64le 12.3.0 heef3b40_1",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_13",
    "ld_impl_linux-ppc64le 2.40 hfa29eb9_0",
    "libgcc-devel_linux-ppc64le 12.3.0 h7176aef_0",
    "libgcc-ng 13.1.0 h39a4be8_0",
    "libgomp 13.1.0 h39a4be8_0",
    "libsanitizer 12.3.0 he912d23_0",
    "libstdcxx-devel_linux-ppc64le 12.3.0 h7176aef_0",
    "libstdcxx-ng 13.1.0 h09f375a_0",
    "sysroot_linux-ppc64le 2.17 h23d7e6c_13"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "bzip2 1.0.8 h4e0d66e_4",
    "ca-certificates 2023.7.22 h0f6029e_0",
    "cython 3.0.2 py38h401ee41_0",
    "expat 2.5.0 h883269e_1",
    "gdbm 1.18 h6c246ac_2",
    "libexpat 2.5.0 h883269e_1",
    "libffi 3.4.2 h4e0d66e_5",
    "libgcc-ng 13.1.0 h39a4be8_0",
    "libgomp 13.1.0 h39a4be8_0",
    "libsqlite 3.43.0 hd4bbf49_0",
    "libstdcxx-ng 13.1.0 h09f375a_0",
    "libzlib 1.2.13 ha17a0cc_5",
    "ncurses 6.4 h344580c_0",
    "openssl 3.1.2 ha17a0cc_0",
    "pip 23.2.1 pyhd8ed1ab_0",
    "pypy3.8 7.3.11 h7e78b19_0",
    "python 3.8.16 0_73_pypy",
    "python_abi 3.8 3_pypy38_pp73",
    "readline 8.2 h0b9b154_1",
    "setuptools 68.1.2 pyhd8ed1ab_0",
    "sqlite 3.43.0 h63c7444_0",
    "tk 8.6.12 h41c6715_0",
    "wheel 0.41.2 pyhd8ed1ab_0",
    "xz 5.2.6 hb283c62_0",
    "zlib 1.2.13 ha17a0cc_5"
   ],
   "run": [
    "libgcc-ng >=12",
    "libstdcxx-ng >=12",
    "pypy3.8 >=7.3.11",
    "python >=3.8,<3.9.0a0",
    "python_abi 3.8 *_pypy38_pp73"
   ]
  },
  "source": {
   "sha256": "644ec9215cf9c4df8028d8511379a15d9c1af3e16d80e47f1b6fdc6ba118356a",
   "url": "https://pypi.io/packages/source/f/fastrlock/fastrlock-0.8.2.tar.gz"
  },
  "test": {
   "imports": [
    "fastrlock"
   ]
  }
 },
 "version": "0.8.2"
}