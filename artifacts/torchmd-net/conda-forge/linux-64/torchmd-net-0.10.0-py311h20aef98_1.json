{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.27.0",
  "conda_version": "23.10.0",
  "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
  "dev_url": "https://github.com/torchmd/torchmd-net",
  "doc_url": "https://github.com/torchmd/torchmd-net",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "flow_run_id": "azure_20231114.3.1",
   "recipe-maintainers": [
    "RaulPPelaez",
    "raimis",
    "giadefa"
   ],
   "remote_url": "https://github.com/conda-forge/torchmd-net-feedstock",
   "sha": "c89139c62a20e8629b90f4857609127cf9d6ce6d"
  },
  "home": "https://github.com/torchmd/torchmd-net",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "README.md",
  "root_pkgs": [
   "pyyaml 6.0.1 py310h2372a71_1",
   "jsonschema 4.19.2 pyhd8ed1ab_0",
   "tini 0.19.0 h166bdaf_1",
   "readline 8.2 h8228510_1",
   "lcms2 2.15 hb7c19ff_3",
   "typing_extensions 4.8.0 pyha770c72_0",
   "libxml2 2.11.5 h232c23b_1",
   "_openmp_mutex 4.5 2_gnu",
   "conda-build 3.27.0 py310hff52083_0",
   "requests 2.31.0 pyhd8ed1ab_0",
   "ld_impl_linux-64 2.40 h41732ed_0",
   "ca-certificates 2023.7.22 hbcca054_0",
   "libnghttp2 1.58.0 h47da74e_0",
   "cffi 1.16.0 py310h2fee648_0",
   "ruamel_yaml 0.15.80 py310h2372a71_1009",
   "perl 5.32.1 4_hd590300_perl5",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "truststore 0.8.0 pyhd8ed1ab_0",
   "libuuid 2.38.1 h0b41bf4_0",
   "chardet 5.2.0 py310hff52083_1",
   "freetype 2.12.1 h267a509_2",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "xorg-libxau 1.0.11 hd590300_0",
   "pycosat 0.6.6 py310h2372a71_0",
   "libwebp-base 1.3.2 hd590300_0",
   "libgomp 13.2.0 h807b86a_3",
   "jsonpointer 2.4 py310hff52083_3",
   "libssh2 1.11.0 h0841786_0",
   "pip 23.3.1 pyhd8ed1ab_0",
   "lz4-c 1.9.4 hcb278e6_0",
   "pluggy 1.3.0 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libffi 3.4.2 h7f98852_5",
   "click 8.1.7 unix_pyh707e725_0",
   "keyutils 1.6.1 h166bdaf_0",
   "bzip2 1.0.8 hd590300_5",
   "six 1.16.0 pyh6c4a22f_0",
   "brotli-python 1.1.0 py310hc6cd4ac_1",
   "zstandard 0.22.0 py310h1275a96_0",
   "su-exec 0.2 h166bdaf_1003",
   "pybind11-abi 4 hd8ed1ab_3",
   "libxcb 1.15 h0b41bf4_0",
   "ripgrep 13.0.0 he8a937b_3",
   "conda-package-streaming 0.9.0 pyhd8ed1ab_0",
   "psutil 5.9.5 py310h2372a71_1",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "ruamel.yaml 0.18.5 py310h2372a71_0",
   "conda-package-handling 2.2.0 pyh38be061_0",
   "python_abi 3.10 4_cp310",
   "krb5 1.21.2 h659d440_0",
   "referencing 0.30.2 pyhd8ed1ab_0",
   "platformdirs 4.0.0 pyhd8ed1ab_0",
   "libgcc-ng 13.2.0 h807b86a_3",
   "py-lief 0.12.3 py310hd8f1fbe_0",
   "pillow 10.1.0 py310h01dd4db_0",
   "libexpat 2.5.0 hcb278e6_1",
   "libzlib 1.2.13 hd590300_5",
   "attrs 23.1.0 pyh71513ae_1",
   "libmambapy 1.5.3 py310h39ff949_2",
   "jupyter_core 5.5.0 py310hff52083_0",
   "tzdata 2023c h71feb2d_0",
   "xz 5.2.6 h166bdaf_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_1",
   "charset-normalizer 3.3.2 pyhd8ed1ab_0",
   "tk 8.6.13 noxft_h4845f30_101",
   "libedit 3.1.20191231 he28a2e2_2",
   "idna 3.4 pyhd8ed1ab_0",
   "packaging 23.2 pyhd8ed1ab_0",
   "fmt 10.1.1 h00ab1b0_0",
   "openjpeg 2.5.0 h488ebb8_3",
   "pcre2 10.40 hc3806b6_0",
   "python-fastjsonschema 2.18.1 pyhd8ed1ab_0",
   "libev 4.33 h516909a_1",
   "libsqlite 3.44.0 h2797004_0",
   "icu 73.2 h59595ed_0",
   "importlib_resources 6.1.1 pyhd8ed1ab_0",
   "libsolv 0.7.26 hfc55251_0",
   "lerc 4.0.0 h27087fc_0",
   "markupsafe 2.1.3 py310h2372a71_1",
   "libmamba 1.5.3 had39da4_2",
   "reproc 14.2.4.post0 hd590300_1",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "libpng 1.6.39 h753d276_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "git 2.42.0 pl5321h86e50cf_0",
   "libjpeg-turbo 3.0.0 hd590300_1",
   "ncurses 6.4 h59595ed_2",
   "conda-pack 0.7.1 pyhd8ed1ab_0",
   "certifi 2023.7.22 pyhd8ed1ab_0",
   "openssl 3.1.4 hd590300_0",
   "pytz 2023.3.post1 pyhd8ed1ab_0",
   "gettext 0.21.1 h27087fc_0",
   "libcurl 8.4.0 hca28451_0",
   "rpds-py 0.12.0 py310hcb5633a_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "tornado 6.3.3 py310h2372a71_1",
   "conda-libmamba-solver 23.11.0 pyhd8ed1ab_0",
   "libnsl 2.0.1 hd590300_0",
   "nbformat 5.9.2 pyhd8ed1ab_0",
   "pthread-stubs 0.4 h36c2ea0_1001",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "tqdm 4.66.1 pyhd8ed1ab_0",
   "libarchive 3.7.2 h039dbb9_0",
   "anaconda-client 1.12.1 pyhd8ed1ab_1",
   "pycparser 2.21 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "yaml-cpp 0.8.0 h59595ed_0",
   "reproc-cpp 14.2.4.post0 h59595ed_1",
   "libtiff 4.6.0 ha9c0a0a_2",
   "patch 2.7.6 h7f98852_1002",
   "zstd 1.5.5 hfc55251_0",
   "mamba 1.5.3 py310h51d5547_2",
   "c-ares 1.21.0 hd590300_0",
   "curl 8.4.0 hca28451_0",
   "python 3.10.13 hd12c33a_0_cpython",
   "conda 23.10.0 py310hff52083_1",
   "jsonschema-specifications 2023.7.1 pyhd8ed1ab_0",
   "libdeflate 1.19 hd590300_0",
   "jsonpatch 1.33 pyhd8ed1ab_0",
   "xorg-libxdmcp 1.1.3 h7f98852_0",
   "setuptools 68.2.2 pyhd8ed1ab_0",
   "libstdcxx-ng 13.2.0 h7e041cc_3",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "archspec 0.2.2 pyhd8ed1ab_0",
   "ruamel.yaml.clib 0.2.7 py310h2372a71_2",
   "pysocks 1.7.1 pyha2e5f31_6",
   "pyopenssl 23.3.0 pyhd8ed1ab_0",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "wheel 0.41.3 pyhd8ed1ab_0",
   "python-libarchive-c 5.0 py310hff52083_2",
   "conda-index 0.3.0 pyhd8ed1ab_1",
   "patchelf 0.17.2 h58526e2_0",
   "liblief 0.12.3 h27087fc_0",
   "zipp 3.17.0 pyhd8ed1ab_0",
   "traitlets 5.13.0 pyhd8ed1ab_0",
   "soupsieve 2.5 pyhd8ed1ab_1",
   "yaml 0.2.5 h7f98852_2",
   "more-itertools 10.1.0 pyhd8ed1ab_0",
   "libiconv 1.17 h166bdaf_0",
   "urllib3 2.0.7 pyhd8ed1ab_0",
   "clyent 1.2.2 pyhd8ed1ab_2",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "cryptography 41.0.5 py310h75e40e8_0",
   "filelock 3.13.1 pyhd8ed1ab_0",
   "lzo 2.10 h516909a_1000",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000",
   "conda-forge-metadata 0.6.1 pyhd8ed1ab_0",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "oniguruma 6.9.9 hd590300_0",
   "typing-extensions 4.8.0 hd8ed1ab_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 4.1.0 py310h7a2d8a0_100"
  ],
  "summary": "State of the art Pytorch Neural Network Potentials (NNPs)",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "10",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.2",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-cuda:11.2",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.11.* *_cpython",
  "pytorch": "2.0",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version",
    "cuda_compiler",
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "conda_pkg_format": "2",
 "files": [
  "bin/torchmd-train",
  "lib/python3.11/site-packages/scripts/__init__.py",
  "lib/python3.11/site-packages/scripts/train.py",
  "lib/python3.11/site-packages/torchmd_net-0.dist-info/INSTALLER",
  "lib/python3.11/site-packages/torchmd_net-0.dist-info/LICENSE",
  "lib/python3.11/site-packages/torchmd_net-0.dist-info/METADATA",
  "lib/python3.11/site-packages/torchmd_net-0.dist-info/RECORD",
  "lib/python3.11/site-packages/torchmd_net-0.dist-info/REQUESTED",
  "lib/python3.11/site-packages/torchmd_net-0.dist-info/WHEEL",
  "lib/python3.11/site-packages/torchmd_net-0.dist-info/direct_url.json",
  "lib/python3.11/site-packages/torchmdnet/__init__.py",
  "lib/python3.11/site-packages/torchmdnet/calculators.py",
  "lib/python3.11/site-packages/torchmdnet/data.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/__init__.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/ace.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/ani.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/comp6.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/custom.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/hdf.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/md17.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/md22.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/qm9.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/qm9q.py",
  "lib/python3.11/site-packages/torchmdnet/datasets/spice.py",
  "lib/python3.11/site-packages/torchmdnet/extensions/__init__.py",
  "lib/python3.11/site-packages/torchmdnet/extensions/extensions.cpp",
  "lib/python3.11/site-packages/torchmdnet/extensions/neighbors/neighbors_cpu.cpp",
  "lib/python3.11/site-packages/torchmdnet/extensions/neighbors/neighbors_cuda.cu",
  "lib/python3.11/site-packages/torchmdnet/extensions/torchmdnet_extensions.so",
  "lib/python3.11/site-packages/torchmdnet/models/__init__.py",
  "lib/python3.11/site-packages/torchmdnet/models/model.py",
  "lib/python3.11/site-packages/torchmdnet/models/output_modules.py",
  "lib/python3.11/site-packages/torchmdnet/models/tensornet.py",
  "lib/python3.11/site-packages/torchmdnet/models/torchmd_et.py",
  "lib/python3.11/site-packages/torchmdnet/models/torchmd_gn.py",
  "lib/python3.11/site-packages/torchmdnet/models/torchmd_t.py",
  "lib/python3.11/site-packages/torchmdnet/models/utils.py",
  "lib/python3.11/site-packages/torchmdnet/models/wrappers.py",
  "lib/python3.11/site-packages/torchmdnet/module.py",
  "lib/python3.11/site-packages/torchmdnet/optimize.py",
  "lib/python3.11/site-packages/torchmdnet/priors/__init__.py",
  "lib/python3.11/site-packages/torchmdnet/priors/atomref.py",
  "lib/python3.11/site-packages/torchmdnet/priors/base.py",
  "lib/python3.11/site-packages/torchmdnet/priors/coulomb.py",
  "lib/python3.11/site-packages/torchmdnet/priors/d2.py",
  "lib/python3.11/site-packages/torchmdnet/priors/zbl.py",
  "lib/python3.11/site-packages/torchmdnet/scripts/__init__.py",
  "lib/python3.11/site-packages/torchmdnet/scripts/train.py",
  "lib/python3.11/site-packages/torchmdnet/utils.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py311h20aef98_1",
  "build_number": 1,
  "constrains": [
   "pytorch =*=cuda*"
  ],
  "depends": [
   "__glibc >=2.17",
   "cuda-version 11.2",
   "cudatoolkit >=11.2,<12",
   "h5py",
   "libgcc-ng >=12",
   "libstdcxx-ng >=12",
   "lightning",
   "matplotlib-base",
   "nnpops",
   "pydantic <2",
   "python >=3.11,<3.12.0a0",
   "python_abi 3.11.* *_cp311",
   "pytorch >=2.0.0,<2.1.0a0",
   "pytorch_geometric",
   "torchmetrics",
   "tqdm"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "torchmd-net",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1699958766504,
  "version": "0.10.0"
 },
 "metadata_version": 1,
 "name": "torchmd-net",
 "raw_recipe": "{% set name = \"torchmd-net\" %}\n{% set version = \"0.10.0\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/torchmd/torchmd-net/archive/{{ version }}.tar.gz\n  sha256: 70ae05d2972c2f05d4441c53adb7daf141421e1ac105b8bdec27e8a736271d6a\n\nbuild:\n  entry_points:\n    - torchmd-train = torchmdnet.scripts.train:main\n  number: 1\n# Mainly due to NNPOps only having a linux package\n  skip: true  # [not linux]\n  rpaths:\n    - lib/\n    - {{ SP_DIR }}/torch/lib\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]\n    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')] \n  host:\n    - python\n    - pip\n    - pytorch\n    - pytorch =*={{ torch_proc_type }}*\n    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')] \n  run:\n    - python\n    - h5py\n    - matplotlib-base\n    - nnpops\n    - pytorch_geometric\n    - lightning\n    - pydantic <2\n    - torchmetrics\n    - tqdm\n    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')] \n  run_constrained:\n    # additional run constraint to the one from the (version-only) run_export;\n    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - torchmdnet\n  commands:\n    - pip check\n    - torchmd-train --help\n    - pytest -v -x -s tests\n  requires:\n    - pip\n    - pytest\n  source_files:\n    - tests\n    - examples\n\nabout:\n  home: https://github.com/torchmd/torchmd-net\n  license: MIT\n  license_family: MIT\n  license_file: README.md\n  summary: 'State of the art Pytorch Neural Network Potentials (NNPs)'\n  description: |\n    TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n  doc_url: https://github.com/torchmd/torchmd-net\n  dev_url: https://github.com/torchmd/torchmd-net\n\nextra:\n  recipe-maintainers:\n    - RaulPPelaez\n    - raimis\n    - giadefa\n",
 "rendered_recipe": {
  "about": {
   "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
   "dev_url": "https://github.com/torchmd/torchmd-net",
   "doc_url": "https://github.com/torchmd/torchmd-net",
   "home": "https://github.com/torchmd/torchmd-net",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "README.md",
   "summary": "State of the art Pytorch Neural Network Potentials (NNPs)"
  },
  "build": {
   "entry_points": [
    "torchmd-train = torchmdnet.scripts.train:main"
   ],
   "number": "1",
   "rpaths": [
    "/home/conda/feedstock_root/build_artifacts/torchmd-net_1699957884490/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold/lib/python3.11/site-packages/torch/lib",
    "lib/"
   ],
   "string": "py311h20aef98_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "flow_run_id": "azure_20231114.3.1",
   "recipe-maintainers": [
    "RaulPPelaez",
    "giadefa",
    "raimis"
   ],
   "remote_url": "https://github.com/conda-forge/torchmd-net-feedstock",
   "sha": "c89139c62a20e8629b90f4857609127cf9d6ce6d"
  },
  "package": {
   "name": "torchmd-net",
   "version": "0.10.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "_sysroot_linux-64_curr_repodata_hack 3 h69a702a_13",
    "binutils_impl_linux-64 2.39 he00db2b_1",
    "binutils_linux-64 2.39 h5fc0e48_13",
    "cuda-version 11.2 hb11dac2_2",
    "gcc_impl_linux-64 10.4.0 h5231bdf_19",
    "gcc_linux-64 10.4.0 h9215b83_13",
    "gxx_impl_linux-64 10.4.0 h5231bdf_19",
    "gxx_linux-64 10.4.0 h6e491c6_13",
    "kernel-headers_linux-64 3.10.0 h4a8ded7_13",
    "ld_impl_linux-64 2.39 hcc3a1bd_1",
    "libgcc-devel_linux-64 10.4.0 hd38fd1e_19",
    "libgcc-ng 13.2.0 h807b86a_3",
    "libgomp 13.2.0 h807b86a_3",
    "libsanitizer 10.4.0 h5246dfb_19",
    "libstdcxx-devel_linux-64 10.4.0 hd38fd1e_19",
    "libstdcxx-ng 13.2.0 h7e041cc_3",
    "nvcc_linux-64 11.2 hdb70940_23",
    "sed 4.8 he412f7d_0",
    "sysroot_linux-64 2.17 h4a8ded7_13"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_kmp_llvm",
    "bzip2 1.0.8 hd590300_5",
    "ca-certificates 2023.7.22 hbcca054_0",
    "cuda-version 11.2 hb11dac2_2",
    "cudatoolkit 11.2.2 hc23eb0c_12",
    "cudnn 8.8.0.121 h838ba91_3",
    "filelock 3.13.1 pyhd8ed1ab_0",
    "gmp 6.3.0 h59595ed_0",
    "gmpy2 2.1.2 py311h6a5fa03_1",
    "icu 73.2 h59595ed_0",
    "jinja2 3.1.2 pyhd8ed1ab_1",
    "ld_impl_linux-64 2.40 h41732ed_0",
    "libabseil 20230802.1 cxx17_h59595ed_0",
    "libblas 3.9.0 19_linux64_openblas",
    "libcblas 3.9.0 19_linux64_openblas",
    "libexpat 2.5.0 hcb278e6_1",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 13.2.0 h807b86a_3",
    "libgfortran-ng 13.2.0 h69a702a_3",
    "libgfortran5 13.2.0 ha4646dd_3",
    "libhwloc 2.9.3 default_h554bfaf_1009",
    "libiconv 1.17 h166bdaf_0",
    "liblapack 3.9.0 19_linux64_openblas",
    "libmagma 2.7.2 hc72dce7_0",
    "libmagma_sparse 2.7.2 hc72dce7_0",
    "libnsl 2.0.1 hd590300_0",
    "libopenblas 0.3.24 pthreads_h413a1c8_0",
    "libprotobuf 4.24.4 hf27288f_0",
    "libsqlite 3.44.0 h2797004_0",
    "libstdcxx-ng 13.2.0 h7e041cc_3",
    "libuuid 2.38.1 h0b41bf4_0",
    "libuv 1.46.0 hd590300_0",
    "libxml2 2.11.5 h232c23b_1",
    "libzlib 1.2.13 hd590300_5",
    "llvm-openmp 17.0.4 h4dfa4b3_0",
    "magma 2.7.2 h2d336ed_0",
    "markupsafe 2.1.3 py311h459d7ec_1",
    "mkl 2022.2.1 h84fe81f_16997",
    "mpc 1.3.1 hfe3b2da_0",
    "mpfr 4.2.1 h9458935_0",
    "mpmath 1.3.0 pyhd8ed1ab_0",
    "nccl 2.19.3.1 h0800d71_0",
    "ncurses 6.4 h59595ed_2",
    "networkx 3.2.1 pyhd8ed1ab_0",
    "numpy 1.26.0 py311h64a7726_0",
    "openssl 3.1.4 hd590300_0",
    "pip 23.3.1 pyhd8ed1ab_0",
    "python 3.11.6 hab00c5b_0_cpython",
    "python_abi 3.11 4_cp311",
    "pytorch 2.0.0 cuda112py311ha0492fd_304",
    "readline 8.2 h8228510_1",
    "setuptools 68.2.2 pyhd8ed1ab_0",
    "sleef 3.5.1 h9b69904_2",
    "sympy 1.12 pypyh9d50eac_103",
    "tbb 2021.10.0 h00ab1b0_2",
    "tk 8.6.13 noxft_h4845f30_101",
    "typing_extensions 4.8.0 pyha770c72_0",
    "tzdata 2023c h71feb2d_0",
    "wheel 0.41.3 pyhd8ed1ab_0",
    "xz 5.2.6 h166bdaf_0",
    "zstd 1.5.5 hfc55251_0"
   ],
   "run": [
    "__glibc >=2.17",
    "cuda-version ==11.2",
    "cudatoolkit >=11.2,<12",
    "h5py",
    "libgcc-ng >=12",
    "libstdcxx-ng >=12",
    "lightning",
    "matplotlib-base",
    "nnpops",
    "pydantic <2",
    "python >=3.11,<3.12.0a0",
    "python_abi 3.11.* *_cp311",
    "pytorch >=2.0.0,<2.1.0a0",
    "pytorch_geometric",
    "torchmetrics",
    "tqdm"
   ],
   "run_constrained": [
    "pytorch =*=cuda*"
   ]
  },
  "source": {
   "sha256": "70ae05d2972c2f05d4441c53adb7daf141421e1ac105b8bdec27e8a736271d6a",
   "url": "https://github.com/torchmd/torchmd-net/archive/0.10.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests"
   ],
   "imports": [
    "torchmdnet"
   ],
   "requires": [
    "pip",
    "pytest"
   ],
   "source_files": [
    "examples",
    "tests"
   ]
  }
 },
 "version": "0.10.0"
}