{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.25.0",
  "conda_version": "23.3.1",
  "description": "OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\ninstrument, generate, collect, and export telemetry data (metrics,\nlogs, and traces) to help you analyze your software\u2019s performance\nand behavior.\n",
  "dev_url": "https://github.com/open-telemetry/opentelemetry-cpp",
  "doc_url": "https://opentelemetry.io/docs/instrumentation/cpp/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "feedstock-name": "cpp-opentelemetry-sdk",
   "final": true,
   "parent_recipe": {
    "name": "opentelemetry-sdk",
    "path": "/Users/runner/work/1/s/recipe",
    "version": "1.11.0"
   },
   "recipe-maintainers": [
    "lidavidm",
    "h-vetinari"
   ]
  },
  "home": "https://github.com/open-telemetry/opentelemetry-cpp",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_family": "APACHE",
  "license_file": "LICENSE",
  "root_pkgs": [
   "jsonschema-specifications 2023.7.1 pyhd8ed1ab_0",
   "cctools_osx-64 973.0.1 ha1c5b94_14",
   "libsolv 0.7.24 h7d26f99_3",
   "prompt-toolkit 3.0.39 pyha770c72_0",
   "xorg-libxau 1.0.11 h0dc2134_0",
   "cryptography 41.0.3 py310ha1817de_0",
   "gettext 0.21.1 h8a4c099_0",
   "exceptiongroup 1.1.3 pyhd8ed1ab_0",
   "pthread-stubs 0.4 hc929b4f_1001",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "platformdirs 3.11.0 pyhd8ed1ab_0",
   "libmamba 1.4.2 h9d281b0_0",
   "joblib 1.3.2 pyhd8ed1ab_0",
   "pygments 2.16.1 pyhd8ed1ab_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "jq 1.6 hc929b4f_1000",
   "packaging 23.1 pyhd8ed1ab_0",
   "yaml 0.2.5 h0d85af4_2",
   "ncurses 6.4 hf0c8a7f_0",
   "libsqlite 3.43.0 h58db7d2_0",
   "python 3.10.12 had23ca6_0_cpython",
   "libtiff 4.6.0 haeeb97c_1",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "click 8.1.7 unix_pyh707e725_0",
   "charset-normalizer 3.2.0 pyhd8ed1ab_0",
   "chardet 5.2.0 py310h2ec42d9_1",
   "conda-index 0.2.3 pyhd8ed1ab_0",
   "cffi 1.15.1 py310ha78151a_3",
   "conda 23.3.1 py310h2ec42d9_0",
   "readline 8.2 h9e318b2_1",
   "reproc 14.2.4 hb7f2c08_0",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "pcre2 10.40 h1c4e4bc_0",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "prompt_toolkit 3.0.39 hd8ed1ab_0",
   "conda-build 3.25.0 py310h2ec42d9_0",
   "libarchive 3.6.2 h0b5dc4a_1",
   "libcurl 8.2.1 h5f667d7_0",
   "pluggy 1.3.0 pyhd8ed1ab_0",
   "libxml2 2.11.5 h3346baf_1",
   "xorg-libxdmcp 1.1.3 h35c211d_0",
   "pyopenssl 23.2.0 pyhd8ed1ab_1",
   "pytz 2023.3.post1 pyhd8ed1ab_0",
   "tornado 6.3.3 py310h6729b98_1",
   "mamba 1.4.2 py310h6bde348_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "anaconda-client 1.12.1 pyhd8ed1ab_1",
   "importlib_resources 6.1.0 pyhd8ed1ab_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "git 2.42.0 pl5321hbb4c4ee_0",
   "sigtool 0.1.3 h88f4db0_0",
   "ruamel.yaml 0.17.32 py310h6729b98_0",
   "libjpeg-turbo 2.1.5.1 h0dc2134_1",
   "boa 0.15.1 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "perl 5.32.1 4_h0dc2134_perl5",
   "libcxx 16.0.6 hd57cbcb_0",
   "jupyter_core 5.3.2 py310h2ec42d9_0",
   "rich 13.6.0 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "requests 2.31.0 pyhd8ed1ab_0",
   "lz4-c 1.9.4 hf0c8a7f_0",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "libssh2 1.11.0 hd019ec5_0",
   "traitlets 5.11.2 pyhd8ed1ab_0",
   "urllib3 2.0.4 pyhd8ed1ab_0",
   "libexpat 2.5.0 hf0c8a7f_1",
   "setuptools 68.1.2 pyhd8ed1ab_0",
   "libnghttp2 1.52.0 he2ab024_0",
   "anyio 3.7.1 pyhd8ed1ab_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "typing_extensions 4.8.0 pyha770c72_0",
   "libdeflate 1.19 ha4e1b8e_0",
   "certifi 2023.7.22 pyhd8ed1ab_0",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "pyyaml 6.0.1 py310h6729b98_1",
   "ripgrep 13.0.0 hbbacdb1_2",
   "nbformat 5.9.2 pyhd8ed1ab_0",
   "ld64_osx-64 609 ha20a434_14",
   "fmt 9.1.0 hb8565cd_0",
   "ca-certificates 2023.7.22 h8857fd0_0",
   "patch 2.7.6 hbcf498f_1002",
   "pip 23.2.1 pyhd8ed1ab_0",
   "conda-package-handling 2.2.0 pyh38be061_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "libffi 3.4.2 h0d85af4_5",
   "python_abi 3.10 3_cp310",
   "soupsieve 2.5 pyhd8ed1ab_1",
   "krb5 1.21.2 hb884880_0",
   "libzlib 1.2.13 h8a1eda9_5",
   "python-fastjsonschema 2.18.1 pyhd8ed1ab_0",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_1",
   "conda-package-streaming 0.9.0 pyhd8ed1ab_0",
   "more-itertools 10.1.0 pyhd8ed1ab_0",
   "zipp 3.17.0 pyhd8ed1ab_0",
   "jsonpatch 1.32 pyhd8ed1ab_0",
   "conda-forge-ci-setup 3.33.4 py310h84be057_100",
   "brotli-python 1.1.0 py310h9e9d8ca_0",
   "zstd 1.5.5 h829000d_0",
   "reproc-cpp 14.2.4 hf0c8a7f_0",
   "referencing 0.30.2 pyhd8ed1ab_0",
   "liblief 0.12.3 hf0c8a7f_0",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "conda-pack 0.7.1 pyhd8ed1ab_0",
   "lcms2 2.15 ha53face_2",
   "markupsafe 2.1.3 py310h6729b98_1",
   "psutil 5.9.5 py310h6729b98_1",
   "tapi 1100.0.11 h9ce4665_0",
   "conda-forge-metadata 0.5.3 pyhd8ed1ab_0",
   "libpng 1.6.39 ha978bb4_0",
   "zstandard 0.19.0 py310h90acd4f_0",
   "xz 5.2.6 h775f41a_0",
   "yaml-cpp 0.7.0 hf0c8a7f_2",
   "tzdata 2023c h71feb2d_0",
   "backports 1.0 pyhd8ed1ab_3",
   "pillow 10.0.1 py310h5e9aaff_1",
   "wheel 0.41.2 pyhd8ed1ab_0",
   "bzip2 1.0.8 h0d85af4_4",
   "tqdm 4.66.1 pyhd8ed1ab_0",
   "py-lief 0.12.3 py310h7a76584_0",
   "attrs 23.1.0 pyh71513ae_1",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "ruamel_yaml 0.15.80 py310h6729b98_1009",
   "libwebp-base 1.3.2 h0dc2134_0",
   "markdown-it-py 3.0.0 pyhd8ed1ab_0",
   "openjpeg 2.5.0 ha4da562_3",
   "libxcb 1.15 hb7f2c08_0",
   "pycosat 0.6.4 py310h90acd4f_1",
   "clyent 1.2.2 py_1",
   "rpds-py 0.10.4 py310h0e083fb_0",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "filelock 3.12.4 pyhd8ed1ab_0",
   "lerc 4.0.0 hb486fe8_0",
   "backports.functools_lru_cache 1.6.5 pyhd8ed1ab_0",
   "python-libarchive-c 5.0 py310h2ec42d9_2",
   "jsonpointer 2.0 py_0",
   "ld64 609 ha02d983_14",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "libmambapy 1.4.2 py310hb15139c_0",
   "curl 8.2.1 h5f667d7_0",
   "oniguruma 6.9.8 hac89ed1_0",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "icu 73.2 hf5e326d_0",
   "c-ares 1.19.1 h0dc2134_0",
   "typing-extensions 4.8.0 hd8ed1ab_0",
   "libiconv 1.17 hac89ed1_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "openssl 3.1.3 h8a1eda9_0",
   "lzo 2.10 haf1e3a3_1000",
   "cctools 973.0.1 h40f6528_14",
   "pybind11-abi 4 hd8ed1ab_3",
   "ruamel.yaml.clib 0.2.7 py310h90acd4f_1",
   "json5 0.9.14 pyhd8ed1ab_0",
   "libllvm16 16.0.6 he4b1e75_2",
   "pycparser 2.21 pyhd8ed1ab_0",
   "jsonschema 4.19.1 pyhd8ed1ab_0",
   "wcwidth 0.2.8 pyhd8ed1ab_0",
   "conda-libmamba-solver 23.3.0 pyhd8ed1ab_0",
   "tk 8.6.12 h5dbffcc_0",
   "libev 4.33 haf1e3a3_1",
   "freetype 2.12.1 h60636b9_2",
   "idna 3.4 pyhd8ed1ab_0"
  ],
  "summary": "The OpenTelemetry C++ Client",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_13.2.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "11.0",
  "build_platform": "osx-64",
  "c_compiler": "clang",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "16",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "libabseil": "20230802",
  "libcurl": "8",
  "libgrpc": "1.58",
  "libprotobuf": "4.24.3",
  "lua": "5",
  "macos_machine": "arm64-apple-darwin20.0.0",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "target_platform": "osx-arm64",
  "zip_keys": [
   [
    "libgrpc",
    "libprotobuf"
   ]
  ],
  "zlib": "1.2"
 },
 "conda_pkg_format": "2",
 "files": [
  "include/opentelemetry/baggage/baggage.h",
  "include/opentelemetry/baggage/baggage_context.h",
  "include/opentelemetry/baggage/propagation/baggage_propagator.h",
  "include/opentelemetry/common/attribute_value.h",
  "include/opentelemetry/common/key_value_iterable.h",
  "include/opentelemetry/common/key_value_iterable_view.h",
  "include/opentelemetry/common/kv_properties.h",
  "include/opentelemetry/common/macros.h",
  "include/opentelemetry/common/spin_lock_mutex.h",
  "include/opentelemetry/common/string_util.h",
  "include/opentelemetry/common/timestamp.h",
  "include/opentelemetry/config.h",
  "include/opentelemetry/context/context.h",
  "include/opentelemetry/context/context_value.h",
  "include/opentelemetry/context/propagation/composite_propagator.h",
  "include/opentelemetry/context/propagation/global_propagator.h",
  "include/opentelemetry/context/propagation/noop_propagator.h",
  "include/opentelemetry/context/propagation/text_map_propagator.h",
  "include/opentelemetry/context/runtime_context.h",
  "include/opentelemetry/detail/preprocessor.h",
  "include/opentelemetry/exporters/memory/in_memory_data.h",
  "include/opentelemetry/exporters/memory/in_memory_span_data.h",
  "include/opentelemetry/exporters/memory/in_memory_span_exporter.h",
  "include/opentelemetry/exporters/memory/in_memory_span_exporter_factory.h",
  "include/opentelemetry/exporters/ostream/common_utils.h",
  "include/opentelemetry/exporters/ostream/log_record_exporter.h",
  "include/opentelemetry/exporters/ostream/log_record_exporter_factory.h",
  "include/opentelemetry/exporters/ostream/metric_exporter.h",
  "include/opentelemetry/exporters/ostream/metric_exporter_factory.h",
  "include/opentelemetry/exporters/ostream/span_exporter.h",
  "include/opentelemetry/exporters/ostream/span_exporter_factory.h",
  "include/opentelemetry/exporters/otlp/otlp_environment.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_client.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_exporter_factory.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_exporter_options.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_log_record_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_log_record_exporter_factory.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_metric_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_metric_exporter_factory.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_metric_exporter_options.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_utils.h",
  "include/opentelemetry/exporters/otlp/otlp_http.h",
  "include/opentelemetry/exporters/otlp/otlp_http_client.h",
  "include/opentelemetry/exporters/otlp/otlp_http_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_http_exporter_factory.h",
  "include/opentelemetry/exporters/otlp/otlp_http_exporter_options.h",
  "include/opentelemetry/exporters/otlp/otlp_http_log_record_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_http_log_record_exporter_factory.h",
  "include/opentelemetry/exporters/otlp/otlp_http_log_record_exporter_options.h",
  "include/opentelemetry/exporters/otlp/otlp_http_metric_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_http_metric_exporter_factory.h",
  "include/opentelemetry/exporters/otlp/otlp_http_metric_exporter_options.h",
  "include/opentelemetry/exporters/otlp/otlp_log_recordable.h",
  "include/opentelemetry/exporters/otlp/otlp_metric_utils.h",
  "include/opentelemetry/exporters/otlp/otlp_populate_attribute_utils.h",
  "include/opentelemetry/exporters/otlp/otlp_preferred_temporality.h",
  "include/opentelemetry/exporters/otlp/otlp_recordable.h",
  "include/opentelemetry/exporters/otlp/otlp_recordable_utils.h",
  "include/opentelemetry/exporters/otlp/protobuf_include_prefix.h",
  "include/opentelemetry/exporters/otlp/protobuf_include_suffix.h",
  "include/opentelemetry/exporters/prometheus/collector.h",
  "include/opentelemetry/exporters/prometheus/exporter.h",
  "include/opentelemetry/exporters/prometheus/exporter_factory.h",
  "include/opentelemetry/exporters/prometheus/exporter_options.h",
  "include/opentelemetry/exporters/prometheus/exporter_utils.h",
  "include/opentelemetry/exporters/zipkin/zipkin_exporter.h",
  "include/opentelemetry/exporters/zipkin/zipkin_exporter_factory.h",
  "include/opentelemetry/exporters/zipkin/zipkin_exporter_options.h",
  "include/opentelemetry/ext/http/client/curl/http_client_curl.h",
  "include/opentelemetry/ext/http/client/curl/http_operation_curl.h",
  "include/opentelemetry/ext/http/client/http_client.h",
  "include/opentelemetry/ext/http/client/http_client_factory.h",
  "include/opentelemetry/ext/http/common/url_parser.h",
  "include/opentelemetry/ext/http/server/file_http_server.h",
  "include/opentelemetry/ext/http/server/http_server.h",
  "include/opentelemetry/ext/http/server/socket_tools.h",
  "include/opentelemetry/ext/zpages/latency_boundaries.h",
  "include/opentelemetry/ext/zpages/static/tracez_index.h",
  "include/opentelemetry/ext/zpages/static/tracez_script.h",
  "include/opentelemetry/ext/zpages/static/tracez_style.h",
  "include/opentelemetry/ext/zpages/threadsafe_span_data.h",
  "include/opentelemetry/ext/zpages/tracez_data.h",
  "include/opentelemetry/ext/zpages/tracez_data_aggregator.h",
  "include/opentelemetry/ext/zpages/tracez_http_server.h",
  "include/opentelemetry/ext/zpages/tracez_processor.h",
  "include/opentelemetry/ext/zpages/tracez_shared_data.h",
  "include/opentelemetry/ext/zpages/zpages.h",
  "include/opentelemetry/ext/zpages/zpages_http_server.h",
  "include/opentelemetry/logs/event_id.h",
  "include/opentelemetry/logs/event_logger.h",
  "include/opentelemetry/logs/event_logger_provider.h",
  "include/opentelemetry/logs/log_record.h",
  "include/opentelemetry/logs/logger.h",
  "include/opentelemetry/logs/logger_provider.h",
  "include/opentelemetry/logs/logger_type_traits.h",
  "include/opentelemetry/logs/noop.h",
  "include/opentelemetry/logs/provider.h",
  "include/opentelemetry/logs/severity.h",
  "include/opentelemetry/metrics/async_instruments.h",
  "include/opentelemetry/metrics/meter.h",
  "include/opentelemetry/metrics/meter_provider.h",
  "include/opentelemetry/metrics/noop.h",
  "include/opentelemetry/metrics/observer_result.h",
  "include/opentelemetry/metrics/provider.h",
  "include/opentelemetry/metrics/sync_instruments.h",
  "include/opentelemetry/nostd/detail/all.h",
  "include/opentelemetry/nostd/detail/decay.h",
  "include/opentelemetry/nostd/detail/dependent_type.h",
  "include/opentelemetry/nostd/detail/functional.h",
  "include/opentelemetry/nostd/detail/invoke.h",
  "include/opentelemetry/nostd/detail/trait.h",
  "include/opentelemetry/nostd/detail/type_pack_element.h",
  "include/opentelemetry/nostd/detail/valueless.h",
  "include/opentelemetry/nostd/detail/variant_alternative.h",
  "include/opentelemetry/nostd/detail/variant_fwd.h",
  "include/opentelemetry/nostd/detail/variant_size.h",
  "include/opentelemetry/nostd/detail/void.h",
  "include/opentelemetry/nostd/function_ref.h",
  "include/opentelemetry/nostd/internal/absl/base/attributes.h",
  "include/opentelemetry/nostd/internal/absl/base/config.h",
  "include/opentelemetry/nostd/internal/absl/base/internal/identity.h",
  "include/opentelemetry/nostd/internal/absl/base/internal/inline_variable.h",
  "include/opentelemetry/nostd/internal/absl/base/internal/invoke.h",
  "include/opentelemetry/nostd/internal/absl/base/macros.h",
  "include/opentelemetry/nostd/internal/absl/base/optimization.h",
  "include/opentelemetry/nostd/internal/absl/base/options.h",
  "include/opentelemetry/nostd/internal/absl/base/policy_checks.h",
  "include/opentelemetry/nostd/internal/absl/base/port.h",
  "include/opentelemetry/nostd/internal/absl/meta/type_traits.h",
  "include/opentelemetry/nostd/internal/absl/types/bad_variant_access.h",
  "include/opentelemetry/nostd/internal/absl/types/internal/variant.h",
  "include/opentelemetry/nostd/internal/absl/types/variant.h",
  "include/opentelemetry/nostd/internal/absl/utility/utility.h",
  "include/opentelemetry/nostd/shared_ptr.h",
  "include/opentelemetry/nostd/span.h",
  "include/opentelemetry/nostd/string_view.h",
  "include/opentelemetry/nostd/type_traits.h",
  "include/opentelemetry/nostd/unique_ptr.h",
  "include/opentelemetry/nostd/utility.h",
  "include/opentelemetry/nostd/variant.h",
  "include/opentelemetry/plugin/detail/dynamic_library_handle.h",
  "include/opentelemetry/plugin/detail/dynamic_load_unix.h",
  "include/opentelemetry/plugin/detail/dynamic_load_windows.h",
  "include/opentelemetry/plugin/detail/loader_info.h",
  "include/opentelemetry/plugin/detail/tracer_handle.h",
  "include/opentelemetry/plugin/detail/utility.h",
  "include/opentelemetry/plugin/dynamic_load.h",
  "include/opentelemetry/plugin/factory.h",
  "include/opentelemetry/plugin/hook.h",
  "include/opentelemetry/plugin/tracer.h",
  "include/opentelemetry/proto/collector/logs/v1/logs_service.grpc.pb.h",
  "include/opentelemetry/proto/collector/logs/v1/logs_service.pb.h",
  "include/opentelemetry/proto/collector/logs/v1/logs_service_mock.grpc.pb.h",
  "include/opentelemetry/proto/collector/metrics/v1/metrics_service.grpc.pb.h",
  "include/opentelemetry/proto/collector/metrics/v1/metrics_service.pb.h",
  "include/opentelemetry/proto/collector/metrics/v1/metrics_service_mock.grpc.pb.h",
  "include/opentelemetry/proto/collector/trace/v1/trace_service.grpc.pb.h",
  "include/opentelemetry/proto/collector/trace/v1/trace_service.pb.h",
  "include/opentelemetry/proto/collector/trace/v1/trace_service_mock.grpc.pb.h",
  "include/opentelemetry/proto/common/v1/common.grpc.pb.h",
  "include/opentelemetry/proto/common/v1/common.pb.h",
  "include/opentelemetry/proto/common/v1/common_mock.grpc.pb.h",
  "include/opentelemetry/proto/logs/v1/logs.grpc.pb.h",
  "include/opentelemetry/proto/logs/v1/logs.pb.h",
  "include/opentelemetry/proto/logs/v1/logs_mock.grpc.pb.h",
  "include/opentelemetry/proto/metrics/v1/metrics.grpc.pb.h",
  "include/opentelemetry/proto/metrics/v1/metrics.pb.h",
  "include/opentelemetry/proto/metrics/v1/metrics_mock.grpc.pb.h",
  "include/opentelemetry/proto/resource/v1/resource.grpc.pb.h",
  "include/opentelemetry/proto/resource/v1/resource.pb.h",
  "include/opentelemetry/proto/resource/v1/resource_mock.grpc.pb.h",
  "include/opentelemetry/proto/trace/v1/trace.grpc.pb.h",
  "include/opentelemetry/proto/trace/v1/trace.pb.h",
  "include/opentelemetry/proto/trace/v1/trace_mock.grpc.pb.h",
  "include/opentelemetry/sdk/common/atomic_shared_ptr.h",
  "include/opentelemetry/sdk/common/atomic_unique_ptr.h",
  "include/opentelemetry/sdk/common/attribute_utils.h",
  "include/opentelemetry/sdk/common/attributemap_hash.h",
  "include/opentelemetry/sdk/common/base64.h",
  "include/opentelemetry/sdk/common/circular_buffer.h",
  "include/opentelemetry/sdk/common/circular_buffer_range.h",
  "include/opentelemetry/sdk/common/empty_attributes.h",
  "include/opentelemetry/sdk/common/env_variables.h",
  "include/opentelemetry/sdk/common/exporter_utils.h",
  "include/opentelemetry/sdk/common/global_log_handler.h",
  "include/opentelemetry/sdk/instrumentationlibrary/instrumentation_library.h",
  "include/opentelemetry/sdk/instrumentationscope/instrumentation_scope.h",
  "include/opentelemetry/sdk/logs/batch_log_record_processor.h",
  "include/opentelemetry/sdk/logs/batch_log_record_processor_factory.h",
  "include/opentelemetry/sdk/logs/batch_log_record_processor_options.h",
  "include/opentelemetry/sdk/logs/event_logger.h",
  "include/opentelemetry/sdk/logs/event_logger_provider.h",
  "include/opentelemetry/sdk/logs/event_logger_provider_factory.h",
  "include/opentelemetry/sdk/logs/exporter.h",
  "include/opentelemetry/sdk/logs/logger.h",
  "include/opentelemetry/sdk/logs/logger_context.h",
  "include/opentelemetry/sdk/logs/logger_context_factory.h",
  "include/opentelemetry/sdk/logs/logger_provider.h",
  "include/opentelemetry/sdk/logs/logger_provider_factory.h",
  "include/opentelemetry/sdk/logs/multi_log_record_processor.h",
  "include/opentelemetry/sdk/logs/multi_log_record_processor_factory.h",
  "include/opentelemetry/sdk/logs/multi_recordable.h",
  "include/opentelemetry/sdk/logs/processor.h",
  "include/opentelemetry/sdk/logs/read_write_log_record.h",
  "include/opentelemetry/sdk/logs/readable_log_record.h",
  "include/opentelemetry/sdk/logs/recordable.h",
  "include/opentelemetry/sdk/logs/simple_log_record_processor.h",
  "include/opentelemetry/sdk/logs/simple_log_record_processor_factory.h",
  "include/opentelemetry/sdk/metrics/aggregation/aggregation.h",
  "include/opentelemetry/sdk/metrics/aggregation/aggregation_config.h",
  "include/opentelemetry/sdk/metrics/aggregation/base2_exponential_histogram_indexer.h",
  "include/opentelemetry/sdk/metrics/aggregation/default_aggregation.h",
  "include/opentelemetry/sdk/metrics/aggregation/drop_aggregation.h",
  "include/opentelemetry/sdk/metrics/aggregation/histogram_aggregation.h",
  "include/opentelemetry/sdk/metrics/aggregation/lastvalue_aggregation.h",
  "include/opentelemetry/sdk/metrics/aggregation/sum_aggregation.h",
  "include/opentelemetry/sdk/metrics/async_instruments.h",
  "include/opentelemetry/sdk/metrics/data/circular_buffer.h",
  "include/opentelemetry/sdk/metrics/data/exemplar_data.h",
  "include/opentelemetry/sdk/metrics/data/metric_data.h",
  "include/opentelemetry/sdk/metrics/data/point_data.h",
  "include/opentelemetry/sdk/metrics/exemplar/always_sample_filter.h",
  "include/opentelemetry/sdk/metrics/exemplar/filter.h",
  "include/opentelemetry/sdk/metrics/exemplar/filtered_exemplar_reservoir.h",
  "include/opentelemetry/sdk/metrics/exemplar/fixed_size_exemplar_reservoir.h",
  "include/opentelemetry/sdk/metrics/exemplar/histogram_exemplar_reservoir.h",
  "include/opentelemetry/sdk/metrics/exemplar/never_sample_filter.h",
  "include/opentelemetry/sdk/metrics/exemplar/no_exemplar_reservoir.h",
  "include/opentelemetry/sdk/metrics/exemplar/reservoir.h",
  "include/opentelemetry/sdk/metrics/exemplar/reservoir_cell.h",
  "include/opentelemetry/sdk/metrics/exemplar/reservoir_cell_selector.h",
  "include/opentelemetry/sdk/metrics/exemplar/with_trace_sample_filter.h",
  "include/opentelemetry/sdk/metrics/export/metric_producer.h",
  "include/opentelemetry/sdk/metrics/export/periodic_exporting_metric_reader.h",
  "include/opentelemetry/sdk/metrics/export/periodic_exporting_metric_reader_factory.h",
  "include/opentelemetry/sdk/metrics/export/periodic_exporting_metric_reader_options.h",
  "include/opentelemetry/sdk/metrics/instrument_metadata_validator.h",
  "include/opentelemetry/sdk/metrics/instruments.h",
  "include/opentelemetry/sdk/metrics/meter.h",
  "include/opentelemetry/sdk/metrics/meter_context.h",
  "include/opentelemetry/sdk/metrics/meter_context_factory.h",
  "include/opentelemetry/sdk/metrics/meter_provider.h",
  "include/opentelemetry/sdk/metrics/meter_provider_factory.h",
  "include/opentelemetry/sdk/metrics/metric_reader.h",
  "include/opentelemetry/sdk/metrics/observer_result.h",
  "include/opentelemetry/sdk/metrics/push_metric_exporter.h",
  "include/opentelemetry/sdk/metrics/state/async_metric_storage.h",
  "include/opentelemetry/sdk/metrics/state/attributes_hashmap.h",
  "include/opentelemetry/sdk/metrics/state/metric_collector.h",
  "include/opentelemetry/sdk/metrics/state/metric_storage.h",
  "include/opentelemetry/sdk/metrics/state/multi_metric_storage.h",
  "include/opentelemetry/sdk/metrics/state/observable_registry.h",
  "include/opentelemetry/sdk/metrics/state/sync_metric_storage.h",
  "include/opentelemetry/sdk/metrics/state/temporal_metric_storage.h",
  "include/opentelemetry/sdk/metrics/sync_instruments.h",
  "include/opentelemetry/sdk/metrics/view/attributes_processor.h",
  "include/opentelemetry/sdk/metrics/view/instrument_selector.h",
  "include/opentelemetry/sdk/metrics/view/instrument_selector_factory.h",
  "include/opentelemetry/sdk/metrics/view/meter_selector.h",
  "include/opentelemetry/sdk/metrics/view/meter_selector_factory.h",
  "include/opentelemetry/sdk/metrics/view/predicate.h",
  "include/opentelemetry/sdk/metrics/view/predicate_factory.h",
  "include/opentelemetry/sdk/metrics/view/view.h",
  "include/opentelemetry/sdk/metrics/view/view_factory.h",
  "include/opentelemetry/sdk/metrics/view/view_registry.h",
  "include/opentelemetry/sdk/metrics/view/view_registry_factory.h",
  "include/opentelemetry/sdk/resource/resource.h",
  "include/opentelemetry/sdk/resource/resource_detector.h",
  "include/opentelemetry/sdk/resource/semantic_conventions.h",
  "include/opentelemetry/sdk/trace/batch_span_processor.h",
  "include/opentelemetry/sdk/trace/batch_span_processor_factory.h",
  "include/opentelemetry/sdk/trace/batch_span_processor_options.h",
  "include/opentelemetry/sdk/trace/exporter.h",
  "include/opentelemetry/sdk/trace/id_generator.h",
  "include/opentelemetry/sdk/trace/multi_recordable.h",
  "include/opentelemetry/sdk/trace/multi_span_processor.h",
  "include/opentelemetry/sdk/trace/processor.h",
  "include/opentelemetry/sdk/trace/random_id_generator.h",
  "include/opentelemetry/sdk/trace/random_id_generator_factory.h",
  "include/opentelemetry/sdk/trace/recordable.h",
  "include/opentelemetry/sdk/trace/sampler.h",
  "include/opentelemetry/sdk/trace/samplers/always_off.h",
  "include/opentelemetry/sdk/trace/samplers/always_off_factory.h",
  "include/opentelemetry/sdk/trace/samplers/always_on.h",
  "include/opentelemetry/sdk/trace/samplers/always_on_factory.h",
  "include/opentelemetry/sdk/trace/samplers/parent.h",
  "include/opentelemetry/sdk/trace/samplers/parent_factory.h",
  "include/opentelemetry/sdk/trace/samplers/trace_id_ratio.h",
  "include/opentelemetry/sdk/trace/samplers/trace_id_ratio_factory.h",
  "include/opentelemetry/sdk/trace/simple_processor.h",
  "include/opentelemetry/sdk/trace/simple_processor_factory.h",
  "include/opentelemetry/sdk/trace/span_data.h",
  "include/opentelemetry/sdk/trace/tracer.h",
  "include/opentelemetry/sdk/trace/tracer_context.h",
  "include/opentelemetry/sdk/trace/tracer_context_factory.h",
  "include/opentelemetry/sdk/trace/tracer_provider.h",
  "include/opentelemetry/sdk/trace/tracer_provider_factory.h",
  "include/opentelemetry/sdk/version/version.h",
  "include/opentelemetry/sdk_config.h",
  "include/opentelemetry/std/shared_ptr.h",
  "include/opentelemetry/std/span.h",
  "include/opentelemetry/std/string_view.h",
  "include/opentelemetry/std/type_traits.h",
  "include/opentelemetry/std/unique_ptr.h",
  "include/opentelemetry/std/utility.h",
  "include/opentelemetry/std/variant.h",
  "include/opentelemetry/trace/canonical_code.h",
  "include/opentelemetry/trace/context.h",
  "include/opentelemetry/trace/default_span.h",
  "include/opentelemetry/trace/noop.h",
  "include/opentelemetry/trace/propagation/b3_propagator.h",
  "include/opentelemetry/trace/propagation/detail/hex.h",
  "include/opentelemetry/trace/propagation/detail/string.h",
  "include/opentelemetry/trace/propagation/http_trace_context.h",
  "include/opentelemetry/trace/propagation/jaeger.h",
  "include/opentelemetry/trace/provider.h",
  "include/opentelemetry/trace/scope.h",
  "include/opentelemetry/trace/semantic_conventions.h",
  "include/opentelemetry/trace/span.h",
  "include/opentelemetry/trace/span_context.h",
  "include/opentelemetry/trace/span_context_kv_iterable.h",
  "include/opentelemetry/trace/span_context_kv_iterable_view.h",
  "include/opentelemetry/trace/span_id.h",
  "include/opentelemetry/trace/span_metadata.h",
  "include/opentelemetry/trace/span_startoptions.h",
  "include/opentelemetry/trace/trace_flags.h",
  "include/opentelemetry/trace/trace_id.h",
  "include/opentelemetry/trace/trace_state.h",
  "include/opentelemetry/trace/tracer.h",
  "include/opentelemetry/trace/tracer_provider.h",
  "include/opentelemetry/version.h"
 ],
 "index": {
  "arch": "arm64",
  "build": "hce30654_2",
  "build_number": 2,
  "depends": [],
  "license": "Apache-2.0",
  "license_family": "APACHE",
  "name": "libopentelemetry-cpp-headers",
  "platform": "osx",
  "subdir": "osx-arm64",
  "timestamp": 1696968671553,
  "version": "1.11.0"
 },
 "metadata_version": 1,
 "name": "libopentelemetry-cpp-headers",
 "raw_recipe": "# This file created by conda-build 3.25.0\n# ------------------------------------------------\n\npackage:\n  name: libopentelemetry-cpp-headers\n  version: 1.11.0\nsource:\n  - patches:\n      - patches/0001-cross_compile_grpc_cpp_plugin_path.patch\n      - patches/0002-add-missing-shared-library-dependencies.patch\n      - patches/0003-add-necessary-abseil-linkage.patch\n    sha256: f30cd88bf898a5726d245eba882b8e81012021eb00df34109f4dfb203f005cea\n    url: https://github.com/open-telemetry/opentelemetry-cpp/archive/refs/tags/v1.11.0.tar.gz\nbuild:\n  noarch: false\n  noarch_python: false\n  number: '2'\n  script: install.sh\n  string: hce30654_2\nrequirements:\n  build:\n    - bzip2 1.0.8 h0d85af4_4\n    - c-ares 1.20.1 h10d778d_0\n    - ca-certificates 2023.7.22 h8857fd0_0\n    - cmake 3.27.6 hf40c264_0\n    - krb5 1.21.2 hb884880_0\n    - libcurl 8.3.0 h5f667d7_0\n    - libcxx 16.0.6 hd57cbcb_0\n    - libedit 3.1.20191231 h0678c8f_2\n    - libev 4.33 haf1e3a3_1\n    - libexpat 2.5.0 hf0c8a7f_1\n    - libnghttp2 1.52.0 he2ab024_0\n    - libssh2 1.11.0 hd019ec5_0\n    - libuv 1.46.0 h0c2f820_0\n    - libzlib 1.2.13 h8a1eda9_5\n    - ncurses 6.4 hf0c8a7f_0\n    - openssl 3.1.3 h8a1eda9_0\n    - rhash 1.4.4 h0dc2134_0\n    - xz 5.2.6 h775f41a_0\n    - zstd 1.5.5 h829000d_0\n  run: []\ntest:\n  commands:\n    - test -d $PREFIX/include/opentelemetry\n    - test ! -f $PREFIX/lib/libopentelemetry_common.a\n    - test ! -f $PREFIX/lib/libopentelemetry_common.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_in_memory.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_in_memory.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_metrics.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_metrics.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_span.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_span.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_client.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_client.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_log.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_log.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_metrics.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_metrics.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_client.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_client.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_metric.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_metric.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_prometheus.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_prometheus.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_zipkin_trace.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_zipkin_trace.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_http_client_curl.a\n    - test ! -f $PREFIX/lib/libopentelemetry_http_client_curl.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_metrics.a\n    - test ! -f $PREFIX/lib/libopentelemetry_metrics.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_otlp_recordable.a\n    - test ! -f $PREFIX/lib/libopentelemetry_otlp_recordable.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_resources.a\n    - test ! -f $PREFIX/lib/libopentelemetry_resources.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_trace.a\n    - test ! -f $PREFIX/lib/libopentelemetry_trace.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_version.a\n    - test ! -f $PREFIX/lib/libopentelemetry_version.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_logs.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_logs.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_log.a\n    - test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_log.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_logs.a\n    - test ! -f $PREFIX/lib/libopentelemetry_logs.dylib\n    - test ! -f $PREFIX/lib/libopentelemetry_proto.a\n    - test ! -f $PREFIX/lib/libopentelemetry_proto.dylib\n    - test ! -d $PREFIX/lib/cmake/opentelemetry-cpp\nabout:\n  description: \"OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\\n\\\n    instrument, generate, collect, and export telemetry data (metrics,\\nlogs, and\\\n    \\ traces) to help you analyze your software\\u2019s performance\\nand behavior.\\n\"\n  dev_url: https://github.com/open-telemetry/opentelemetry-cpp\n  doc_url: https://opentelemetry.io/docs/instrumentation/cpp/\n  home: https://github.com/open-telemetry/opentelemetry-cpp\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE\n  summary: The OpenTelemetry C++ Client\nextra:\n  copy_test_source_files: true\n  feedstock-name: cpp-opentelemetry-sdk\n  final: true\n  recipe-maintainers:\n    - h-vetinari\n    - lidavidm\n",
 "rendered_recipe": {
  "about": {
   "description": "OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\ninstrument, generate, collect, and export telemetry data (metrics,\nlogs, and traces) to help you analyze your software\u2019s performance\nand behavior.\n",
   "dev_url": "https://github.com/open-telemetry/opentelemetry-cpp",
   "doc_url": "https://opentelemetry.io/docs/instrumentation/cpp/",
   "home": "https://github.com/open-telemetry/opentelemetry-cpp",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "The OpenTelemetry C++ Client"
  },
  "build": {
   "noarch": false,
   "noarch_python": false,
   "number": "2",
   "script": "install.sh",
   "string": "hce30654_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "feedstock-name": "cpp-opentelemetry-sdk",
   "final": true,
   "recipe-maintainers": [
    "h-vetinari",
    "lidavidm"
   ]
  },
  "package": {
   "name": "libopentelemetry-cpp-headers",
   "version": "1.11.0"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 h0d85af4_4",
    "c-ares 1.20.1 h10d778d_0",
    "ca-certificates 2023.7.22 h8857fd0_0",
    "cmake 3.27.6 hf40c264_0",
    "krb5 1.21.2 hb884880_0",
    "libcurl 8.3.0 h5f667d7_0",
    "libcxx 16.0.6 hd57cbcb_0",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libexpat 2.5.0 hf0c8a7f_1",
    "libnghttp2 1.52.0 he2ab024_0",
    "libssh2 1.11.0 hd019ec5_0",
    "libuv 1.46.0 h0c2f820_0",
    "libzlib 1.2.13 h8a1eda9_5",
    "ncurses 6.4 hf0c8a7f_0",
    "openssl 3.1.3 h8a1eda9_0",
    "rhash 1.4.4 h0dc2134_0",
    "xz 5.2.6 h775f41a_0",
    "zstd 1.5.5 h829000d_0"
   ],
   "run": []
  },
  "source": [
   {
    "patches": [
     "patches/0001-cross_compile_grpc_cpp_plugin_path.patch",
     "patches/0002-add-missing-shared-library-dependencies.patch",
     "patches/0003-add-necessary-abseil-linkage.patch"
    ],
    "sha256": "f30cd88bf898a5726d245eba882b8e81012021eb00df34109f4dfb203f005cea",
    "url": "https://github.com/open-telemetry/opentelemetry-cpp/archive/refs/tags/v1.11.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -d $PREFIX/include/opentelemetry",
    "test ! -f $PREFIX/lib/libopentelemetry_common.a",
    "test ! -f $PREFIX/lib/libopentelemetry_common.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_in_memory.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_in_memory.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_metrics.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_metrics.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_span.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_span.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_client.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_client.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_log.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_log.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_metrics.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc_metrics.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_client.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_client.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_metric.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_metric.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_prometheus.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_prometheus.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_zipkin_trace.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_zipkin_trace.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_http_client_curl.a",
    "test ! -f $PREFIX/lib/libopentelemetry_http_client_curl.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_metrics.a",
    "test ! -f $PREFIX/lib/libopentelemetry_metrics.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_otlp_recordable.a",
    "test ! -f $PREFIX/lib/libopentelemetry_otlp_recordable.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_resources.a",
    "test ! -f $PREFIX/lib/libopentelemetry_resources.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_trace.a",
    "test ! -f $PREFIX/lib/libopentelemetry_trace.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_version.a",
    "test ! -f $PREFIX/lib/libopentelemetry_version.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_logs.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_ostream_logs.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_log.a",
    "test ! -f $PREFIX/lib/libopentelemetry_exporter_otlp_http_log.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_logs.a",
    "test ! -f $PREFIX/lib/libopentelemetry_logs.dylib",
    "test ! -f $PREFIX/lib/libopentelemetry_proto.a",
    "test ! -f $PREFIX/lib/libopentelemetry_proto.dylib",
    "test ! -d $PREFIX/lib/cmake/opentelemetry-cpp"
   ]
  }
 },
 "version": "1.11.0"
}