{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.25.0",
  "conda_version": "23.3.1",
  "dev_url": "https://gitlab.kitware.com/vtk/vtk",
  "doc_url": "https://vtk.org/documentation",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "Maxyme",
    "ccordoba12",
    "grlee77",
    "msarahan",
    "patricksnape",
    "dfroger",
    "tadeu",
    "marcelotrevisani",
    "downiec",
    "jasonb5",
    "matthiasdiener",
    "basnijholt",
    "Tobias-Fischer"
   ]
  },
  "home": "http://www.vtk.org/",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_file": "Copyright.txt",
  "root_pkgs": [
   "jsonschema-specifications 2023.7.1 pyhd8ed1ab_0",
   "cctools_osx-64 973.0.1 ha1c5b94_14",
   "prompt-toolkit 3.0.39 pyha770c72_0",
   "xorg-libxau 1.0.11 h0dc2134_0",
   "cryptography 41.0.3 py310ha1817de_0",
   "gettext 0.21.1 h8a4c099_0",
   "typing-extensions 4.7.1 hd8ed1ab_0",
   "urllib3 1.26.15 pyhd8ed1ab_0",
   "exceptiongroup 1.1.3 pyhd8ed1ab_0",
   "platformdirs 3.10.0 pyhd8ed1ab_0",
   "pthread-stubs 0.4 hc929b4f_1001",
   "tornado 6.3.3 py310h6729b98_0",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "libmamba 1.4.2 h9d281b0_0",
   "joblib 1.3.2 pyhd8ed1ab_0",
   "pygments 2.16.1 pyhd8ed1ab_0",
   "liblief 0.11.5 he49afe7_1",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "pillow 10.0.0 py310hd63a8c7_0",
   "jq 1.6 hc929b4f_1000",
   "importlib_resources 6.0.1 pyhd8ed1ab_0",
   "icu 72.1 h7336db1_0",
   "packaging 23.1 pyhd8ed1ab_0",
   "yaml 0.2.5 h0d85af4_2",
   "ncurses 6.4 hf0c8a7f_0",
   "python 3.10.12 had23ca6_0_cpython",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "libxml2 2.11.5 hd95e348_0",
   "anaconda-client 1.12.0 pyhd8ed1ab_1",
   "chardet 5.2.0 py310h2ec42d9_0",
   "click 8.1.7 unix_pyh707e725_0",
   "charset-normalizer 3.2.0 pyhd8ed1ab_0",
   "conda-index 0.2.3 pyhd8ed1ab_0",
   "openjpeg 2.5.0 h13ac156_2",
   "cffi 1.15.1 py310ha78151a_3",
   "conda 23.3.1 py310h2ec42d9_0",
   "readline 8.2 h9e318b2_1",
   "python-libarchive-c 5.0 py310h2ec42d9_1",
   "reproc 14.2.4 hb7f2c08_0",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "freetype 2.12.1 h3f81eb7_1",
   "pcre2 10.40 h1c4e4bc_0",
   "typing_extensions 4.7.1 pyha770c72_0",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "prompt_toolkit 3.0.39 hd8ed1ab_0",
   "conda-build 3.25.0 py310h2ec42d9_0",
   "libarchive 3.6.2 h0b5dc4a_1",
   "libcurl 8.2.1 h5f667d7_0",
   "libjpeg-turbo 2.1.5.1 hb7f2c08_0",
   "lcms2 2.15 h2dcdeff_1",
   "xorg-libxdmcp 1.1.3 h35c211d_0",
   "pyopenssl 23.2.0 pyhd8ed1ab_1",
   "libsqlite 3.42.0 h58db7d2_0",
   "mamba 1.4.2 py310h6bde348_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "pluggy 1.2.0 pyhd8ed1ab_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "git 2.42.0 pl5321hbb4c4ee_0",
   "sigtool 0.1.3 h88f4db0_0",
   "ruamel.yaml 0.17.32 py310h6729b98_0",
   "boa 0.15.1 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "perl 5.32.1 4_h0dc2134_perl5",
   "libcxx 16.0.6 hd57cbcb_0",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "requests 2.31.0 pyhd8ed1ab_0",
   "lz4-c 1.9.4 hf0c8a7f_0",
   "pyyaml 6.0.1 py310h6729b98_0",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "libssh2 1.11.0 hd019ec5_0",
   "psutil 5.9.5 py310h90acd4f_0",
   "libexpat 2.5.0 hf0c8a7f_1",
   "libdeflate 1.18 hac1461d_0",
   "setuptools 68.1.2 pyhd8ed1ab_0",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "libnghttp2 1.52.0 he2ab024_0",
   "anyio 3.7.1 pyhd8ed1ab_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "certifi 2023.7.22 pyhd8ed1ab_0",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "brotli-python 1.0.9 py310h7a76584_9",
   "libwebp-base 1.3.1 h0dc2134_0",
   "ripgrep 13.0.0 hbbacdb1_2",
   "rich 13.5.1 pyhd8ed1ab_0",
   "nbformat 5.9.2 pyhd8ed1ab_0",
   "ld64_osx-64 609 ha20a434_14",
   "fmt 9.1.0 hb8565cd_0",
   "ca-certificates 2023.7.22 h8857fd0_0",
   "patch 2.7.6 hbcf498f_1002",
   "pip 23.2.1 pyhd8ed1ab_0",
   "conda-package-handling 2.2.0 pyh38be061_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "libffi 3.4.2 h0d85af4_5",
   "python_abi 3.10 3_cp310",
   "krb5 1.21.2 hb884880_0",
   "filelock 3.12.3 pyhd8ed1ab_0",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "libzlib 1.2.13 h8a1eda9_5",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "conda-package-streaming 0.9.0 pyhd8ed1ab_0",
   "more-itertools 10.1.0 pyhd8ed1ab_0",
   "rpds-py 0.10.0 py310h3461e44_0",
   "jsonpatch 1.32 pyhd8ed1ab_0",
   "openssl 3.1.2 h8a1eda9_0",
   "reproc-cpp 14.2.4 hf0c8a7f_0",
   "referencing 0.30.2 pyhd8ed1ab_0",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "conda-pack 0.7.1 pyhd8ed1ab_0",
   "tapi 1100.0.11 h9ce4665_0",
   "conda-forge-ci-setup 3.32.5 py310h84be057_100",
   "libpng 1.6.39 ha978bb4_0",
   "markupsafe 2.1.3 py310h6729b98_0",
   "xz 5.2.6 h775f41a_0",
   "python-fastjsonschema 2.18.0 pyhd8ed1ab_0",
   "yaml-cpp 0.7.0 hf0c8a7f_2",
   "tzdata 2023c h71feb2d_0",
   "backports 1.0 pyhd8ed1ab_3",
   "bzip2 1.0.8 h0d85af4_4",
   "jupyter_core 5.3.1 py310h2ec42d9_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "tqdm 4.66.1 pyhd8ed1ab_0",
   "attrs 23.1.0 pyh71513ae_1",
   "conda-forge-metadata 0.5.2 pyhd8ed1ab_0",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "zstandard 0.19.0 py310h151724a_2",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "libtiff 4.5.1 hf955e92_1",
   "zipp 3.16.2 pyhd8ed1ab_0",
   "markdown-it-py 3.0.0 pyhd8ed1ab_0",
   "libxcb 1.15 hb7f2c08_0",
   "pycosat 0.6.4 py310h90acd4f_1",
   "clyent 1.2.2 py_1",
   "brotlipy 0.7.0 py310h90acd4f_1005",
   "libsolv 0.7.24 h7d26f99_1",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "lerc 4.0.0 hb486fe8_0",
   "wheel 0.41.1 pyhd8ed1ab_0",
   "backports.functools_lru_cache 1.6.5 pyhd8ed1ab_0",
   "jsonpointer 2.0 py_0",
   "ld64 609 ha02d983_14",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py310h90acd4f_1008",
   "libmambapy 1.4.2 py310hb15139c_0",
   "curl 8.2.1 h5f667d7_0",
   "zstd 1.5.2 h829000d_7",
   "py-lief 0.11.5 py310hba3363e_1",
   "oniguruma 6.9.8 hac89ed1_0",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "c-ares 1.19.1 h0dc2134_0",
   "libiconv 1.17 hac89ed1_0",
   "jsonschema 4.19.0 pyhd8ed1ab_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "lzo 2.10 haf1e3a3_1000",
   "cctools 973.0.1 h40f6528_14",
   "pybind11-abi 4 hd8ed1ab_3",
   "ruamel.yaml.clib 0.2.7 py310h90acd4f_1",
   "json5 0.9.14 pyhd8ed1ab_0",
   "pytz 2023.3 pyhd8ed1ab_0",
   "libllvm16 16.0.6 he4b1e75_2",
   "pycparser 2.21 pyhd8ed1ab_0",
   "conda-libmamba-solver 23.3.0 pyhd8ed1ab_0",
   "tk 8.6.12 h5dbffcc_0",
   "libev 4.33 haf1e3a3_1",
   "idna 3.4 pyhd8ed1ab_0"
  ],
  "summary": "The Visualization Toolkit (VTK) is an open-source, freely available software system for 3D computer graphics, modeling, image processing, volume rendering, scientific visualization, and information visualization.\n",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_13.2.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "11.0",
  "boost_cpp": "1.78.0",
  "build_platform": "osx-64",
  "build_variant": "qt",
  "c_compiler": "clang",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "15",
  "expat": "2",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build"
  ],
  "ffmpeg": "6",
  "fortran_compiler": "gfortran",
  "freetype": "2",
  "glew": "2.1",
  "hdf5": "1.14.2",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "jsoncpp": "1.9.5",
  "libjpeg_turbo": "2.1.5",
  "libnetcdf": "4.9.2",
  "libpng": "1.6",
  "libtiff": "4.5",
  "libxml2": "2.11",
  "lua": "5",
  "lz4_c": "1.9.3",
  "macos_machine": "arm64-apple-darwin20.0.0",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "boost-cpp": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "proj": "9.2.1",
  "pugixml": "1.13",
  "python": "3.8.* *_cpython",
  "qt_main": "5.15",
  "r_base": "3.5",
  "replacements": {
   "all_replacements": [
    {
     "glob_patterns": [
      "*.cmake"
     ],
     "regex_re": "([^;\\s\"]+/sysroot)",
     "replacement_re": "$ENV{CONDA_BUILD_SYSROOT}",
     "tag": "CMake build metadata"
    },
    {
     "glob_patterns": [
      "*.cmake"
     ],
     "regex_re": "([^;\\s\"]+/MacOSX\\d*\\.?\\d*\\.sdk)",
     "replacement_re": "$ENV{CONDA_BUILD_SYSROOT}",
     "tag": "CMake build metadata OSX"
    }
   ]
  },
  "sqlite": "3",
  "target_platform": "osx-arm64",
  "tbb": "2021",
  "tbb_devel": "2021",
  "tk": "8.6",
  "vtk": "9.2.5",
  "zlib": "1.2"
 },
 "conda_pkg_format": "2",
 "files": [],
 "index": {
  "arch": "arm64",
  "build": "qt_py38h1234567_212",
  "build_number": 212,
  "depends": [
   "vtk-base 9.2.6 qt_py38h1234567_212",
   "vtk-io-ffmpeg 9.2.6 qt_py38h1234567_212"
  ],
  "license": "BSD-3-Clause",
  "name": "vtk",
  "platform": "osx",
  "subdir": "osx-arm64",
  "timestamp": 1693444255774,
  "version": "9.2.6"
 },
 "metadata_version": 1,
 "name": "vtk",
 "raw_recipe": "{% set version = \"9.2.6\" %}\n{% set build = 12 %}\n\n{% set minor_version = \".\".join(version.split(\".\")[:2]) %}\n\n{% set build = build + 100 %}   # [build_variant == \"osmesa\"]\n{% set build = build + 200 %}   # [build_variant == \"qt\"]\n# typically, osmesa is selected by installing or not installing\n# mesalib, but it could also be selected via the build string:\n# `vtk * osmesa*` for osmesa\n# `vtk * egl*` for egl\n# `vtk * qt-main*` for qt-main\n{% set build_string = '{}_py{}h{}_{}'.format(build_variant, CONDA_PY, PKG_HASH, build) %}\n\n# The 'build: string: ...' needs to be set in each output and the top-level\n# otherwise it won't be correct in the final build.\n\npackage:\n  name: vtk\n  version: {{ version }}\n\nsource:\n  url: http://www.vtk.org/files/release/{{ minor_version }}/VTK-{{ version }}.tar.gz\n  sha256: 06fc8d49c4e56f498c40fcb38a563ed8d4ec31358d0101e8988f0bb4d539dd12\n  patches:\n    - fix-threads-windows.patch  # [win]\n    # https://github.com/conda-forge/vtk-feedstock/pull/282\n    # https://gitlab.kitware.com/vtk/vtk/-/issues/18365#note_1079278\n    # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/9987\n    - patches/9987_try_except_python_import.patch  # [not win]\n\nbuild:\n  number: {{ build }}\n  string: {{ build_string }}\n\noutputs:\n  - name: vtk-base\n    build:\n      string: {{ build_string }}\n      script: ${RECIPE_DIR}/build-base.sh  # [not win]\n      script: \"%RECIPE_DIR%\\\\bld-base.bat\"  # [win]\n      ignore_run_exports_from:\n        - ffmpeg  # [not win]\n      run_exports:\n        - {{ pin_subpackage('vtk-base', max_pin='x.x.x') }}\n      track_features:\n        - vtk-egl  # [build_variant == \"egl\"]\n        - vtk-osmesa  # [build_variant == \"osmesa\"]\n\n      features:\n        - mesalib  # [build_variant == \"osmesa\"]\n\n    requirements:\n      build:\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler('fortran') }}  # [build_variant != \"qt\"]\n        - sysroot_linux-64 2.17  # [build_variant == \"osmesa\"]\n        - cmake\n        - ninja\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - {{ cdt('libselinux') }}  # [linux and build_variant != \"osmesa\"]\n        - {{ cdt('mesa-libgl-devel') }}  # [linux and build_variant != \"osmesa\"]\n        - {{ cdt('mesa-dri-drivers') }}  # [linux and build_variant != \"osmesa\"]\n        - {{ cdt('libglvnd-egl') }}  # [build_variant == \"egl\" and cdt_name == \"cos7\"]\n        - {{ cdt('mesa-libegl-devel') }}  # [build_variant == \"egl\"]\n        - {{ cdt('mesa-libgbm') }}  # [build_variant == \"egl\"]\n\n      host:\n        - python\n        - zlib\n        - freetype\n        - hdf5\n        - hdf5 * nompi_*\n        - libxml2\n        - libpng\n        - libjpeg-turbo\n        - libtiff\n        - jsoncpp\n        - expat\n        - tbb\n        - tbb-devel\n        - mesalib >=21.0  # [build_variant == \"osmesa\"]\n        - libnetcdf\n        - libnetcdf * nompi_*\n        - lz4-c\n        - xorg-libxt  # [linux]\n        # These packages are not CDT to help with compat with other builds\n        # (e.g., tensorflow, qt-main), e.g.\n        # https://github.com/conda-forge/qt-main-feedstock/blob/2b166b35e9e1a2d897640ac28ae4b00491d9e310/recipe/meta.yaml#L134-L138\n        - libxcb  # [linux and build_variant != \"osmesa\"]\n        - xorg-libxau  # [linux and build_variant != \"osmesa\"]\n        - libuuid  # [linux and build_variant != \"osmesa\"]\n        - xorg-libxext  # [linux and build_variant != \"osmesa\"]\n        - xorg-libxfixes  # [linux and build_variant != \"osmesa\"]\n        - xorg-libxxf86vm  # [linux and build_variant != \"osmesa\"]\n        - xorg-libxdamage  # [linux and build_variant != \"osmesa\"]\n        - xorg-libsm  # [linux and build_variant != \"osmesa\"]\n        - xorg-libice  # [linux and build_variant != \"osmesa\"]\n        - xorg-libx11  # [linux and build_variant != \"osmesa\"]\n        - xorg-xf86vidmodeproto  # [linux and build_variant != \"osmesa\"]\n        - boost-cpp\n        - tk  # [not win and (build_variant == \"qt\")]\n        - ffmpeg\n        - utfcpp\n        - eigen\n        - double-conversion\n        - pugixml\n        - glew  # [build_variant == \"qt\"]\n        - libogg\n        - libtheora\n        - nlohmann_json\n        - proj\n        - loguru\n        - sqlite\n        - gl2ps\n        - pugixml\n        - qt-main  # [not ppc64le and (build_variant == \"qt\")]\n\n      run:\n        - python\n        - zlib\n        - freetype\n        - hdf5\n        - libxml2\n        - libpng\n        - libjpeg-turbo\n        - libtiff\n        - jsoncpp\n        - expat\n        - tbb\n        - mesalib >=21.0  # [build_variant == \"osmesa\"]\n        - libnetcdf\n        - lz4-c\n        - xorg-libxt  # [linux]\n        - tk  # [not win and (build_variant == \"qt\")]\n        - utfcpp\n        - eigen\n        - double-conversion\n        - pugixml\n        - glew  # [build_variant == \"qt\"]\n        - libogg\n        - libtheora\n        - nlohmann_json\n        - proj\n        - loguru\n        - sqlite\n        - gl2ps\n        - pugixml\n        - tbb-devel\n        - numpy\n        - wslink\n\n      run_constrained:\n        # Paraview bundles its own VTK that has conflicting Python vtkmodules\n        - paraview ==9999999999\n\n    test:\n      imports:\n        - vtk\n        - vtk.vtkChartsCore\n        - vtk.vtkCommonCore\n        - vtk.vtkFiltersCore\n        - vtk.vtkFiltersGeneric\n        - vtk.vtkGeovisCore\n        - vtk.vtkFiltersHybrid\n        - vtk.vtkIOCore\n        - vtk.vtkImagingCore\n        - vtk.vtkInfovisCore\n        - vtk.vtkRenderingCore\n        - vtk.vtkViewsCore\n        - vtk.vtkRenderingVolume\n        - vtk.vtkInteractionWidgets\n        - vtk.vtkWebGLExporter\n        - vtk.tk.vtkTkRenderWidget  # [not win and (build_variant == \"qt\")]\n        - vtkmodules\n        - vtkmodules.vtkChartsCore\n        - vtkmodules.vtkCommonCore\n        - vtkmodules.vtkFiltersCore\n        - vtkmodules.vtkFiltersGeneric\n        - vtkmodules.vtkGeovisCore\n        - vtkmodules.vtkFiltersHybrid\n        - vtkmodules.vtkIOCore\n        - vtkmodules.vtkImagingCore\n        - vtkmodules.vtkInfovisCore\n        - vtkmodules.vtkRenderingCore\n        - vtkmodules.vtkViewsCore\n        - vtkmodules.vtkRenderingVolume\n        - vtkmodules.vtkInteractionWidgets\n        - vtkmodules.vtkWebCore\n        - vtkmodules.web\n        - vtkmodules.web.utils\n\n      requires:\n        - pip\n        - setuptools\n\n      commands:\n        - pip check\n\n  - name: vtk-io-ffmpeg\n    build:\n      string: {{ build_string }}\n      script: ${RECIPE_DIR}/build-io-ffmpeg.sh  # [not win]\n      skip: true  # [win]\n      run_exports:\n        - {{ pin_subpackage('vtk-io-ffmpeg', max_pin='x.x.x') }}\n    requirements:\n      build: []\n      host:\n          # We use ffmpeg here in the host section so that conda build\n          # uses the global pinnings and ensures ffmpeg compatibility.\n          - ffmpeg\n      run:\n        - {{ pin_subpackage(\"vtk-base\", exact=True) }}\n        - ffmpeg\n    test:\n      requires:\n        - pip\n        - setuptools\n      imports:\n        - vtk.vtkIOFFMPEG\n\n  - name: vtk\n    build:\n      string: {{ build_string }}\n      run_exports:\n        - {{ pin_subpackage('vtk', max_pin='x.x.x') }}\n    requirements:\n      build: []\n      run:\n        - {{ pin_subpackage(\"vtk-base\", exact=True) }}\n        - {{ pin_subpackage(\"vtk-io-ffmpeg\", exact=True) }}  # [not win]\n    test:\n      requires:\n        - pip\n        - setuptools\n      imports:\n        - vtk\n        - vtk.vtkIOFFMPEG  # [not win]\n      commands:\n        - python test_vtk.py\n\nabout:\n  home: http://www.vtk.org/\n  license: BSD-3-Clause\n  license_file: Copyright.txt\n  summary: >\n    The Visualization Toolkit (VTK) is an open-source, freely available software system for 3D computer graphics, modeling, image processing, volume rendering, scientific visualization, and information visualization.\n  dev_url: https://gitlab.kitware.com/vtk/vtk\n  doc_url: https://vtk.org/documentation\n\nextra:\n  recipe-maintainers:\n    - Maxyme\n    - ccordoba12\n    - grlee77\n    - msarahan\n    - patricksnape\n    - dfroger\n    - tadeu\n    - marcelotrevisani\n    - downiec\n    - jasonb5\n    - matthiasdiener\n    - basnijholt\n    - Tobias-Fischer\n",
 "rendered_recipe": {
  "about": {
   "dev_url": "https://gitlab.kitware.com/vtk/vtk",
   "doc_url": "https://vtk.org/documentation",
   "home": "http://www.vtk.org/",
   "license": "BSD-3-Clause",
   "license_file": "Copyright.txt",
   "summary": "The Visualization Toolkit (VTK) is an open-source, freely available software system for 3D computer graphics, modeling, image processing, volume rendering, scientific visualization, and information visualization.\n"
  },
  "build": {
   "number": "212",
   "run_exports": [
    "vtk >=9.2.6,<9.2.7.0a0"
   ],
   "string": "qt_py38h1234567_212"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "Maxyme",
    "Tobias-Fischer",
    "basnijholt",
    "ccordoba12",
    "dfroger",
    "downiec",
    "grlee77",
    "jasonb5",
    "marcelotrevisani",
    "matthiasdiener",
    "msarahan",
    "patricksnape",
    "tadeu"
   ]
  },
  "package": {
   "name": "vtk",
   "version": "9.2.6"
  },
  "requirements": {
   "build": [],
   "run": [
    "vtk-base 9.2.6 qt_py38h1234567_212",
    "vtk-io-ffmpeg 9.2.6 qt_py38h1234567_212"
   ]
  },
  "source": {
   "patches": [
    "patches/9987_try_except_python_import.patch"
   ],
   "sha256": "06fc8d49c4e56f498c40fcb38a563ed8d4ec31358d0101e8988f0bb4d539dd12",
   "url": "http://www.vtk.org/files/release/9.2/VTK-9.2.6.tar.gz"
  }
 },
 "version": "9.2.6"
}