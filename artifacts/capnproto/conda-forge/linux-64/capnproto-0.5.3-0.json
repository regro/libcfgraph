{
 "about": {},
 "conda_build_config": {},
 "files": [
  "bin/capnp",
  "bin/capnpc",
  "bin/capnpc-c++",
  "bin/capnpc-capnp",
  "include/capnp/any.h",
  "include/capnp/blob.h",
  "include/capnp/c++.capnp",
  "include/capnp/c++.capnp.h",
  "include/capnp/capability.h",
  "include/capnp/common.h",
  "include/capnp/dynamic.h",
  "include/capnp/endian.h",
  "include/capnp/ez-rpc.h",
  "include/capnp/generated-header-support.h",
  "include/capnp/layout.h",
  "include/capnp/list.h",
  "include/capnp/message.h",
  "include/capnp/orphan.h",
  "include/capnp/persistent.capnp",
  "include/capnp/persistent.capnp.h",
  "include/capnp/pointer-helpers.h",
  "include/capnp/pretty-print.h",
  "include/capnp/rpc-prelude.h",
  "include/capnp/rpc-twoparty.capnp",
  "include/capnp/rpc-twoparty.capnp.h",
  "include/capnp/rpc-twoparty.h",
  "include/capnp/rpc.capnp",
  "include/capnp/rpc.capnp.h",
  "include/capnp/rpc.h",
  "include/capnp/schema-lite.h",
  "include/capnp/schema-loader.h",
  "include/capnp/schema-parser.h",
  "include/capnp/schema.capnp",
  "include/capnp/schema.capnp.h",
  "include/capnp/schema.h",
  "include/capnp/serialize-async.h",
  "include/capnp/serialize-packed.h",
  "include/capnp/serialize.h",
  "include/kj/arena.h",
  "include/kj/array.h",
  "include/kj/async-inl.h",
  "include/kj/async-io.h",
  "include/kj/async-prelude.h",
  "include/kj/async-unix.h",
  "include/kj/async.h",
  "include/kj/common.h",
  "include/kj/debug.h",
  "include/kj/exception.h",
  "include/kj/function.h",
  "include/kj/io.h",
  "include/kj/main.h",
  "include/kj/memory.h",
  "include/kj/miniposix.h",
  "include/kj/mutex.h",
  "include/kj/one-of.h",
  "include/kj/parse/char.h",
  "include/kj/parse/common.h",
  "include/kj/refcount.h",
  "include/kj/std/iostream.h",
  "include/kj/string-tree.h",
  "include/kj/string.h",
  "include/kj/thread.h",
  "include/kj/threadlocal.h",
  "include/kj/time.h",
  "include/kj/tuple.h",
  "include/kj/units.h",
  "include/kj/vector.h",
  "include/kj/windows-sanity.h",
  "lib/libcapnp-rpc.a",
  "lib/libcapnp.a",
  "lib/libcapnpc.a",
  "lib/libkj-async.a",
  "lib/libkj.a",
  "lib/pkgconfig/capnp-rpc.pc",
  "lib/pkgconfig/capnp.pc"
 ],
 "index": {
  "arch": "x86_64",
  "build": "0",
  "build_number": 0,
  "depends": [],
  "license": "MIT",
  "name": "capnproto",
  "platform": "linux",
  "subdir": "linux-64",
  "version": "0.5.3"
 },
 "metadata_version": 1,
 "name": "capnproto",
 "raw_recipe": "{% set version = \"0.5.3\" %}\n\npackage:\n  name: capnproto\n  version: {{ version }}\n\nsource:\n  fn: v{{ version }}.tar.gz\n  url: https://github.com/sandstorm-io/capnproto/archive/v{{ version }}.tar.gz\n  md5: 909bd13ad6b8bc840ac78ab8f5bcb0a4\n\nbuild:\n  number: 0\n  skip: True  # [win and py<35]\n  features:\n    - vc14  # [win and py35]\n\nrequirements:\n  build:\n    # Python dependency is a workaround which is required when using features:\n    # https://github.com/conda-forge/staged-recipes/wiki/VC-features\n    - python  # [win]\n    - cmake\n  run:\n\ntest:\n  requires:\n    # Python dependency is a workaround which is required when using features:\n    # https://github.com/conda-forge/staged-recipes/wiki/VC-features\n    - python 3.5.*  # [win and py35]\n  commands:\n    # NOTE: There are no executables on Windows in Lite mode\n    - capnp --help  # [unix]\n    - capnpc --help  # [unix]\n    - capnpc-c++ --help  # [unix]\n    - capnpc-capnp --help  # [unix]\n\n    - test -d \"$PREFIX/include/capnp\"  # [unix]\n    - if not exist %LIBRARY_INC%\\\\capnp exit 1  # [win]\n\n    - test -f \"$PREFIX/lib/libcapnp.a\"  # [unix]\n    - test -f \"$PREFIX/lib/libcapnpc.a\"  # [unix]\n    - test -f \"$PREFIX/lib/libcapnp-rpc.a\"  # [unix]\n    - test -f \"$PREFIX/lib/libkj.a\"  # [unix]\n    - test -f \"$PREFIX/lib/libkj-async.a\"  # [unix]\n    - if not exist %LIBRARY_LIB%\\\\capnp.lib exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\kj.lib exit 1  # [win]\n\nabout:\n  home: http://capnproto.org\n  license: MIT\n  summary: An insanely fast data interchange format and capability-based RPC system.\n\nextra:\n  recipe-maintainers:\n    - frol\n",
 "rendered_recipe": {},
 "version": "0.5.3"
}