{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge/linux-64",
   "https://conda.anaconda.org/conda-forge/noarch",
   "https://repo.continuum.io/pkgs/free/linux-64",
   "https://repo.continuum.io/pkgs/free/noarch",
   "https://repo.continuum.io/pkgs/pro/linux-64",
   "https://repo.continuum.io/pkgs/pro/noarch"
  ],
  "conda_build_version": "2.1.0",
  "conda_env_version": "4.2.13",
  "conda_private": false,
  "conda_version": "4.2.13",
  "description": "mpiFFT4py performs FFTs in parallel in Python. It is developed to be able\nto do FFTs in parallel on a three-dimensional computational box\n(a structured grid), but there are also routines for doing the FFTs on a\n2D mesh. It implements both the slab and the pencil decompositions.\n",
  "env_vars": {
   "CIO_TEST": "<not set>",
   "CONDA_DEFAULT_ENV": "root",
   "CONDA_ENVS_PATH": "<not set>",
   "LD_LIBRARY_PATH": "/opt/rh/devtoolset-2/root/usr/lib64:/opt/rh/devtoolset-2/root/usr/lib",
   "PATH": "/opt/conda/bin:/opt/rh/devtoolset-2/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/bin",
   "PYTHONHOME": "<not set>",
   "PYTHONPATH": "/opt/rh/devtoolset-2/root/usr/lib64/python2.6/site-packages:/opt/rh/devtoolset-2/root/usr/lib/python2.6/site-packages"
  },
  "home": "https://github.com/spectralDNS/mpiFFT4py",
  "license": "LGPL-3.0",
  "offline": false,
  "root_pkgs": [
   "conda-forge::anaconda-client-1.5.1-py35_0",
   "conda-forge::ca-certificates-2016.9.26-0",
   "conda-forge::certifi-2016.9.26-py35_0",
   "conda-forge::clyent-1.2.1-py35_0",
   "conda-forge::conda-4.2.13-py35_0",
   "conda-build-2.1.0-py35_0",
   "conda-forge::conda-env-2.6.0-0",
   "conda-forge::conda-forge-build-setup-4.2.0-0",
   "conda-verify-2.0.0-py35_0",
   "conda-forge::curl-7.49.1-2",
   "conda-forge::expat-2.1.0-2",
   "conda-forge::filelock-2.0.6-py35_0",
   "conda-forge::git-2.8.2-4",
   "conda-forge::jinja2-2.8-py35_1",
   "conda-forge::libiconv-1.14-4",
   "conda-forge::markupsafe-0.23-py35_0",
   "conda-forge::ncurses-5.9-10",
   "conda-forge::obvious-ci-0.6.1-py35_1",
   "conda-forge::openssl-1.0.2h-3",
   "conda-forge::patchelf-0.9-1",
   "conda-forge::pip-9.0.1-py35_0",
   "conda-forge::pkginfo-1.2.1-py35_0",
   "conda-forge::pycosat-0.6.1-py35_0",
   "conda-forge::pycrypto-2.6.1-py35_0",
   "conda-forge::python-3.5.2-3",
   "conda-forge::python-dateutil-2.6.0-py35_0",
   "conda-forge::pytz-2016.10-py35_0",
   "conda-forge::pyyaml-3.11-py35_0",
   "conda-forge::readline-6.2-0",
   "conda-forge::requests-2.12.4-py35_0",
   "ruamel_yaml-0.11.14-py35_0",
   "conda-forge::setuptools-32.3.0-py35_0",
   "conda-forge::six-1.10.0-py35_1",
   "conda-forge::sqlite-3.13.0-1",
   "conda-forge::tk-8.5.19-1",
   "conda-forge::wheel-0.29.0-py35_0",
   "conda-forge::xz-5.2.2-0",
   "conda-forge::yaml-0.1.6-0",
   "conda-forge::zlib-1.2.8-3"
  ],
  "summary": "Parallel FFT in 3D or 2D using MPI for Python. Slab or pencil decomposition possible in 3D."
 },
 "conda_build_config": {},
 "files": [
  "lib/python3.4/site-packages/mpiFFT4py/__init__.py",
  "lib/python3.4/site-packages/mpiFFT4py/pencil.py",
  "lib/python3.4/site-packages/mpiFFT4py/slab.py",
  "lib/python3.4/site-packages/mpiFFT4py/line.py",
  "lib/python3.4/site-packages/mpiFFT4py/serialFFT/pyfftw_fft.py",
  "lib/python3.4/site-packages/mpiFFT4py/serialFFT/__init__.py",
  "lib/python3.4/site-packages/mpiFFT4py-1.0-py3.4.egg-info",
  "lib/python3.4/site-packages/mpiFFT4py/mpibase.py",
  "lib/python3.4/site-packages/mpiFFT4py/cython/maths.cpython-34m.so",
  "lib/python3.4/site-packages/mpiFFT4py/cython/__init__.py",
  "lib/python3.4/site-packages/mpiFFT4py/serialFFT/numpy_fft.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "np110py34_2",
  "build_number": 2,
  "depends": [
   "cython",
   "mpi4py",
   "numpy 1.10*",
   "pyfftw",
   "python 3.4*",
   "scipy"
  ],
  "license": "LGPL-3.0",
  "name": "mpifft4py",
  "platform": "linux",
  "subdir": "linux-64",
  "version": "1.0"
 },
 "metadata_version": 1,
 "name": "mpifft4py",
 "raw_recipe": "{% set name = \"mpiFFT4py\" %}\n{% set version = \"1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/spectralDNS/{{ name }}/archive/{{ name }}-{{ version }}.tar.gz\n  sha256: 875fcae6df37dfb1929490e73eb58d79fd0edb9b1a823eda80838af51fb1fd15\n\nbuild:\n  skip: true  # [win]\n  number: 2\n\nrequirements:\n  build:\n    - toolchain\n    - python\n    - cython\n    - numpy x.x\n\n  run:\n    - python\n    - numpy x.x\n    - scipy\n    - mpi4py\n    - cython\n    - pyfftw\n\ntest:\n  source_files:\n    - tests\n\n  requires:\n    - pytest\n\n  imports:\n    - mpiFFT4py\n\nabout:\n  home: https://github.com/spectralDNS/mpiFFT4py\n  license: LGPL-3.0\n  license_file: LICENSE\n  summary: 'Parallel FFT in 3D or 2D using MPI for Python. Slab or pencil decomposition possible in 3D.'\n  description: |\n    mpiFFT4py performs FFTs in parallel in Python. It is developed to be able\n    to do FFTs in parallel on a three-dimensional computational box\n    (a structured grid), but there are also routines for doing the FFTs on a\n    2D mesh. It implements both the slab and the pencil decompositions.\n\nextra:\n  recipe-maintainers:\n    - mikaem\n",
 "rendered_recipe": {
  "about": {
   "description": "mpiFFT4py performs FFTs in parallel in Python. It is developed to be able\nto do FFTs in parallel on a three-dimensional computational box\n(a structured grid), but there are also routines for doing the FFTs on a\n2D mesh. It implements both the slab and the pencil decompositions.\n",
   "home": "https://github.com/spectralDNS/mpiFFT4py",
   "license": "LGPL-3.0",
   "license_file": "LICENSE",
   "summary": "Parallel FFT in 3D or 2D using MPI for Python. Slab or pencil decomposition possible in 3D."
  },
  "build": {
   "number": "2",
   "string": "np110py34_2"
  },
  "extra": {
   "recipe-maintainers": [
    "mikaem"
   ]
  },
  "package": {
   "name": "mpifft4py",
   "version": "1.0"
  },
  "requirements": {
   "build": [],
   "run": [
    "python",
    "numpy x.x",
    "scipy",
    "mpi4py",
    "cython",
    "pyfftw"
   ]
  },
  "source": {
   "fn": "mpiFFT4py-1.0.tar.gz",
   "sha256": "875fcae6df37dfb1929490e73eb58d79fd0edb9b1a823eda80838af51fb1fd15",
   "url": "https://github.com/spectralDNS/mpiFFT4py/archive/mpiFFT4py-1.0.tar.gz"
  },
  "test": {
   "imports": [
    "mpiFFT4py"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "tests"
   ]
  }
 },
 "version": "1.0"
}