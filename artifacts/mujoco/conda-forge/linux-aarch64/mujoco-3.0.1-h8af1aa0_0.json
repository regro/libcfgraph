{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.27.0",
  "conda_version": "23.10.0",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "flow_run_id": "azure_20231121.2.1",
   "recipe-maintainers": [
    "traversaro"
   ],
   "remote_url": "https://github.com/conda-forge/mujoco-feedstock",
   "sha": "87c074713157c6d7a8097e01a835b8182a544e8c"
  },
  "home": "https://github.com/deepmind/mujoco",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_file": [
   "LICENSE",
   "build/_deps/tinyobjloader-src/LICENSE",
   "build/_deps/sdflib-src/LICENSE"
  ],
  "root_pkgs": [
   "pyyaml 6.0.1 py310h2372a71_1",
   "jsonschema 4.20.0 pyhd8ed1ab_0",
   "conda-index 0.3.0 pyhd8ed1ab_1",
   "libwebp-base 1.3.2 hd590300_0",
   "mamba 1.5.3 py310h51d5547_2",
   "certifi 2023.11.17 pyhd8ed1ab_0",
   "archspec 0.2.2 pyhd8ed1ab_0",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "xorg-libxdmcp 1.1.3 h7f98852_0",
   "click 8.1.7 unix_pyh707e725_0",
   "idna 3.4 pyhd8ed1ab_0",
   "conda 23.10.0 py310hff52083_1",
   "icu 73.2 h59595ed_0",
   "pip 23.3.1 pyhd8ed1ab_0",
   "pthread-stubs 0.4 h36c2ea0_1001",
   "zstd 1.5.5 hfc55251_0",
   "pillow 10.1.0 py310h01dd4db_0",
   "libgcc-ng 13.2.0 h807b86a_3",
   "libffi 3.4.2 h7f98852_5",
   "conda-libmamba-solver 23.11.1 pyhd8ed1ab_0",
   "traitlets 5.13.0 pyhd8ed1ab_0",
   "git 2.42.0 pl5321h86e50cf_0",
   "jupyter_core 5.5.0 py310hff52083_0",
   "tini 0.19.0 h166bdaf_1",
   "libnsl 2.0.1 hd590300_0",
   "psutil 5.9.5 py310h2372a71_1",
   "libmambapy 1.5.3 py310h39ff949_2",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "pcre2 10.40 hc3806b6_0",
   "libtiff 4.6.0 ha9c0a0a_2",
   "conda-build 3.27.0 py310hff52083_0",
   "libcurl 8.4.0 hca28451_0",
   "krb5 1.21.2 h659d440_0",
   "pyopenssl 23.3.0 pyhd8ed1ab_0",
   "requests 2.31.0 pyhd8ed1ab_0",
   "conda-pack 0.7.1 pyhd8ed1ab_0",
   "clyent 1.2.2 pyhd8ed1ab_2",
   "xorg-libxau 1.0.11 hd590300_0",
   "tqdm 4.66.1 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "libxcb 1.15 h0b41bf4_0",
   "soupsieve 2.5 pyhd8ed1ab_1",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "tornado 6.3.3 py310h2372a71_1",
   "wheel 0.41.3 pyhd8ed1ab_0",
   "ripgrep 13.0.0 he8a937b_3",
   "libsqlite 3.44.0 h2797004_0",
   "six 1.16.0 pyh6c4a22f_0",
   "conda-package-streaming 0.9.0 pyhd8ed1ab_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "python_abi 3.10 4_cp310",
   "libev 4.33 h516909a_1",
   "libuuid 2.38.1 h0b41bf4_0",
   "tzdata 2023c h71feb2d_0",
   "patchelf 0.17.2 h58526e2_0",
   "pluggy 1.3.0 pyhd8ed1ab_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "keyutils 1.6.1 h166bdaf_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "jsonpatch 1.33 pyhd8ed1ab_0",
   "gettext 0.21.1 h27087fc_0",
   "openssl 3.1.4 hd590300_0",
   "yaml 0.2.5 h7f98852_2",
   "rpds-py 0.13.0 py310hcb5633a_0",
   "ld_impl_linux-64 2.40 h41732ed_0",
   "patch 2.7.6 h7f98852_1002",
   "packaging 23.2 pyhd8ed1ab_0",
   "libarchive 3.7.2 h039dbb9_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "yaml-cpp 0.8.0 h59595ed_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "libsolv 0.7.26 hfc55251_0",
   "perl 5.32.1 4_hd590300_perl5",
   "libmamba 1.5.3 had39da4_2",
   "nbformat 5.9.2 pyhd8ed1ab_0",
   "jsonpointer 2.4 py310hff52083_3",
   "reproc 14.2.4.post0 hd590300_1",
   "charset-normalizer 3.3.2 pyhd8ed1ab_0",
   "referencing 0.31.0 pyhd8ed1ab_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "setuptools 68.2.2 pyhd8ed1ab_0",
   "more-itertools 10.1.0 pyhd8ed1ab_0",
   "xz 5.2.6 h166bdaf_0",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "cffi 1.16.0 py310h2fee648_0",
   "_openmp_mutex 4.5 2_gnu",
   "ruamel.yaml 0.18.5 py310h2372a71_0",
   "attrs 23.1.0 pyh71513ae_1",
   "chardet 5.2.0 py310hff52083_1",
   "libjpeg-turbo 3.0.0 hd590300_1",
   "py-lief 0.12.3 py310hd8f1fbe_0",
   "libstdcxx-ng 13.2.0 h7e041cc_3",
   "libexpat 2.5.0 hcb278e6_1",
   "python-fastjsonschema 2.19.0 pyhd8ed1ab_0",
   "pycosat 0.6.6 py310h2372a71_0",
   "cryptography 41.0.5 py310h75e40e8_0",
   "libzlib 1.2.13 hd590300_5",
   "lerc 4.0.0 h27087fc_0",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "libxml2 2.11.6 h232c23b_0",
   "bzip2 1.0.8 hd590300_5",
   "markupsafe 2.1.3 py310h2372a71_1",
   "su-exec 0.2 h166bdaf_1003",
   "c-ares 1.21.0 hd590300_0",
   "conda-package-handling 2.2.0 pyh38be061_0",
   "ca-certificates 2023.11.17 hbcca054_0",
   "filelock 3.13.1 pyhd8ed1ab_0",
   "python 3.10.13 hd12c33a_0_cpython",
   "libssh2 1.11.0 h0841786_0",
   "lcms2 2.15 hb7c19ff_3",
   "zstandard 0.22.0 py310h1275a96_0",
   "ruamel_yaml 0.15.80 py310h2372a71_1009",
   "libiconv 1.17 h166bdaf_0",
   "freetype 2.12.1 h267a509_2",
   "ruamel.yaml.clib 0.2.7 py310h2372a71_2",
   "tk 8.6.13 noxft_h4845f30_101",
   "libnghttp2 1.58.0 h47da74e_0",
   "zipp 3.17.0 pyhd8ed1ab_0",
   "typing_extensions 4.8.0 pyha770c72_0",
   "readline 8.2 h8228510_1",
   "python-libarchive-c 5.0 py310hff52083_2",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "platformdirs 4.0.0 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "libgomp 13.2.0 h807b86a_3",
   "importlib_resources 6.1.1 pyhd8ed1ab_0",
   "ncurses 6.4 h59595ed_2",
   "curl 8.4.0 hca28451_0",
   "libdeflate 1.19 hd590300_0",
   "pytz 2023.3.post1 pyhd8ed1ab_0",
   "jsonschema-specifications 2023.11.1 pyhd8ed1ab_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_1",
   "liblief 0.12.3 h27087fc_0",
   "libpng 1.6.39 h753d276_0",
   "anaconda-client 1.12.1 pyhd8ed1ab_1",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "reproc-cpp 14.2.4.post0 h59595ed_1",
   "truststore 0.8.0 pyhd8ed1ab_0",
   "openjpeg 2.5.0 h488ebb8_3",
   "lz4-c 1.9.4 hcb278e6_0",
   "fmt 10.1.1 h00ab1b0_0",
   "brotli-python 1.1.0 py310hc6cd4ac_1",
   "lzo 2.10 h516909a_1000",
   "urllib3 2.1.0 pyhd8ed1ab_0",
   "conda-forge-ci-setup 4.1.0 py310h7a2d8a0_100",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "oniguruma 6.9.9 hd590300_0",
   "typing-extensions 4.8.0 hd8ed1ab_0",
   "conda-forge-metadata 0.6.1 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "Multi-Joint dynamics with Contact. A general purpose multi-body dynamics simulator.",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "azure",
  "CMAKE_CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "build_platform": "linux-64",
  "c_compiler": "gcc",
  "c_compiler_version": "12",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "12",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_build_only_deps",
   "ignore_version",
   "extend_keys",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "libabseil": "20230802",
  "lua": "5",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "pybind11_abi": "4",
  "python": "3.10.* *_cpython",
  "python_impl": "cpython",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "tinyxml2": "9",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ],
   [
    "python",
    "numpy",
    "python_impl"
   ]
  ]
 },
 "conda_pkg_format": "2",
 "files": [],
 "index": {
  "arch": "aarch64",
  "build": "h8af1aa0_0",
  "build_number": 0,
  "depends": [
   "libmujoco 3.0.1 hd36c843_0",
   "mujoco-python >=3.0.1,<3.0.2.0a0"
  ],
  "license": "Apache-2.0",
  "name": "mujoco",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1700590473424,
  "version": "3.0.1"
 },
 "metadata_version": 1,
 "name": "mujoco",
 "raw_recipe": "{% set name = \"mujoco\" %}\n{% set namecxx = \"libmujoco\" %}\n{% set namepython = \"mujoco-python\" %}\n{% set version = \"3.0.1\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/deepmind/mujoco/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 54fb3b5d2aaa068a5853b1384df0ff3d4eab45cc2fc958e82229979451299a45\n  patches:\n    - python_remove_avx.patch\n    - cxx_devendor.patch\n    - python_devendor.patch\n    - ccd_vec3_origin_link_problem.patch\n    - disable_copy_cxx_files_in_python_package.patch\n    - do_not_install_via_pip.patch\n    - unvendor_simulate.patch\n    - workaround_cmake_19072.patch\n    - 619bis.patch\n    - simulate_unvendor_lodepng.patch\n    - disable-isolation-and-dep-check-python-build.patch\n\nbuild:\n  # See https://github.com/conda-forge/mujoco-feedstock/issues/22\n  skip: true  # [(aarch64 or ppc64le or osx) and python_impl == 'pypy']\n  number: 0\n\noutputs:\n  - name: {{ namecxx }}\n    script: build_cxx.sh  # [unix]\n    script: bld_cxx.bat  # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage(namecxx, max_pin='x.x.x') }}\n      # libabseil is used only for tests, we can \n      # safely ignore its run_exports\n      ignore_run_exports:\n        - libabseil\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - make                                   # [not win]\n        - ninja\n        - clang 16.*                             # [win]\n        - lld 16.*                               # [win]\n        # This provides llvm-lib that is used during the linking\n        - llvm-tools 16.*                        # [win]\n      host:\n        - eigen\n        - qhull\n        - tinyxml2\n        - libccd-double\n        - libabseil\n        - lodepng\n      run:\n        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx and x86_64]\n      run_constrained:\n        # Older version of this package were named mujoco-cxx, we want to avoid that they are installed\n        - mujoco-cxx <0\n\n    test:\n      commands:\n        - test -f ${PREFIX}/include/mujoco/mujoco.h  # [not win]\n        - test -f ${PREFIX}/lib/libmujoco${SHLIB_EXT}  # [unix]\n        - test -f ${PREFIX}/bin/mujoco_plugin/libelasticity${SHLIB_EXT}  # [unix]\n        - test -f ${PREFIX}/bin/mujoco_plugin/libsensor${SHLIB_EXT}  # [unix]\n        - test -f ${PREFIX}/bin/mujoco_plugin/libsdf${SHLIB_EXT}  # [unix]\n        - if not exist %LIBRARY_INC%\\\\mujoco\\\\mujoco.h exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\\\mujoco.lib exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\\\mujoco.dll exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\\\mujoco_plugin\\\\elasticity.dll exit 1  # [win]\n        - if exist %LIBRARY_BIN%\\\\mujoco_plugin\\\\elasticity.lib exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\\\mujoco_plugin\\\\sensor.dll exit 1  # [win]\n        - if exist %LIBRARY_BIN%\\\\mujoco_plugin\\\\sensor.lib exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\\\mujoco_plugin\\\\sdf.dll exit 1  # [win]\n        - if exist %LIBRARY_BIN%\\\\mujoco_plugin\\\\sdf.lib exit 1  # [win]\n\n  - name: {{ namepython }}\n    script: build_py.sh  # [unix]\n    script: bld_py.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - make                                   # [not win]\n        - ninja                                  # [win]\n        - cmake\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - pip                                    # [build_platform != target_platform]\n        - setuptools                             # [build_platform != target_platform]\n        - python-build                           # [build_platform != target_platform]\n        - virtualenv                             # [build_platform != target_platform]\n        - absl-py                                # [build_platform != target_platform]\n        - clang 16.*                             # [win]\n        - lld 16.*                               # [win]\n        # This provides llvm-lib that is used during the linking\n        - llvm-tools 16.*                        # [win]\n        - bash                                   # [not win]\n        - posix                                  # [win]\n        - {{ cdt('mesa-libgl-devel') }}  # [linux]\n        - {{ cdt('mesa-dri-drivers') }}  # [linux]\n        - {{ cdt('libselinux') }}  # [linux]\n        - {{ cdt('libxdamage') }}  # [linux]\n        - {{ cdt('libxxf86vm') }}  # [linux]\n        - {{ cdt('libxext') }}     # [linux]\n      host:\n        - {{ pin_subpackage(namecxx, exact=True) }}\n        - eigen\n        - libabseil\n        - lodepng\n        - python\n        - pip\n        - setuptools\n        - python-build\n        - virtualenv\n        - pybind11\n        - pybind11-abi\n        - numpy\n        - absl-py\n        - glfw\n        - pyglfw\n        - pyopengl\n        - xorg-libxfixes  # [linux]\n      run:\n        - {{ pin_subpackage(namecxx, exact=True) }}\n        - python\n        - numpy\n        - absl-py\n        - pyglfw\n        - pyopengl\n        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx and x86_64]\n        # Transitive dependencies of etils[epath], not directly available on conda-forge\n        - etils  # [py!=38]\n        # Workaround for https://github.com/conda-forge/mujoco-feedstock/pull/32#issuecomment-1821254102\n        - etils <=1.3.0  # [py==38]\n        - fsspec\n        - importlib_resources\n        - typing_extensions\n        - zipp\n    test:\n      imports:\n        - mujoco\n      requires:\n        - pytest\n        - pip\n      commands:\n        - pytest --pyargs mujoco -v -k \"not render\"\n        - pip check\n\n  - name: mujoco-mjx\n    build:\n      noarch: python\n      # Skip platforms for which jax is not available\n      # note that this only influences tests, in the end the package is noarch\n      # so only one package will be uploaded, and can be installed on any platform,\n      # as soon as the dependencies become available\n      skip: true  # [python_impl == 'pypy']\n      skip: true  # [win]\n      skip: true  # [ppc64le]\n      # Skip platforms for which for some reason the test is failing for not finding mujoco-python,\n      # even if it the mujoco-python was just build\n      skip: true  # [arm64]\n      skip: true  # [aarch64]\n      script: python -m pip install ./mjx/ --no-deps -vv\n    requirements:\n      host:\n        - pip\n        - python >=3.7\n      run:\n        # jax minimum version based on ./mjx/requirements.txt file\n        - jaxlib >=0.4.13\n        - jax >=0.4.13\n        - absl-py\n        - scipy\n        - trimesh\n        - mujoco-python >={{ version }}\n        # Transitive dependencies of etils[epath], not directly available on conda-forge\n        - etils\n        - fsspec\n        - importlib_resources\n        - typing_extensions\n        - zipp\n    test:\n      imports:\n        - mujoco.mjx\n      requires:\n        - pip\n        - pytest\n      commands:\n        - pip check\n        # Skipping test_box_box as it also fails upstream https://github.com/conda-forge/mujoco-feedstock/pull/31#issuecomment-1770520403\n        # Skipping test_collision_driver tests to speed up the tests and as some integration tests make the remote runner crash/hang\n        - pytest --pyargs mujoco.mjx -v -k \"not (test_collision_driver or test_box_box)\"\n\n  - name: {{ name }}\n    requirements:\n      run:\n        - {{ pin_subpackage(namecxx, exact=True) }}\n        - {{ pin_subpackage(namepython, max_pin='x.x.x') }}\n    test:\n      imports:\n        - mujoco\n\nabout:\n  home: https://github.com/deepmind/mujoco\n  license: Apache-2.0\n  license_file:\n    - LICENSE\n    - build/_deps/tinyobjloader-src/LICENSE\n    - build/_deps/sdflib-src/LICENSE\n  summary: Multi-Joint dynamics with Contact. A general purpose multi-body dynamics simulator.\n\nextra:\n  recipe-maintainers:\n    - traversaro\n",
 "rendered_recipe": {
  "about": {
   "home": "https://github.com/deepmind/mujoco",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "build/_deps/sdflib-src/LICENSE",
    "build/_deps/tinyobjloader-src/LICENSE"
   ],
   "summary": "Multi-Joint dynamics with Contact. A general purpose multi-body dynamics simulator."
  },
  "build": {
   "number": "0",
   "string": "h8af1aa0_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "flow_run_id": "azure_20231121.2.1",
   "recipe-maintainers": [
    "traversaro"
   ],
   "remote_url": "https://github.com/conda-forge/mujoco-feedstock",
   "sha": "87c074713157c6d7a8097e01a835b8182a544e8c"
  },
  "package": {
   "name": "mujoco",
   "version": "3.0.1"
  },
  "requirements": {
   "build": [],
   "run": [
    "libmujoco 3.0.1 hd36c843_0",
    "mujoco-python >=3.0.1,<3.0.2.0a0"
   ]
  },
  "source": {
   "patches": [
    "619bis.patch",
    "ccd_vec3_origin_link_problem.patch",
    "cxx_devendor.patch",
    "disable-isolation-and-dep-check-python-build.patch",
    "disable_copy_cxx_files_in_python_package.patch",
    "do_not_install_via_pip.patch",
    "python_devendor.patch",
    "python_remove_avx.patch",
    "simulate_unvendor_lodepng.patch",
    "unvendor_simulate.patch",
    "workaround_cmake_19072.patch"
   ],
   "sha256": "54fb3b5d2aaa068a5853b1384df0ff3d4eab45cc2fc958e82229979451299a45",
   "url": "https://github.com/deepmind/mujoco/archive/refs/tags/3.0.1.tar.gz"
  }
 },
 "version": "3.0.1"
}