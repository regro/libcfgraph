{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge/linux-64",
   "https://conda.anaconda.org/conda-forge/noarch",
   "https://repo.continuum.io/pkgs/free/linux-64",
   "https://repo.continuum.io/pkgs/free/noarch",
   "https://repo.continuum.io/pkgs/pro/linux-64",
   "https://repo.continuum.io/pkgs/pro/noarch"
  ],
  "conda_build_version": "2.1.9",
  "conda_env_version": "4.2.13",
  "conda_private": false,
  "conda_version": "4.2.13",
  "dev_url": "https://github.com/ELEKTRONN/ELEKTRONN",
  "doc_url": "http://elektronn.org/documentation/",
  "env_vars": {
   "CIO_TEST": "<not set>",
   "CONDA_DEFAULT_ENV": "root",
   "CONDA_ENVS_PATH": "<not set>",
   "LD_LIBRARY_PATH": "/opt/rh/devtoolset-2/root/usr/lib64:/opt/rh/devtoolset-2/root/usr/lib",
   "PATH": "/opt/conda/bin:/opt/rh/devtoolset-2/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/bin",
   "PYTHONHOME": "<not set>",
   "PYTHONPATH": "/opt/rh/devtoolset-2/root/usr/lib64/python2.6/site-packages:/opt/rh/devtoolset-2/root/usr/lib/python2.6/site-packages"
  },
  "home": "http://www.elektronn.org/",
  "license": "GPLv3",
  "offline": false,
  "root_pkgs": [
   "conda-forge::anaconda-client-1.5.1-py35_0",
   "conda-forge::beautifulsoup4-4.5.3-py35_0",
   "conda-forge::ca-certificates-2017.1.23-0",
   "conda-forge::certifi-2017.1.23-py35_0",
   "conda-forge::chardet-2.3.0-py35_0",
   "conda-forge::clyent-1.2.1-py35_0",
   "conda-forge::conda-4.2.13-py35_0",
   "conda-forge::conda-build-2.1.9-py35_0",
   "conda-forge::conda-env-2.6.0-0",
   "conda-forge::conda-forge-build-setup-4.4.4-0",
   "conda-forge::conda-verify-2.0.0-py35_0",
   "conda-forge::curl-7.52.1-0",
   "conda-forge::expat-2.1.0-2",
   "conda-forge::filelock-2.0.6-py35_0",
   "conda-forge::git-2.12.2-4",
   "conda-forge::jinja2-2.9.5-py35_0",
   "conda-forge::libiconv-1.14-4",
   "conda-forge::markupsafe-0.23-py35_1",
   "conda-forge::ncurses-5.9-10",
   "conda-forge::obvious-ci-0.6.1-py35_2",
   "conda-forge::openssl-1.0.2h-3",
   "conda-forge::patchelf-0.9-1",
   "conda-forge::pip-9.0.1-py35_0",
   "conda-forge::pkginfo-1.2.1-py35_0",
   "conda-forge::pycosat-0.6.1-py35_0",
   "conda-forge::pycrypto-2.6.1-py35_0",
   "conda-forge::python-3.5.3-1",
   "conda-forge::python-dateutil-2.6.0-py35_0",
   "conda-forge::pytz-2016.10-py35_0",
   "conda-forge::pyyaml-3.12-py35_1",
   "conda-forge::readline-6.2-0",
   "conda-forge::requests-2.13.0-py35_0",
   "conda-forge::ruamel_yaml-0.11.14-py35_0",
   "conda-forge::setuptools-33.1.1-py35_0",
   "conda-forge::six-1.10.0-py35_1",
   "conda-forge::sqlite-3.13.0-1",
   "conda-forge::tk-8.5.19-1",
   "conda-forge::wheel-0.29.0-py35_0",
   "conda-forge::xz-5.2.2-0",
   "conda-forge::yaml-0.1.6-0",
   "conda-forge::zlib-1.2.11-0"
  ],
  "summary": "A highly configurable toolkit for training 3d/2d CNNs and general Neural Networks"
 },
 "conda_build_config": {},
 "files": [
  "lib/python2.7/site-packages/elektronn/net/pooling.py",
  "lib/python2.7/site-packages/elektronn/__init__.py",
  "lib/python2.7/site-packages/elektronn/examples/config_template.py",
  "lib/python2.7/site-packages/elektronn/training/trainer.py",
  "lib/python2.7/site-packages/elektronn/net/convnet.py",
  "lib/python2.7/site-packages/elektronn/training/parallelisation.py",
  "lib/python2.7/site-packages/elektronn/training/__init__.py",
  "bin/elektronn-profile",
  "lib/python2.7/site-packages/elektronn/net/gaborfilters.py",
  "lib/python2.7/site-packages/elektronn/examples/neuro_3d_config.py",
  "bin/elektronn-train",
  "lib/python2.7/site-packages/elektronn/examples/MNIST_MLP_config.py",
  "lib/python2.7/site-packages/elektronn/training/trainutils.py",
  "lib/python2.7/site-packages/elektronn/examples/MNIST_CNN_warp_config.py",
  "lib/python2.7/site-packages/elektronn/net/__init__.py",
  "lib/python2.7/site-packages/elektronn-1.0.13-py2.7.egg-info/PKG-INFO",
  "lib/python2.7/site-packages/elektronn/net/convlayer2d.py",
  "lib/python2.7/site-packages/elektronn/training/predictor.py",
  "lib/python2.7/site-packages/elektronn/training/warping.py",
  "lib/python2.7/site-packages/elektronn/examples/__init__.py",
  "lib/python2.7/site-packages/elektronn/net/netutils.py",
  "lib/python2.7/site-packages/elektronn/training/traindata.py",
  "lib/python2.7/site-packages/elektronn/utils.py",
  "lib/python2.7/site-packages/elektronn/net/convlayer3d.py",
  "lib/python2.7/site-packages/elektronn/examples/MNIST_Denoising_Autoencoder.py",
  "lib/python2.7/site-packages/elektronn/net/optimizer.py",
  "lib/python2.7/site-packages/elektronn/net/introspection.py",
  "lib/python2.7/site-packages/elektronn/training/config.py",
  "lib/python2.7/site-packages/elektronn/net/perceptronlayer.py",
  "lib/python2.7/site-packages/elektronn/net/netcreation.py",
  "lib/python2.7/site-packages/elektronn/examples/MNIST_CNN_standalone.py",
  "lib/python2.7/site-packages/elektronn/training/_warping.so",
  "lib/python2.7/site-packages/elektronn/examples/MNIST_CNN_standalone_Dropout.py",
  "lib/python2.7/site-packages/elektronn/training/CNNData.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py27_0",
  "build_number": 0,
  "depends": [
   "h5py",
   "matplotlib",
   "numpy",
   "python 2.7*",
   "scikit-learn <0.20",
   "scipy",
   "theano"
  ],
  "license": "GPLv3",
  "name": "elektronn",
  "platform": "linux",
  "subdir": "linux-64",
  "version": "1.0.13"
 },
 "metadata_version": 1,
 "name": "elektronn",
 "raw_recipe": "{% set name = \"elektronn\" %}\n{% set version = \"1.0.13\" %}\n{% set sha256 = \"e5ba5dd4c5333576dde668977b9cced446eab5fdd3219d91d75550d1e8d5e2fc\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.org/packages/source/e/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script: python setup.py install --single-version-externally-managed --record record.txt\n  skip: True  # [not linux64 or not py27]\n\nrequirements:\n  build:\n    - python\n    - setuptools\n    - cython\n    - toolchain\n\n  run:\n    - python\n    - h5py\n    - matplotlib\n    - numpy\n    - scikit-learn <0.20\n    - scipy\n    - theano\n\ntest:\n  imports:\n    - elektronn\n    - elektronn.net\n    - elektronn.net.convlayer3d\n    - elektronn.training\n    - elektronn.training.trainer\n    - elektronn.training.warping\n  commands:\n    - elektronn-train --help\n\nabout:\n  home: http://www.elektronn.org/\n  license: GPLv3\n  license_file: LICENSE.txt\n  summary: 'A highly configurable toolkit for training 3d/2d CNNs and general Neural Networks'\n  doc_url: http://elektronn.org/documentation/\n  dev_url: https://github.com/ELEKTRONN/ELEKTRONN\n\nextra:\n  recipe-maintainers:\n    - mdraw\n",
 "rendered_recipe": {
  "about": {
   "dev_url": "https://github.com/ELEKTRONN/ELEKTRONN",
   "doc_url": "http://elektronn.org/documentation/",
   "home": "http://www.elektronn.org/",
   "license": "GPLv3",
   "license_file": "LICENSE.txt",
   "summary": "A highly configurable toolkit for training 3d/2d CNNs and general Neural Networks"
  },
  "build": {
   "noarch": "",
   "noarch_python": false,
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "py27_0"
  },
  "extra": {
   "final": true,
   "recipe-maintainers": [
    "mdraw"
   ]
  },
  "package": {
   "name": "elektronn",
   "version": "1.0.13"
  },
  "requirements": {
   "build": [
    "setuptools 33.1.1 py27_0",
    "sqlite 3.13.0 1",
    "cython 0.25.2 py27_1",
    "tk 8.5.19 1",
    "certifi 2017.1.23 py27_0",
    "ncurses 5.9 10",
    "openssl 1.0.2h 3",
    "readline 6.2 0",
    "ca-certificates 2017.1.23 0",
    "toolchain 2.0.0 0",
    "zlib 1.2.11 0",
    "python 2.7.13 0"
   ],
   "run": [
    "python",
    "h5py",
    "matplotlib",
    "numpy",
    "scikit-learn <0.20",
    "scipy",
    "theano"
   ]
  },
  "source": {
   "fn": "elektronn-1.0.13.tar.gz",
   "sha256": "e5ba5dd4c5333576dde668977b9cced446eab5fdd3219d91d75550d1e8d5e2fc",
   "url": "https://pypi.org/packages/source/e/elektronn/elektronn-1.0.13.tar.gz"
  },
  "test": {
   "commands": [
    "elektronn-train --help"
   ],
   "imports": [
    "elektronn",
    "elektronn.net",
    "elektronn.net.convlayer3d",
    "elektronn.training",
    "elektronn.training.trainer",
    "elektronn.training.warping"
   ]
  }
 },
 "version": "1.0.13"
}