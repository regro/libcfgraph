{
 "about": {
  "description": "The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\nin a way that plugs easily into the existing scientific Python ecosystem\n(numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\na weather map, you need to: read data, calculate a derived field, and\nshow on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\nis to make it easier to use these routines for any meteorological Python\napplication; this means making it easy to pull out the LCL calculation\nand just use that, or re-use the Skew-T with your own data code. MetPy\nalso prides itself on being well-documented and well-tested, so that\non-going maintenance is easily manageable.\n",
  "dev_url": "https://github.com/Unidata/MetPy",
  "doc_url": "https://metpy.readthedocs.io",
  "home": "https://github.com/Unidata/MetPy",
  "license": "BSD 3-Clause",
  "license_family": "BSD",
  "summary": "MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data."
 },
 "conda_build_config": {},
 "files": [
  "lib/python2.7/site-packages/MetPy-0.4.2-py2.7.egg-info/PKG-INFO",
  "lib/python2.7/site-packages/MetPy-0.4.2-py2.7.egg-info/zip-safe",
  "lib/python2.7/site-packages/metpy/__init__.py",
  "lib/python2.7/site-packages/metpy/_version.py",
  "lib/python2.7/site-packages/metpy/calc/__init__.py",
  "lib/python2.7/site-packages/metpy/calc/basic.py",
  "lib/python2.7/site-packages/metpy/calc/kinematics.py",
  "lib/python2.7/site-packages/metpy/calc/thermo.py",
  "lib/python2.7/site-packages/metpy/calc/tools.py",
  "lib/python2.7/site-packages/metpy/calc/turbulence.py",
  "lib/python2.7/site-packages/metpy/cbook.py",
  "lib/python2.7/site-packages/metpy/constants.py",
  "lib/python2.7/site-packages/metpy/gridding/__init__.py",
  "lib/python2.7/site-packages/metpy/gridding/gridding_functions.py",
  "lib/python2.7/site-packages/metpy/gridding/interpolation.py",
  "lib/python2.7/site-packages/metpy/gridding/points.py",
  "lib/python2.7/site-packages/metpy/gridding/polygons.py",
  "lib/python2.7/site-packages/metpy/gridding/triangles.py",
  "lib/python2.7/site-packages/metpy/io/__init__.py",
  "lib/python2.7/site-packages/metpy/io/cdm.py",
  "lib/python2.7/site-packages/metpy/io/gini.py",
  "lib/python2.7/site-packages/metpy/io/nexrad.py",
  "lib/python2.7/site-packages/metpy/io/nexrad_msgs/__init__.py",
  "lib/python2.7/site-packages/metpy/io/nexrad_msgs/msg18.py",
  "lib/python2.7/site-packages/metpy/io/nexrad_msgs/msg3.py",
  "lib/python2.7/site-packages/metpy/io/nexrad_msgs/parse_spec.py",
  "lib/python2.7/site-packages/metpy/io/tools.py",
  "lib/python2.7/site-packages/metpy/io/upperair.py",
  "lib/python2.7/site-packages/metpy/package_tools.py",
  "lib/python2.7/site-packages/metpy/plots/__init__.py",
  "lib/python2.7/site-packages/metpy/plots/_mpl.py",
  "lib/python2.7/site-packages/metpy/plots/colortables/Carbone42.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/NWSReflectivity.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/NWSReflectivityExpanded.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/NWSSpectrumWidth.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/NWSVelocity.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/WVCIMSS.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/ir_bd.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/ir_drgb.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/ir_rgbv.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/ir_tpc.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/ir_tv1.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/rainbow.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/test.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/viridis.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/wv_tpc.tbl",
  "lib/python2.7/site-packages/metpy/plots/ctables.py",
  "lib/python2.7/site-packages/metpy/plots/fonts/wx_symbols.ttf",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/cc_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/et_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/hmc_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/kdp_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/lcr_tabl.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/ml_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/osw_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/precip_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/ref_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/ref_table8.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/spw_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/srm_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/ulr_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/vad_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/vel_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/vel_table8.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/vil_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/vwp_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/zdr_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/skewt.py",
  "lib/python2.7/site-packages/metpy/plots/station_plot.py",
  "lib/python2.7/site-packages/metpy/plots/util.py",
  "lib/python2.7/site-packages/metpy/plots/wx_symbols.py",
  "lib/python2.7/site-packages/metpy/testing.py",
  "lib/python2.7/site-packages/metpy/units.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py27_0",
  "build_number": 0,
  "depends": [
   "enum34",
   "matplotlib >=1.4.0",
   "numpy >=1.9.1",
   "pint >=0.7",
   "python 2.7*",
   "scipy >=0.13.3"
  ],
  "license": "BSD 3-Clause",
  "license_family": "BSD",
  "name": "metpy",
  "platform": "osx",
  "subdir": "osx-64",
  "version": "0.4.2"
 },
 "metadata_version": 1,
 "name": "metpy",
 "raw_recipe": "{% set name = \"MetPy\" %}\n{% set version = \"0.4.2\" %}\n{% set sha256 = \"2d3f3f8ab10bb19eb40253851bb697b6c4a6be8bf45e865001f48202e9dd953e\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{name}}-{{version}}.tar.gz\n  url: https://pypi.io/packages/source/{{name[0]}}/{{name}}/{{name}}-{{version}}.tar.gz\n  sha256: {{sha256}}\n\nbuild:\n    script: python setup.py install --single-version-externally-managed --record record.txt\n    number: 0\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n    - numpy >=1.9.1\n    - scipy >=0.13.3\n    - matplotlib >=1.4.0\n    - pint >=0.7\n    - enum34  # [py27]\n\ntest:\n  imports:\n    - metpy.calc\n    - metpy.plots\n    - metpy.io\n\nabout:\n  home: https://github.com/Unidata/MetPy\n  license: BSD 3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data.'\n  description: |\n    The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\n    in a way that plugs easily into the existing scientific Python ecosystem\n    (numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\n    a weather map, you need to: read data, calculate a derived field, and\n    show on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\n    is to make it easier to use these routines for any meteorological Python\n    application; this means making it easy to pull out the LCL calculation\n    and just use that, or re-use the Skew-T with your own data code. MetPy\n    also prides itself on being well-documented and well-tested, so that\n    on-going maintenance is easily manageable.\n  doc_url: https://metpy.readthedocs.io\n  dev_url: https://github.com/Unidata/MetPy\n\nextra:\n  recipe-maintainers:\n    - dopplershift\n",
 "rendered_recipe": {},
 "version": "0.4.2"
}