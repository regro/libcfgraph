{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge/osx-64",
   "https://conda.anaconda.org/conda-forge/noarch",
   "https://repo.continuum.io/pkgs/free/osx-64",
   "https://repo.continuum.io/pkgs/free/noarch",
   "https://repo.continuum.io/pkgs/pro/osx-64",
   "https://repo.continuum.io/pkgs/pro/noarch"
  ],
  "conda_build_version": "2.1.8",
  "conda_env_version": "4.2.13",
  "conda_private": false,
  "conda_version": "4.2.13",
  "description": "The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\nin a way that plugs easily into the existing scientific Python ecosystem\n(numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\na weather map, you need to: read data, calculate a derived field, and\nshow on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\nis to make it easier to use these routines for any meteorological Python\napplication; this means making it easy to pull out the LCL calculation\nand just use that, or re-use the Skew-T with your own data code. MetPy\nalso prides itself on being well-documented and well-tested, so that\non-going maintenance is easily manageable.\n",
  "dev_url": "https://github.com/Unidata/MetPy",
  "doc_url": "https://unidata.github.io/MetPy",
  "env_vars": {
   "CIO_TEST": "<not set>",
   "CONDA_DEFAULT_ENV": "root",
   "CONDA_ENVS_PATH": "<not set>",
   "DYLD_LIBRARY_PATH": "<not set>",
   "PATH": "/Users/travis/miniconda3/bin:/Users/travis/.rvm/gems/ruby-2.0.0-p643/bin:/Users/travis/.rvm/gems/ruby-2.0.0-p643@global/bin:/Users/travis/.rvm/rubies/ruby-2.0.0-p643/bin:/Users/travis/.rvm/bin:/Users/travis/bin:/Users/travis/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin",
   "PYTHONHOME": "<not set>",
   "PYTHONPATH": "<not set>"
  },
  "home": "https://github.com/Unidata/MetPy",
  "license": "BSD 3-Clause",
  "license_family": "BSD",
  "offline": false,
  "root_pkgs": [
   "anaconda-client-1.6.2-py36_0",
   "conda-forge::beautifulsoup4-4.5.3-py36_0",
   "cffi-1.9.1-py36_0",
   "conda-forge::chardet-2.3.0-py36_0",
   "conda-forge::clyent-1.2.1-py36_0",
   "conda-forge::conda-4.2.13-py36_0",
   "conda-forge::conda-build-2.1.8-py36_0",
   "conda-forge::conda-env-2.6.0-0",
   "conda-forge::conda-forge-build-setup-4.4.4-0",
   "conda-forge::conda-verify-2.0.0-py36_0",
   "cryptography-1.7.1-py36_0",
   "conda-forge::filelock-2.0.6-py36_0",
   "idna-2.2-py36_0",
   "conda-forge::jinja2-2.9.5-py36_0",
   "conda-forge::markupsafe-0.23-py36_1",
   "openssl-1.0.2k-0",
   "pip-9.0.1-py36_1",
   "conda-forge::pkginfo-1.2.1-py36_0",
   "pyasn1-0.1.9-py36_0",
   "pycosat-0.6.1-py36_1",
   "pycparser-2.17-py36_0",
   "pycrypto-2.6.1-py36_4",
   "pyopenssl-16.2.0-py36_0",
   "python-3.6.0-0",
   "conda-forge::python-dateutil-2.6.0-py36_0",
   "conda-forge::pytz-2016.10-py36_0",
   "conda-forge::pyyaml-3.12-py36_1",
   "readline-6.2-2",
   "requests-2.12.4-py36_0",
   "ruamel_yaml-0.11.14-py36_1",
   "setuptools-27.2.0-py36_0",
   "six-1.10.0-py36_0",
   "sqlite-3.13.0-0",
   "tk-8.5.18-0",
   "wheel-0.29.0-py36_0",
   "xz-5.2.2-1",
   "yaml-0.1.6-0",
   "zlib-1.2.8-3"
  ],
  "summary": "MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data."
 },
 "conda_build_config": {},
 "files": [
  "lib/python2.7/site-packages/metpy/gridding/points.py",
  "lib/python2.7/site-packages/metpy/plots/colortables/ir_rgbv.tbl",
  "lib/python2.7/site-packages/metpy/package_tools.py",
  "lib/python2.7/site-packages/metpy/calc/basic.py",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/zdr_table.tbl",
  "lib/python2.7/site-packages/metpy/io/_nexrad_msgs/parse_spec.py",
  "lib/python2.7/site-packages/metpy/cbook.py",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/vel_table8.tbl",
  "lib/python2.7/site-packages/metpy/plots/wx_symbols.py",
  "lib/python2.7/site-packages/metpy/io/gini.py",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/lcr_tabl.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/vwp_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/rainbow.tbl",
  "lib/python2.7/site-packages/metpy/io/__init__.py",
  "lib/python2.7/site-packages/metpy/calc/turbulence.py",
  "lib/python2.7/site-packages/metpy/plots/_mpl.py",
  "lib/python2.7/site-packages/metpy/gridding/polygons.py",
  "lib/python2.7/site-packages/metpy/testing.py",
  "lib/python2.7/site-packages/metpy/plots/colortables/NWSVelocity.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/NWS8bitVel.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/kdp_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/et_table.tbl",
  "lib/python2.7/site-packages/metpy/calc/kinematics.py",
  "lib/python2.7/site-packages/metpy/gridding/triangles.py",
  "lib/python2.7/site-packages/metpy/units.py",
  "lib/python2.7/site-packages/metpy/plots/colortables/NWSReflectivityExpanded.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/srm_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/ir_drgb.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/test.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/ulr_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/ir_tpc.tbl",
  "lib/python2.7/site-packages/metpy/gridding/__init__.py",
  "lib/python2.7/site-packages/metpy/calc/thermo.py",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/osw_table.tbl",
  "lib/python2.7/site-packages/metpy/gridding/gridding_functions.py",
  "lib/python2.7/site-packages/MetPy-0.5.0-py2.7.egg-info/PKG-INFO",
  "lib/python2.7/site-packages/metpy/plots/colortables/viridis.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/NWSSpectrumWidth.tbl",
  "lib/python2.7/site-packages/metpy/plots/skewt.py",
  "lib/python2.7/site-packages/metpy/io/_nexrad_msgs/msg3.py",
  "lib/python2.7/site-packages/metpy/_version.py",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/hmc_table.tbl",
  "lib/python2.7/site-packages/metpy/io/upperair.py",
  "lib/python2.7/site-packages/metpy/io/cdm.py",
  "lib/python2.7/site-packages/metpy/plots/colortables/Carbone42.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/vil_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/spw_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/ir_bd.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/wv_tpc.tbl",
  "lib/python2.7/site-packages/metpy/io/_nexrad_msgs/msg18.py",
  "lib/python2.7/site-packages/metpy/constants.py",
  "lib/python2.7/site-packages/metpy/plots/ctables.py",
  "lib/python2.7/site-packages/metpy/io/_tools.py",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/ref_table8.tbl",
  "lib/python2.7/site-packages/MetPy-0.5.0-py2.7.egg-info/zip-safe",
  "lib/python2.7/site-packages/metpy/gridding/interpolation.py",
  "lib/python2.7/site-packages/metpy/io/nexrad.py",
  "lib/python2.7/site-packages/metpy/calc/__init__.py",
  "lib/python2.7/site-packages/metpy/plots/colortables/NWSReflectivity.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/ir_tv1.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/ref_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/WVCIMSS.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/precip_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/__init__.py",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/vel_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/cc_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/_util.py",
  "lib/python2.7/site-packages/metpy/plots/station_plot.py",
  "lib/python2.7/site-packages/metpy/plots/fonts/wx_symbols.ttf",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/ml_table.tbl",
  "lib/python2.7/site-packages/metpy/plots/colortables/NWSStormClearReflectivity.tbl",
  "lib/python2.7/site-packages/metpy/__init__.py",
  "lib/python2.7/site-packages/metpy/calc/tools.py",
  "lib/python2.7/site-packages/metpy/io/_nexrad_msgs/__init__.py",
  "lib/python2.7/site-packages/metpy/plots/nexrad_tables/vad_table.tbl"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py27_0",
  "build_number": 0,
  "depends": [
   "enum34",
   "matplotlib >=1.4.0",
   "numpy >=1.9.1",
   "pint >=0.7",
   "pyproj >=1.9.4",
   "python 2.7*",
   "scipy >=0.14.0"
  ],
  "license": "BSD 3-Clause",
  "license_family": "BSD",
  "name": "metpy",
  "platform": "osx",
  "subdir": "osx-64",
  "version": "0.5.0"
 },
 "metadata_version": 1,
 "name": "metpy",
 "raw_recipe": "{% set name = \"MetPy\" %}\n{% set version = \"0.5.0\" %}\n{% set sha256 = \"3967bea9254f6fe268f7f74c2b506b8f730dab36017baafa0b6f3be02592984c\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{name}}-{{version}}.tar.gz\n  url: https://pypi.io/packages/source/{{name[0]}}/{{name}}/{{name}}-{{version}}.tar.gz\n  sha256: {{sha256}}\n\nbuild:\n    script: python setup.py install --single-version-externally-managed --record record.txt\n    number: 0\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n    - numpy >=1.9.1\n    - scipy >=0.14.0\n    - matplotlib >=1.4.0\n    - pint >=0.7\n    - pyproj >=1.9.4\n    - enum34  # [py27]\n\ntest:\n  imports:\n    - metpy.calc\n    - metpy.plots\n    - metpy.io\n\nabout:\n  home: https://github.com/Unidata/MetPy\n  license: BSD 3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data.'\n  description: |\n    The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\n    in a way that plugs easily into the existing scientific Python ecosystem\n    (numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\n    a weather map, you need to: read data, calculate a derived field, and\n    show on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\n    is to make it easier to use these routines for any meteorological Python\n    application; this means making it easy to pull out the LCL calculation\n    and just use that, or re-use the Skew-T with your own data code. MetPy\n    also prides itself on being well-documented and well-tested, so that\n    on-going maintenance is easily manageable.\n  doc_url: https://unidata.github.io/MetPy\n  dev_url: https://github.com/Unidata/MetPy\n\nextra:\n  recipe-maintainers:\n    - dopplershift\n    - jrleeman\n",
 "rendered_recipe": {
  "about": {
   "description": "The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\nin a way that plugs easily into the existing scientific Python ecosystem\n(numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\na weather map, you need to: read data, calculate a derived field, and\nshow on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\nis to make it easier to use these routines for any meteorological Python\napplication; this means making it easy to pull out the LCL calculation\nand just use that, or re-use the Skew-T with your own data code. MetPy\nalso prides itself on being well-documented and well-tested, so that\non-going maintenance is easily manageable.\n",
   "dev_url": "https://github.com/Unidata/MetPy",
   "doc_url": "https://unidata.github.io/MetPy",
   "home": "https://github.com/Unidata/MetPy",
   "license": "BSD 3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data."
  },
  "build": {
   "noarch": "",
   "noarch_python": false,
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "py27_0"
  },
  "extra": {
   "final": true,
   "recipe-maintainers": [
    "dopplershift",
    "jrleeman"
   ]
  },
  "package": {
   "name": "metpy",
   "version": "0.5.0"
  },
  "requirements": {
   "build": [
    "ca-certificates 2017.1.23 0",
    "certifi 2017.1.23 py27_0",
    "ncurses 5.9 10",
    "openssl 1.0.2h 3",
    "python 2.7.13 0",
    "readline 6.2 0",
    "setuptools 33.1.1 py27_0",
    "sqlite 3.13.0 1",
    "tk 8.5.19 1",
    "zlib 1.2.11 0"
   ],
   "run": [
    "python",
    "numpy >=1.9.1",
    "scipy >=0.14.0",
    "matplotlib >=1.4.0",
    "pint >=0.7",
    "pyproj >=1.9.4",
    "enum34"
   ]
  },
  "source": {
   "fn": "MetPy-0.5.0.tar.gz",
   "sha256": "3967bea9254f6fe268f7f74c2b506b8f730dab36017baafa0b6f3be02592984c",
   "url": "https://pypi.io/packages/source/M/MetPy/MetPy-0.5.0.tar.gz"
  },
  "test": {
   "imports": [
    "metpy.calc",
    "metpy.plots",
    "metpy.io"
   ]
  }
 },
 "version": "0.5.0"
}