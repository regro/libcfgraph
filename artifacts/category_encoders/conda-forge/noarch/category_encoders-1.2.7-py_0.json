{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.10.7",
  "conda_private": false,
  "conda_version": "4.5.4",
  "doc_url": "http://contrib.scikit-learn.org/categorical-encoding/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "home": "https://github.com/scikit-learn-contrib/categorical_encoding",
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "root_pkgs": [
   "cffi 1.11.5 py36_0",
   "pyopenssl 18.0.0 py36_0",
   "cryptography 2.2.1 py36_0",
   "xz 5.2.3 0",
   "packaging 17.1 py_0",
   "requests 2.18.4 py36_1",
   "certifi 2018.4.16 py36_0",
   "readline 7.0 0",
   "chardet 3.0.4 py36_0",
   "urllib3 1.22 py36_0",
   "setuptools 39.2.0 py36_0",
   "zlib 1.2.11 0",
   "yaml 0.1.7 0",
   "pycparser 2.18 py36_0",
   "asn1crypto 0.24.0 py36_0",
   "libffi 3.2.1 3",
   "tk 8.6.7 0",
   "conda 4.5.4 py36_0",
   "ruamel_yaml 0.15.35 py36_0",
   "pysocks 1.6.8 py36_1",
   "pip 9.0.3 py36_0",
   "idna 2.6 py36_1",
   "wheel 0.31.0 py36_0",
   "python 3.6.5 1",
   "pycosat 0.6.3 py36_0",
   "ncurses 5.9 10",
   "six 1.11.0 py36_1",
   "ca-certificates 2018.4.16 0",
   "pyparsing 2.2.0 py36_0",
   "sqlite 3.20.1 2",
   "conda-env 2.6.0 0",
   "openssl 1.0.2o 0",
   "traitlets 4.3.2 py36_0",
   "pytz 2018.4 py_0",
   "git 2.14.2 3",
   "conda-verify 2.0.0 py36_0",
   "filelock 3.0.4 py36_0",
   "jsonschema 2.6.0 py36_1",
   "anaconda-client 1.6.14 py_0",
   "pyyaml 3.12 py36_1",
   "beautifulsoup4 4.6.0 py36_0",
   "patchelf 0.9 2",
   "clyent 1.2.2 py36_0",
   "conda-forge-ci-setup 1.3.5 0",
   "curl 7.60.0 0",
   "tini 0.18.0 0",
   "ipython_genutils 0.2.0 py36_0",
   "libiconv 1.15 0",
   "krb5 1.14.6 0",
   "expat 2.2.5 0",
   "nbformat 4.4.0 py36_0",
   "decorator 4.3.0 py_0",
   "glob2 0.6 py_0",
   "libssh2 1.8.0 2",
   "pkginfo 1.4.2 py36_0",
   "python-dateutil 2.7.3 py_0",
   "jinja2 2.10 py36_0",
   "jupyter_core 4.4.0 py_0",
   "markupsafe 1.0 py36_0",
   "psutil 5.4.5 py36_0",
   "conda-build 3.10.7 py36_1",
   "gosu 1.10 0"
  ],
  "summary": "A collection of sklearn transformers to encode categorical variables as numeric"
 },
 "conda_build_config": {
  "c_compiler": "gcc",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "2.7",
  "r_base": "3.4",
  "target_platform": "linux-64"
 },
 "files": [
  "site-packages/category_encoders-1.2.7-py2.7.egg-info/PKG-INFO",
  "site-packages/category_encoders/__init__.py",
  "site-packages/category_encoders/backward_difference.py",
  "site-packages/category_encoders/basen.py",
  "site-packages/category_encoders/binary.py",
  "site-packages/category_encoders/hashing.py",
  "site-packages/category_encoders/helmert.py",
  "site-packages/category_encoders/leave_one_out.py",
  "site-packages/category_encoders/one_hot.py",
  "site-packages/category_encoders/ordinal.py",
  "site-packages/category_encoders/polynomial.py",
  "site-packages/category_encoders/sum_coding.py",
  "site-packages/category_encoders/target_encoder.py",
  "site-packages/category_encoders/tests/__init__.py",
  "site-packages/category_encoders/tests/test_basen.py",
  "site-packages/category_encoders/tests/test_distributive.py",
  "site-packages/category_encoders/tests/test_encoders.py",
  "site-packages/category_encoders/tests/test_estimators.py",
  "site-packages/category_encoders/tests/test_none_nan.py",
  "site-packages/category_encoders/utils.py",
  "site-packages/examples/__init__.py",
  "site-packages/examples/benchmarking/__init__.py",
  "site-packages/examples/benchmarking/benchmarking.py",
  "site-packages/examples/benchmarking/reporting.py",
  "site-packages/examples/encoding_examples.py",
  "site-packages/examples/grid_search_example.py",
  "site-packages/examples/source_data/__init__.py",
  "site-packages/examples/source_data/loaders.py"
 ],
 "index": {
  "arch": null,
  "build": "py_0",
  "build_number": 0,
  "depends": [
   "numpy >=1.8.0",
   "pandas >=0.16.0",
   "patsy >=0.4.0",
   "python",
   "scikit-learn >=0.15.0",
   "scipy >=0.9",
   "statsmodels >=0.6.0"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "category_encoders",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1528159781699,
  "version": "1.2.7"
 },
 "metadata_version": 1,
 "name": "category_encoders",
 "raw_recipe": "{% set name = \"category_encoders\" %}\n{% set version = \"1.2.7\" %}\n{% set sha256 = \"329fafd5a2a93282f19225bb0c2625475f51ef9b7bc8aec432ac49e1790a5938\" %}\n\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: python -m pip install --no-deps --ignore-installed .\n\n\nrequirements:\n  build:\n    - python\n    - setuptools\n    - pip\n  run:\n    - numpy >=1.8.0\n    - pandas >=0.16.0\n    - patsy >=0.4.0\n    - python\n    - scikit-learn >=0.15.0\n    - scipy >=0.9\n    - statsmodels >=0.6.0\n\ntest:\n  requires:\n    - nose\n    - python\n  imports:\n    - category_encoders\n  commands:\n    - nosetests category_encoders.tests\n\nabout:\n  home: https://github.com/scikit-learn-contrib/categorical_encoding\n  license: BSD-3-Clause\n  license_family: BSD\n  summary: A collection of sklearn transformers to encode categorical variables as numeric\n  doc_url: http://contrib.scikit-learn.org/categorical-encoding/\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n    - nirajd\n    - wdm0006\n",
 "rendered_recipe": {
  "about": {
   "doc_url": "http://contrib.scikit-learn.org/categorical-encoding/",
   "home": "https://github.com/scikit-learn-contrib/categorical_encoding",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "summary": "A collection of sklearn transformers to encode categorical variables as numeric"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "python -m pip install --no-deps --ignore-installed .",
   "string": "py_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "bollwyvl",
    "nirajd",
    "wdm0006"
   ]
  },
  "package": {
   "name": "category_encoders",
   "version": "1.2.7"
  },
  "requirements": {
   "build": [
    "ca-certificates 2018.4.16 0",
    "certifi 2018.4.16 py27_0",
    "libgcc-ng 7.2.0 hdf63c60_3",
    "ncurses 5.9 10",
    "openssl 1.0.2o 0",
    "pip 9.0.3 py27_0",
    "python 2.7.15 0",
    "readline 7.0 0",
    "setuptools 39.2.0 py27_0",
    "sqlite 3.20.1 2",
    "tk 8.6.7 0",
    "wheel 0.31.0 py27_0",
    "zlib 1.2.11 h470a237_3"
   ],
   "run": [
    "numpy >=1.8.0",
    "pandas >=0.16.0",
    "patsy >=0.4.0",
    "python",
    "scikit-learn >=0.15.0",
    "scipy >=0.9",
    "statsmodels >=0.6.0"
   ]
  },
  "source": {
   "fn": "category_encoders-1.2.7.tar.gz",
   "sha256": "329fafd5a2a93282f19225bb0c2625475f51ef9b7bc8aec432ac49e1790a5938",
   "url": "https://pypi.io/packages/source/c/category_encoders/category_encoders-1.2.7.tar.gz"
  },
  "test": {
   "commands": [
    "nosetests category_encoders.tests"
   ],
   "imports": [
    "category_encoders"
   ],
   "requires": [
    "nose",
    "python"
   ]
  }
 },
 "version": "1.2.7"
}