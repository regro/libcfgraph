{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.25.0",
  "conda_version": "23.3.1",
  "description": "The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
  "dev_url": "http://www.salome-platform.org/",
  "doc_url": "http://www.salome-platform.org/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ldallolio",
    "looooo",
    "ldallolio-irt"
   ]
  },
  "home": "https://www.salome-platform.org/user-section/about/med",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL-3.0-only",
  "license_family": "LGPL",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "libnsl 2.0.0 h7f98852_0",
   "libgomp 13.1.0 he5830b7_0",
   "boa 0.15.1 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "ca-certificates 2023.5.7 hbcca054_0",
   "openssl 3.1.1 hd590300_1",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h2f28480_2",
   "libbrotlienc 1.0.9 h166bdaf_8",
   "libgcc-ng 13.1.0 he5830b7_0",
   "lcms2 2.15 haa2dc70_1",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "attrs 23.1.0 pyh71513ae_1",
   "python-libarchive-c 4.0 py310hff52083_2",
   "libxml2 2.11.4 h0d562d8_0",
   "wheel 0.40.0 pyhd8ed1ab_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "tqdm 4.65.0 pyhd8ed1ab_1",
   "cryptography 41.0.1 py310h75e40e8_0",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "platformdirs 3.6.0 pyhd8ed1ab_0",
   "typing_extensions 4.6.3 pyha770c72_0",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "jsonpatch 1.32 pyhd8ed1ab_0",
   "fmt 9.1.0 h924138e_0",
   "ruamel.yaml.clib 0.2.7 py310h1fa729e_1",
   "libsolv 0.7.24 hfc55251_1",
   "python-fastjsonschema 2.17.1 pyhd8ed1ab_0",
   "ncurses 6.4 hcb278e6_0",
   "anaconda-client 1.11.3 pyhd8ed1ab_0",
   "more-itertools 9.1.0 pyhd8ed1ab_0",
   "conda-index 0.2.3 pyhd8ed1ab_0",
   "typing-extensions 4.6.3 hd8ed1ab_0",
   "libmambapy 1.4.2 py310h1428755_0",
   "zstandard 0.19.0 py310hdeb6495_1",
   "libmamba 1.4.2 hcea66bb_0",
   "lzo 2.10 h516909a_1000",
   "conda-pack 0.7.0 pyh6c4a22f_0",
   "importlib_resources 5.12.0 pyhd8ed1ab_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "libcurl 8.1.2 h409715c_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "conda 23.3.1 py310hff52083_0",
   "python_abi 3.10 3_cp310",
   "pycosat 0.6.4 py310h5764c6d_1",
   "brotli-bin 1.0.9 h166bdaf_8",
   "backports 1.0 pyhd8ed1ab_3",
   "libssh2 1.11.0 h0841786_0",
   "libtiff 4.5.1 h8b53f26_0",
   "libbrotlidec 1.0.9 h166bdaf_8",
   "git 2.41.0 pl5321h86e50cf_0",
   "c-ares 1.19.1 hd590300_0",
   "markdown-it-py 3.0.0 pyhd8ed1ab_0",
   "readline 8.2 h8228510_1",
   "ld_impl_linux-64 2.40 h41732ed_0",
   "pthread-stubs 0.4 h36c2ea0_1001",
   "brotli 1.0.9 h166bdaf_8",
   "python 3.10.12 hd12c33a_0_cpython",
   "libffi 3.4.2 h7f98852_5",
   "chardet 5.1.0 py310hff52083_0",
   "tk 8.6.12 h27826a3_0",
   "libuuid 2.38.1 h0b41bf4_0",
   "libbrotlicommon 1.0.9 h166bdaf_8",
   "gettext 0.21.1 h27087fc_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "charset-normalizer 3.1.0 pyhd8ed1ab_0",
   "setuptools 68.0.0 pyhd8ed1ab_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "prompt_toolkit 3.0.38 hd8ed1ab_0",
   "libdeflate 1.18 h0b41bf4_0",
   "openjpeg 2.5.0 hfec8fc6_2",
   "reproc 14.2.4 h0b41bf4_0",
   "pytz 2023.3 pyhd8ed1ab_0",
   "requests 2.31.0 pyhd8ed1ab_0",
   "pcre2 10.40 hc3806b6_0",
   "six 1.16.0 pyh6c4a22f_0",
   "libpng 1.6.39 h753d276_0",
   "pyrsistent 0.19.3 py310h1fa729e_0",
   "exceptiongroup 1.1.1 pyhd8ed1ab_0",
   "brotlipy 0.7.0 py310h5764c6d_1005",
   "pluggy 1.0.0 pyhd8ed1ab_5",
   "nbformat 5.9.0 pyhd8ed1ab_0",
   "su-exec 0.2 h166bdaf_1003",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "importlib-metadata 6.7.0 pyha770c72_0",
   "libwebp-base 1.3.0 h0b41bf4_0",
   "freetype 2.12.1 hca18f0e_1",
   "patch 2.7.6 h7f98852_1002",
   "packaging 23.1 pyhd8ed1ab_0",
   "py-lief 0.12.3 py310hd8f1fbe_0",
   "cffi 1.15.1 py310h255011f_3",
   "rich 13.4.2 pyhd8ed1ab_0",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "psutil 5.9.5 py310h1fa729e_0",
   "filelock 3.12.2 pyhd8ed1ab_0",
   "libzlib 1.2.13 hd590300_5",
   "conda-build 3.25.0 py310hff52083_0",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "yaml-cpp 0.7.0 h27087fc_2",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "markupsafe 2.1.3 py310h2372a71_0",
   "lz4-c 1.9.4 hcb278e6_0",
   "reproc-cpp 14.2.4 hcb278e6_0",
   "ruamel_yaml 0.15.80 py310h5764c6d_1008",
   "lerc 4.0.0 h27087fc_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "xorg-libxdmcp 1.1.3 h7f98852_0",
   "urllib3 1.26.15 pyhd8ed1ab_0",
   "mamba 1.4.2 py310h51d5547_0",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "xz 5.2.6 h166bdaf_0",
   "pip 23.1.2 pyhd8ed1ab_0",
   "xorg-libxau 1.0.11 hd590300_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libsqlite 3.42.0 h2797004_0",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "krb5 1.20.1 h81ceb04_0",
   "libjpeg-turbo 2.1.5.1 h0b41bf4_0",
   "curl 8.1.2 h409715c_0",
   "idna 3.4 pyhd8ed1ab_0",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.32 py310h2372a71_0",
   "libiconv 1.17 h166bdaf_0",
   "libarchive 3.6.2 h039dbb9_1",
   "pyopenssl 23.2.0 pyhd8ed1ab_1",
   "bzip2 1.0.8 h7f98852_4",
   "zipp 3.15.0 pyhd8ed1ab_0",
   "pyyaml 6.0 py310h5764c6d_5",
   "pygments 2.15.1 pyhd8ed1ab_0",
   "libxcb 1.15 h0b41bf4_0",
   "glob2 0.7 py_0",
   "jupyter_core 5.3.1 py310hff52083_0",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "tini 0.19.0 h166bdaf_1",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "libev 4.33 h516909a_1",
   "libnghttp2 1.52.0 h61bc06f_0",
   "certifi 2023.5.7 pyhd8ed1ab_0",
   "tornado 6.3.2 py310h2372a71_0",
   "patchelf 0.18.0 h59595ed_0",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "liblief 0.12.3 h27087fc_0",
   "libstdcxx-ng 13.1.0 hfd8a6a1_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "anyio 3.7.0 pyhd8ed1ab_1",
   "json5 0.9.5 pyh9f0ad1d_0",
   "yaml 0.2.5 h7f98852_2",
   "icu 72.1 hcb278e6_0",
   "_openmp_mutex 4.5 2_gnu",
   "libedit 3.1.20191231 he28a2e2_2",
   "pillow 9.5.0 py310h582fbeb_1",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "keyutils 1.6.1 h166bdaf_0",
   "conda-package-streaming 0.8.0 pyhd8ed1ab_0",
   "zstd 1.5.2 h3eb15da_6",
   "jsonpointer 2.0 py_0",
   "prompt-toolkit 3.0.38 pyha770c72_0",
   "libexpat 2.5.0 hcb278e6_1",
   "tzdata 2023c h71feb2d_0",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "oniguruma 6.9.8 h166bdaf_0",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "conda-forge-ci-setup 3.31.1 py310hce54274_100",
   "conda-env 2.6.0 1",
   "conda-forge-metadata 0.5.0 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000"
  ],
  "summary": "MED : interoperable format for data interchange between mesh based solvers.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "12",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "12",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "12",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.11.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version",
    "fortran_compiler_version"
   ]
  ]
 },
 "conda_pkg_format": "2",
 "files": [
  "bin/mdump",
  "bin/mdump2",
  "bin/mdump3",
  "bin/mdump4",
  "bin/medconforme",
  "bin/medimport",
  "bin/testc/test1",
  "bin/testc/test10",
  "bin/testc/test10_f32",
  "bin/testc/test10_f32_i32",
  "bin/testc/test10_f32_i64",
  "bin/testc/test10_i32",
  "bin/testc/test10_i64",
  "bin/testc/test10_mem",
  "bin/testc/test11",
  "bin/testc/test11b",
  "bin/testc/test12",
  "bin/testc/test13",
  "bin/testc/test14",
  "bin/testc/test15",
  "bin/testc/test16",
  "bin/testc/test17",
  "bin/testc/test18",
  "bin/testc/test2",
  "bin/testc/test20",
  "bin/testc/test21",
  "bin/testc/test22",
  "bin/testc/test23",
  "bin/testc/test24",
  "bin/testc/test25",
  "bin/testc/test26",
  "bin/testc/test27",
  "bin/testc/test28",
  "bin/testc/test29",
  "bin/testc/test3",
  "bin/testc/test30",
  "bin/testc/test31",
  "bin/testc/test32",
  "bin/testc/test33",
  "bin/testc/test4",
  "bin/testc/test5",
  "bin/testc/test6",
  "bin/testc/test7",
  "bin/testc/test8",
  "bin/testc/test9",
  "bin/testf/test1",
  "bin/testf/test10",
  "bin/testf/test10_f32",
  "bin/testf/test10_f32_i32",
  "bin/testf/test10_f32_i64",
  "bin/testf/test10_i32",
  "bin/testf/test10_i64",
  "bin/testf/test10f",
  "bin/testf/test12",
  "bin/testf/test13",
  "bin/testf/test14",
  "bin/testf/test15",
  "bin/testf/test16",
  "bin/testf/test17",
  "bin/testf/test18",
  "bin/testf/test2",
  "bin/testf/test21",
  "bin/testf/test22",
  "bin/testf/test23",
  "bin/testf/test24",
  "bin/testf/test25",
  "bin/testf/test26",
  "bin/testf/test27",
  "bin/testf/test28",
  "bin/testf/test29",
  "bin/testf/test3",
  "bin/testf/test30",
  "bin/testf/test31",
  "bin/testf/test32",
  "bin/testf/test33",
  "bin/testf/test4",
  "bin/testf/test5",
  "bin/testf/test6",
  "bin/testf/test7",
  "bin/testf/test8",
  "bin/testf/test9",
  "bin/testpy/UseCase_MEDinterp_1.py",
  "bin/testpy/UseCase_MEDinterp_2.py",
  "bin/testpy/UseCase_MEDinterp_3.py",
  "bin/testpy/test1.py",
  "bin/testpy/test12.py",
  "bin/testpy/test13.py",
  "bin/testpy/test2.py",
  "bin/testpy/test21.py",
  "bin/testpy/test22.py",
  "bin/testpy/test23.py",
  "bin/testpy/test24.py",
  "bin/testpy/test27.py",
  "bin/testpy/test28.py",
  "bin/testpy/test29.py",
  "bin/testpy/test3.py",
  "bin/testpy/test30.py",
  "bin/testpy/test4.py",
  "bin/testpy/test5.py",
  "bin/testpy/test6.py",
  "bin/testpy/test7.py",
  "bin/testpy/test8.py",
  "bin/testpy/test9.py",
  "bin/testpy/test_medfile.py",
  "bin/testpy/test_medmesh.py",
  "bin/xmdump",
  "bin/xmdump2",
  "bin/xmdump3",
  "bin/xmdump4",
  "include/2.3.6/MEDerreur.hxx",
  "include/2.3.6/med.h",
  "include/2.3.6/med.hf",
  "include/2.3.6/med23v30.h",
  "include/2.3.6/med23v30_proto.h",
  "include/2.3.6/medC_win_dll.h",
  "include/2.3.6/med_exit_if.h",
  "include/2.3.6/med_proto.h",
  "include/2.3.6/med_utils.h",
  "include/MEDerreur.hxx",
  "include/MEDimport.h",
  "include/MEDimport.hxx",
  "include/med.h",
  "include/med.hf",
  "include/med.hf77",
  "include/med.hf90",
  "include/medC_win_dll.h",
  "include/med_err.h",
  "include/med_exit_if.h",
  "include/med_filechar.h",
  "include/med_parameter.hf",
  "include/med_proto.h",
  "include/med_utils.h",
  "include/medequivalence.h",
  "include/medfamily.h",
  "include/medfield.h",
  "include/medfile.h",
  "include/medfilter.h",
  "include/medimport_win_dll.h",
  "include/medimportcxx_win_dll.h",
  "include/medinterp.h",
  "include/medlibrary.h",
  "include/medlink.h",
  "include/medlocalization.h",
  "include/medmesh.h",
  "include/medparameter.h",
  "include/medprofile.h",
  "include/medstructelement.h",
  "include/medsubdomain.h",
  "lib/libmed.so",
  "lib/libmed.so.11",
  "lib/libmed.so.11.1.1",
  "lib/libmedC.so",
  "lib/libmedC.so.11",
  "lib/libmedC.so.11.1.1",
  "lib/libmedfwrap.so",
  "lib/libmedfwrap.so.11",
  "lib/libmedfwrap.so.11.1.1",
  "lib/libmedimport.so",
  "lib/libmedimport.so.0",
  "lib/libmedimport.so.0.4.0",
  "lib/python3.11/site-packages/med/__init__.py",
  "lib/python3.11/site-packages/med/_medenum.so",
  "lib/python3.11/site-packages/med/_medenumtest.so",
  "lib/python3.11/site-packages/med/_medequivalence.so",
  "lib/python3.11/site-packages/med/_medfamily.so",
  "lib/python3.11/site-packages/med/_medfield.so",
  "lib/python3.11/site-packages/med/_medfile.so",
  "lib/python3.11/site-packages/med/_medfilter.so",
  "lib/python3.11/site-packages/med/_medinterp.so",
  "lib/python3.11/site-packages/med/_medlibrary.so",
  "lib/python3.11/site-packages/med/_medlink.so",
  "lib/python3.11/site-packages/med/_medlocalization.so",
  "lib/python3.11/site-packages/med/_medmesh.so",
  "lib/python3.11/site-packages/med/_medparameter.so",
  "lib/python3.11/site-packages/med/_medprofile.so",
  "lib/python3.11/site-packages/med/_medstructelement.so",
  "lib/python3.11/site-packages/med/_medsubdomain.so",
  "lib/python3.11/site-packages/med/medenum.py",
  "lib/python3.11/site-packages/med/medenumtest.py",
  "lib/python3.11/site-packages/med/medequivalence.py",
  "lib/python3.11/site-packages/med/medfamily.py",
  "lib/python3.11/site-packages/med/medfield.py",
  "lib/python3.11/site-packages/med/medfile.py",
  "lib/python3.11/site-packages/med/medfilter.py",
  "lib/python3.11/site-packages/med/medinterp.py",
  "lib/python3.11/site-packages/med/medlibrary.py",
  "lib/python3.11/site-packages/med/medlink.py",
  "lib/python3.11/site-packages/med/medlocalization.py",
  "lib/python3.11/site-packages/med/medmesh.py",
  "lib/python3.11/site-packages/med/medparameter.py",
  "lib/python3.11/site-packages/med/medprofile.py",
  "lib/python3.11/site-packages/med/medstructelement.py",
  "lib/python3.11/site-packages/med/medsubdomain.py",
  "share/cmake/medfile-4.1.1/MEDFileConfig.cmake",
  "share/cmake/medfile-4.1.1/MEDFileConfigVersion.cmake",
  "share/cmake/medfile-4.1.1/MEDFileTargets-release.cmake",
  "share/cmake/medfile-4.1.1/MEDFileTargets.cmake"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py311hcc863ee_2",
  "build_number": 2,
  "depends": [
   "hdf5 >=1.10,<1.11.0a0",
   "hdf5 >=1.10.5,<1.10.6.0a0",
   "libgcc-ng >=12",
   "libgfortran-ng",
   "libgfortran5 >=12.3.0",
   "libstdcxx-ng >=12",
   "python >=3.11,<3.12.0a0",
   "python >=3.11,<3.12.0a0 *_cpython",
   "python_abi 3.11.* *_cp311"
  ],
  "license": "LGPL-3.0-only",
  "license_family": "LGPL",
  "name": "libmed",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1687859770238,
  "version": "4.1.1"
 },
 "metadata_version": 1,
 "name": "libmed",
 "raw_recipe": "{% set name = \"libmed\" %}\n{% set version = \"4.1.1\" %}\n{% set sha256 = \"dc2b5d54ebf0666e3ff2e974041d2ab0da906061323537023ab165d573389dd0\" %}\n\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}_{{ version }}.tar.gz\n  url: https://files.salome-platform.org/Salome/other/med-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n    #git_url: https://salsa.debian.org/science-team/med-fichier\n    #git_rev: 8a0b0d21d4bac79772797b0a800cf4d5bf77bc32    \n\nbuild:\n  number: 2\n  skip: true  # [py2k or osx]\n\nrequirements:\n  build:\n      - {{ compiler('fortran') }}\n      - {{ compiler('c') }}\n      - {{ compiler('cxx') }}\n      - swig >=4.0.2\n  host:\n#      - autoconf  # [linux]\n      - make  # [not win]\n      - ninja  # [win]\n      - cmake\n      - hdf5 >=1.10.2,<1.11\n      - python {{ python }}\n  run:\n      - {{ pin_compatible('hdf5', min_pin='x.x', max_pin='x.x') }}\n      - {{ pin_compatible('python', min_pin='x.x', max_pin='x.x') }}\n      - python {{ python }}\n\ntest:\n  imports:\n    - med\n\nabout:\n  home: https://www.salome-platform.org/user-section/about/med\n  license: LGPL-3.0-only\n  license_family: LGPL\n  license_file: LICENSE.txt\n  summary: 'MED : interoperable format for data interchange between mesh based solvers.'\n  description: |\n    The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n  doc_url: http://www.salome-platform.org/\n  dev_url: http://www.salome-platform.org/\n\nextra:\n  recipe-maintainers:\n    - ldallolio\n    - looooo\n    - ldallolio-irt\n",
 "rendered_recipe": {
  "about": {
   "description": "The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
   "dev_url": "http://www.salome-platform.org/",
   "doc_url": "http://www.salome-platform.org/",
   "home": "https://www.salome-platform.org/user-section/about/med",
   "license": "LGPL-3.0-only",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "MED : interoperable format for data interchange between mesh based solvers."
  },
  "build": {
   "number": "2",
   "string": "py311hcc863ee_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ldallolio",
    "ldallolio-irt",
    "looooo"
   ]
  },
  "package": {
   "name": "libmed",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-64 2.40 hf600244_0",
    "binutils_linux-64 2.40 hbdbef99_0",
    "bzip2 1.0.8 h7f98852_4",
    "gcc_impl_linux-64 12.3.0 he2b93b0_0",
    "gcc_linux-64 12.3.0 h76fc315_0",
    "gfortran_impl_linux-64 12.3.0 hfcedea8_0",
    "gfortran_linux-64 12.3.0 h7fe76b4_0",
    "gxx_impl_linux-64 12.3.0 he2b93b0_0",
    "gxx_linux-64 12.3.0 h8a814eb_0",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "ld_impl_linux-64 2.40 h41732ed_0",
    "libgcc-devel_linux-64 12.3.0 h8bca6fd_0",
    "libgcc-ng 13.1.0 he5830b7_0",
    "libgfortran5 13.1.0 h15d22d2_0",
    "libgomp 13.1.0 he5830b7_0",
    "libsanitizer 12.3.0 h0f45ef3_0",
    "libstdcxx-devel_linux-64 12.3.0 h8bca6fd_0",
    "libstdcxx-ng 13.1.0 hfd8a6a1_0",
    "libzlib 1.2.13 hd590300_5",
    "pcre2 10.40 hc3806b6_0",
    "swig 4.1.1 he155508_1",
    "sysroot_linux-64 2.12 he073ed8_15"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.19.1 hd590300_0",
    "ca-certificates 2023.5.7 hbcca054_0",
    "cmake 3.26.4 hcfe8598_0",
    "expat 2.5.0 hcb278e6_1",
    "hdf5 1.10.5 nompi_h5b725eb_1114",
    "keyutils 1.6.1 h166bdaf_0",
    "krb5 1.20.1 h81ceb04_0",
    "ld_impl_linux-64 2.40 h41732ed_0",
    "libcurl 8.1.2 h409715c_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libexpat 2.5.0 hcb278e6_1",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 13.1.0 he5830b7_0",
    "libgfortran-ng 13.1.0 h69a702a_0",
    "libgfortran5 13.1.0 h15d22d2_0",
    "libgomp 13.1.0 he5830b7_0",
    "libnghttp2 1.52.0 h61bc06f_0",
    "libnsl 2.0.0 h7f98852_0",
    "libsqlite 3.42.0 h2797004_0",
    "libssh2 1.11.0 h0841786_0",
    "libstdcxx-ng 13.1.0 hfd8a6a1_0",
    "libuuid 2.38.1 h0b41bf4_0",
    "libuv 1.44.2 h166bdaf_0",
    "libzlib 1.2.13 hd590300_5",
    "make 4.3 hd18ef5c_1",
    "ncurses 6.4 hcb278e6_0",
    "openssl 3.1.1 hd590300_1",
    "python 3.11.4 hab00c5b_0_cpython",
    "readline 8.2 h8228510_1",
    "rhash 1.4.3 h166bdaf_0",
    "tk 8.6.12 h27826a3_0",
    "tzdata 2023c h71feb2d_0",
    "xz 5.2.6 h166bdaf_0",
    "zlib 1.2.13 hd590300_5",
    "zstd 1.5.2 h3eb15da_6"
   ],
   "run": [
    "hdf5 >=1.10,<1.11.0a0",
    "hdf5 >=1.10.5,<1.10.6.0a0",
    "libgcc-ng >=12",
    "libgfortran-ng",
    "libgfortran5 >=12.3.0",
    "libstdcxx-ng >=12",
    "python >=3.11,<3.12.0a0",
    "python >=3.11,<3.12.0a0 *_cpython",
    "python_abi 3.11.* *_cp311"
   ]
  },
  "source": {
   "fn": "libmed_4.1.1.tar.gz",
   "sha256": "dc2b5d54ebf0666e3ff2e974041d2ab0da906061323537023ab165d573389dd0",
   "url": "https://files.salome-platform.org/Salome/other/med-4.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "med"
   ]
  }
 },
 "version": "4.1.1"
}