{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.27.0",
  "conda_version": "23.10.0",
  "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
  "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
  "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "flow_run_id": "azure_20231116.2.1",
   "recipe-maintainers": [
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr"
   ],
   "remote_url": "https://github.com/conda-forge/cudnn-feedstock",
   "sha": "3c09ce888d71fa15411ba9b259ed4f83d07d51de"
  },
  "home": "https://developer.nvidia.com/cudnn",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-cuDNN-Software-License-Agreement",
  "license_file": "LICENSE",
  "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
  "root_pkgs": [
   "anaconda-client 1.12.1 pyhd8ed1ab_1",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "archspec 0.2.2 pyhd8ed1ab_0",
   "attrs 23.1.0 pyh71513ae_1",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "brotli-python 1.1.0 py310h00ffb61_0",
   "bzip2 1.0.8 h8ffe710_4",
   "ca-certificates 2023.7.22 h56e8100_0",
   "certifi 2023.7.22 pyhd8ed1ab_0",
   "cffi 1.15.1 py310h628cb3f_3",
   "chardet 5.2.0 py310h5588dad_1",
   "charset-normalizer 3.2.0 pyhd8ed1ab_0",
   "click 8.1.7 win_pyh7428d3b_0",
   "clyent 1.2.2 pyhd8ed1ab_2",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "conda 23.10.0 py310h5588dad_1",
   "conda-build 3.27.0 py310h5588dad_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 4.1.0 py310h82d9320_100",
   "conda-forge-metadata 0.6.1 pyhd8ed1ab_0",
   "conda-index 0.3.0 pyhd8ed1ab_1",
   "conda-libmamba-solver 23.11.1 pyhd8ed1ab_0",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "conda-pack 0.7.1 pyhd8ed1ab_0",
   "conda-package-handling 2.2.0 pyh38be061_0",
   "conda-package-streaming 0.9.0 pyhd8ed1ab_0",
   "cryptography 41.0.3 py310h6e82f81_0",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "filelock 3.13.1 pyhd8ed1ab_0",
   "fmt 10.1.1 h181d51b_0",
   "freetype 2.12.1 hdaf720e_2",
   "idna 3.4 pyhd8ed1ab_0",
   "importlib_resources 6.1.1 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "jsonpatch 1.32 pyhd8ed1ab_0",
   "jsonpointer 2.0 py_0",
   "jsonschema 4.20.0 pyhd8ed1ab_0",
   "jsonschema-specifications 2023.11.1 pyhd8ed1ab_0",
   "jupyter_core 5.5.0 py310h5588dad_0",
   "krb5 1.21.2 heb0366b_0",
   "lcms2 2.15 he9d350c_2",
   "lerc 4.0.0 h63175ca_0",
   "libarchive 3.7.2 h6f8411a_0",
   "libcurl 8.4.0 hd5e4a3a_0",
   "libdeflate 1.19 hcfcfb64_0",
   "libffi 3.4.2 h8ffe710_5",
   "libiconv 1.17 h8ffe710_0",
   "libjpeg-turbo 2.1.5.1 hcfcfb64_1",
   "liblief 0.12.3 h63175ca_0",
   "libmamba 1.5.3 h3f09ed1_2",
   "libmambapy 1.5.3 py310h04f2035_2",
   "libpng 1.6.39 h19919ed_0",
   "libsolv 0.7.24 h12be248_3",
   "libsqlite 3.43.0 hcfcfb64_0",
   "libssh2 1.11.0 h7dfc565_0",
   "libtiff 4.6.0 h4554b19_1",
   "libwebp-base 1.3.2 hcfcfb64_0",
   "libxcb 1.15 hcd874cb_0",
   "libxml2 2.11.5 hc3477c8_1",
   "libzlib 1.2.13 hcfcfb64_5",
   "lz4-c 1.9.4 hcfcfb64_0",
   "lzo 2.10 he774522_1000",
   "m2-bash 4.3.042 5",
   "m2-ca-certificates 20150426 103",
   "m2-coreutils 8.25 102",
   "m2-curl 7.47.1 3",
   "m2-db 5.3.28 3",
   "m2-expat 2.1.1 2",
   "m2-findutils 4.6.0 2",
   "m2-gcc-libs 5.3.0 4",
   "m2-gdbm 1.11 4",
   "m2-git 2.8.1 2",
   "m2-gmp 6.1.0 3",
   "m2-gzip 1.7 2",
   "m2-heimdal 1.5.3 10",
   "m2-heimdal-libs 1.5.3 10",
   "m2-icu 56.1 2",
   "m2-info 6.0 2",
   "m2-less 481 2",
   "m2-libcrypt 1.3 2",
   "m2-libcurl 7.47.1 3",
   "m2-libdb 5.3.28 3",
   "m2-libedit 3.1 20150326",
   "m2-libexpat 2.1.1 2",
   "m2-libffi 3.2.1 2",
   "m2-libgdbm 1.11 4",
   "m2-libiconv 1.14 3",
   "m2-libidn 1.32 2",
   "m2-libintl 0.19.7 4",
   "m2-libmetalink 0.1.2 3",
   "m2-libopenssl 1.0.2.g 2",
   "m2-libp11-kit 0.23.2 2",
   "m2-libpcre 8.38 2",
   "m2-libreadline 6.3.008 8",
   "m2-libsqlite 3.10.0.0 2",
   "m2-libssh2 1.6.0 2",
   "m2-libtasn1 4.7 2",
   "m2-msys2-runtime 2.5.0.17080.65c939c 3",
   "m2-ncurses 6.0.20160220 2",
   "m2-openssh 7.1p2 2",
   "m2-openssl 1.0.2.g 2",
   "m2-p11-kit 0.23.2 2",
   "m2-patch 2.7.5 2",
   "m2-perl 5.22.1 2",
   "m2-perl-authen-sasl 2.16 3",
   "m2-perl-convert-binhex 1.123 3",
   "m2-perl-encode-locale 1.04 2",
   "m2-perl-error 0.17024 2",
   "m2-perl-file-listing 6.04 3",
   "m2-perl-html-parser 3.71 4",
   "m2-perl-html-tagset 3.20 3",
   "m2-perl-http-cookies 6.01 3",
   "m2-perl-http-daemon 6.01 3",
   "m2-perl-http-date 6.02 3",
   "m2-perl-http-message 6.06 3",
   "m2-perl-http-negotiate 6.01 3",
   "m2-perl-io-socket-ssl 2.016 2",
   "m2-perl-io-stringy 2.111 2",
   "m2-perl-libwww 6.13 2",
   "m2-perl-lwp-mediatypes 6.02 3",
   "m2-perl-mailtools 2.14 2",
   "m2-perl-mime-tools 5.506 2",
   "m2-perl-net-http 6.09 2",
   "m2-perl-net-smtp-ssl 1.02 2",
   "m2-perl-net-ssleay 1.72 2",
   "m2-perl-termreadkey 2.33 2",
   "m2-perl-timedate 2.30 3",
   "m2-perl-uri 1.68 2",
   "m2-perl-www-robotrules 6.02 3",
   "m2-sed 4.2.2 3",
   "m2-vim 7.4.1721 2",
   "m2-zlib 1.2.8 4",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "mamba 1.5.3 py310hd9d798f_2",
   "markupsafe 2.1.3 py310h8d17308_1",
   "menuinst 1.4.19 py310h5588dad_1",
   "miniforge_console_shortcut 1.0 h57928b3_0",
   "more-itertools 10.1.0 pyhd8ed1ab_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 5.9.2 pyhd8ed1ab_0",
   "openjpeg 2.5.0 h3d672ee_3",
   "openssl 3.1.4 hcfcfb64_0",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "packaging 23.1 pyhd8ed1ab_0",
   "pillow 10.0.1 py310h6abe1ea_1",
   "pip 23.2.1 pyhd8ed1ab_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_1",
   "platformdirs 4.0.0 pyhd8ed1ab_0",
   "pluggy 1.3.0 pyhd8ed1ab_0",
   "psutil 5.9.5 py310h8d17308_1",
   "pthread-stubs 0.4 hcd874cb_1001",
   "py-lief 0.12.3 py310h00ffb61_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "pycosat 0.6.4 py310h8d17308_1",
   "pycparser 2.21 pyhd8ed1ab_0",
   "pyopenssl 23.2.0 pyhd8ed1ab_1",
   "pysocks 1.7.1 pyh0701188_6",
   "python 3.10.12 h4de0772_0_cpython",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "python-fastjsonschema 2.19.0 pyhd8ed1ab_0",
   "python-libarchive-c 5.0 py310h5588dad_2",
   "python_abi 3.10 3_cp310",
   "pytz 2023.3.post1 pyhd8ed1ab_0",
   "pywin32 306 py310h00ffb61_2",
   "pyyaml 6.0.1 py310h8d17308_1",
   "referencing 0.31.0 pyhd8ed1ab_0",
   "reproc 14.2.4 hcfcfb64_0",
   "reproc-cpp 14.2.4 h63175ca_0",
   "requests 2.31.0 pyhd8ed1ab_0",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h7f3b576_3",
   "rpds-py 0.13.0 py310h87d50f1_0",
   "ruamel.yaml 0.17.32 py310h8d17308_0",
   "ruamel.yaml.clib 0.2.7 py310h8d17308_1",
   "ruamel_yaml 0.15.80 py310h8d17308_1009",
   "setuptools 68.1.2 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "six 1.16.0 pyh6c4a22f_0",
   "soupsieve 2.5 pyhd8ed1ab_1",
   "tk 8.6.12 h8ffe710_0",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "tornado 6.3.3 py310h8d17308_1",
   "tqdm 4.66.1 pyhd8ed1ab_0",
   "traitlets 5.13.0 pyhd8ed1ab_0",
   "truststore 0.8.0 pyhd8ed1ab_0",
   "typing-extensions 4.8.0 hd8ed1ab_0",
   "typing_extensions 4.8.0 pyha770c72_0",
   "tzdata 2023c h71feb2d_0",
   "ucrt 10.0.22621.0 h57928b3_0",
   "urllib3 2.0.4 pyhd8ed1ab_0",
   "vc 14.3 h64f974e_17",
   "vc14_runtime 14.36.32532 hfdfe4a8_17",
   "vs2015_runtime 14.36.32532 h05e6639_17",
   "wheel 0.41.2 pyhd8ed1ab_0",
   "win_inet_pton 1.1.0 pyhd8ed1ab_6",
   "xorg-libxau 1.0.11 hcd874cb_0",
   "xorg-libxdmcp 1.1.3 hcd874cb_0",
   "xz 5.2.6 h8d14728_0",
   "yaml 0.2.5 h8ffe710_2",
   "yaml-cpp 0.8.0 h63175ca_0",
   "zipp 3.17.0 pyhd8ed1ab_0",
   "zstandard 0.19.0 py310h8d17308_0",
   "zstd 1.5.5 h12be248_0"
  ],
  "summary": "NVIDIA's cuDNN deep neural network acceleration library",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2019",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.2",
  "cudnn": "undefined",
  "cxx_compiler": "vs2019",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14",
  "zip_keys": [
   [
    "cuda_compiler",
    "cuda_compiler_version"
   ]
  ]
 },
 "conda_pkg_format": "2",
 "files": [
  "Library/bin/cudnn64_8.dll",
  "Library/bin/cudnn_adv_infer64_8.dll",
  "Library/bin/cudnn_adv_train64_8.dll",
  "Library/bin/cudnn_cnn_infer64_8.dll",
  "Library/bin/cudnn_cnn_train64_8.dll",
  "Library/bin/cudnn_ops_infer64_8.dll",
  "Library/bin/cudnn_ops_train64_8.dll",
  "Library/include/cudnn.h",
  "Library/include/cudnn_adv_infer.h",
  "Library/include/cudnn_adv_train.h",
  "Library/include/cudnn_backend.h",
  "Library/include/cudnn_cnn_infer.h",
  "Library/include/cudnn_cnn_train.h",
  "Library/include/cudnn_ops_infer.h",
  "Library/include/cudnn_ops_train.h",
  "Library/include/cudnn_version.h",
  "Library/lib/cudnn.lib",
  "Library/lib/cudnn64_8.lib",
  "Library/lib/cudnn_adv_infer.lib",
  "Library/lib/cudnn_adv_infer64_8.lib",
  "Library/lib/cudnn_adv_train.lib",
  "Library/lib/cudnn_adv_train64_8.lib",
  "Library/lib/cudnn_cnn_infer.lib",
  "Library/lib/cudnn_cnn_infer64_8.lib",
  "Library/lib/cudnn_cnn_train.lib",
  "Library/lib/cudnn_cnn_train64_8.lib",
  "Library/lib/cudnn_ops_infer.lib",
  "Library/lib/cudnn_ops_infer64_8.lib",
  "Library/lib/cudnn_ops_train.lib",
  "Library/lib/cudnn_ops_train64_8.lib",
  "Scripts/.cudnn-post-link.bat"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h9631440_4",
  "build_number": 4,
  "depends": [
   "cuda-version >=11.0,<12.0a0",
   "cudatoolkit 11.*",
   "libzlib-wapi >=1.2.13,<1.3.0a0",
   "ucrt >=10.0.20348.0",
   "vc >=14.2,<15",
   "vc14_runtime >=14.29.30139"
  ],
  "license": "LicenseRef-cuDNN-Software-License-Agreement",
  "name": "cudnn",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1700175295693,
  "version": "8.8.0.121"
 },
 "metadata_version": 1,
 "name": "cudnn",
 "raw_recipe": "{% set version = \"8.8.0.121\" %}\n{% set cuda_major = (cuda_compiler_version|default(\"12.0.0\")).split(\".\")[0] %}\n{% set platform = \"linux-x86_64\" %}  # [linux64]\n{% set platform = \"linux-ppc64le\" %}  # [ppc64le]\n{% set platform = \"linux-sbsa\" %}  # [aarch64]\n{% set platform = \"windows-x86_64\" %}  # [win]\n{% set extension = \"tar.xz\" %}  # [not win]\n{% set extension = \"zip\" %}  # [win]\n\npackage:\n  name: cudnn\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/{{ platform }}/cudnn-{{ platform }}-{{ version }}_cuda{{ cuda_major }}-archive.{{ extension }}\n  sha256: 62046476076d1b455fb13fb78b38d3496bacafbfdbb0494fb3392240a04466ea  # [linux64 and cuda_major == \"11\"]\n  sha256: a0792b666caaf593a9dd4130979578fd3a78230f4407645c295700ef8e7aaaf2  # [linux64 and cuda_major == \"12\"]\n  sha256: a019f2c8a300991d94d718a3524377d978efadaa62349858741f17ef859a9e55  # [aarch64 and cuda_major == \"11\"]\n  sha256: fc668519a8344e9d05335bad4bc5d23a504cdc7579aea41f12d6aa0f3079e709  # [aarch64 and cuda_major == \"12\"]\n  sha256: 521c4b6ef579582953e4df2f5fe95a106bfc6d9dc30c6ac26ed6fd92fd0767b9  # [ppc64le and cuda_major == \"11\"]\n  sha256: cd41ab8b61f5beb54e32c3668ecd311ce926c39006fba256b053dd7d248419d4  # [ppc64le and cuda_major == \"12\"]\n  sha256: 4f0105a51ac6ea947154e252c8b220baf3345803f55644b5aad84e22ae4f8986  # [win and cuda_major == \"11\"]\n  sha256: e362e1fbf6b101ad71aa5314f21d00a4353b90efbe5cdedc5fcfb0f3b68cd791  # [win and cuda_major == \"12\"]\n\nbuild:\n  number: 4\n  # TODO: Enable Windows with CUDA 12 when it is supported in CI\n  skip: True  # [win32 or osx or (win and cuda_major == \"12\")]\n  # Disable binary relocation to workaround patchelf issue\n  # xref: https://github.com/NixOS/patchelf/issues/492\n  binary_relocation: false\n  script:\n    - mkdir -p $PREFIX/include               # [linux]\n    - cp include/cudnn*.h $PREFIX/include/   # [linux]\n    - mkdir -p $PREFIX/lib                   # [linux]\n    - mv lib/libcudnn*.so* $PREFIX/lib/      # [linux]\n\n    - mkdir %LIBRARY_INC%                                   # [win]\n    - copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\     # [win]\n    - mkdir %LIBRARY_LIB%                                   # [win]\n    - copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\  # [win]\n    - mkdir %LIBRARY_BIN%                                   # [win]\n    - copy %SRC_DIR%\\\\bin\\\\cudnn*.dll %LIBRARY_BIN%\\\\       # [win]\n  ignore_run_exports:\n    - cudatoolkit\n  run_exports:\n    - {{ pin_subpackage('cudnn') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"12.0\"]\n    - arm-variant * {{ arm_variant_type }}  # [aarch64]\n    - sysroot_{{ target_platform }} 2.17  # [linux]\n  host:\n    - cuda-version {{ cuda_major }}.0\n    - patchelf >=0.12  # [linux]\n    # to suppress \".so not found\" errors\n    - libzlib       # [linux]\n    - libzlib-wapi  # [win64]\n  run:\n    - {{ pin_compatible(\"cuda-version\", max_pin=\"x\") }}\n    {% if cuda_major == \"11\" %}\n    - cudatoolkit 11.*\n    {% else %}\n    - cuda-nvrtc\n    - libcublas\n    {% endif %}\n  run_constrained:\n    - __glibc >=2.17                        # [linux and not aarch64]\n    - __glibc >=2.28                        # [linux and aarch64]\n    - arm-variant * {{ arm_variant_type }}  # [aarch64]\n\ntest:\n  requires:\n    - {{ compiler('c') }}  # [linux]\n  files:\n    - test_load_elf.c      # [linux]\n  commands:\n    - if not exist %LIBRARY_INC%/cudnn.h exit 1                       # [win]\n    - if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1             # [win]\n    - if not exist %LIBRARY_LIB%/cudnn.lib exit 1                     # [win]\n    - if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1           # [win]\n    - if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1                 # [win]\n    - if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1       # [win]\n    - test -f $PREFIX/include/cudnn.h                                 # [linux]\n    - test -f $PREFIX/include/cudnn_adv_train.h                       # [linux]\n    - test -f $PREFIX/lib/libcudnn.so                                 # [linux]\n    - test -f $PREFIX/lib/libcudnn_adv_train.so                       # [linux]\n    - ${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf   # [linux]\n    - for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done  # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cudnn\n  license: LicenseRef-cuDNN-Software-License-Agreement\n  license_file: LICENSE\n  license_url: https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n  summary: \"NVIDIA's cuDNN deep neural network acceleration library\"\n  description: |\n    NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\n    primitives for deep neural networks. It provides highly tuned\n    implementations of routines arising frequently in DNN applications.\n\n    License Agreements:- The packages are governed by the NVIDIA cuDNN\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuDNN EULA -\n    https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n  doc_url: https://docs.nvidia.com/deeplearning/cudnn/\n  dev_url: https://developer.nvidia.com/rdp/cudnn-download\n\nextra:\n  recipe-maintainers:\n    - adibbley\n    - bdice\n    - jakirkham\n    - vyasr\n",
 "rendered_recipe": {
  "about": {
   "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
   "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
   "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
   "home": "https://developer.nvidia.com/cudnn",
   "license": "LicenseRef-cuDNN-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
   "summary": "NVIDIA's cuDNN deep neural network acceleration library"
  },
  "build": {
   "binary_relocation": false,
   "ignore_run_exports": [
    "cudatoolkit"
   ],
   "number": "4",
   "run_exports": [
    "cudnn >=8.8.0.121,<9.0a0"
   ],
   "script": [
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*.dll %LIBRARY_BIN%\\\\"
   ],
   "string": "h9631440_4"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "flow_run_id": "azure_20231116.2.1",
   "recipe-maintainers": [
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr"
   ],
   "remote_url": "https://github.com/conda-forge/cudnn-feedstock",
   "sha": "3c09ce888d71fa15411ba9b259ed4f83d07d51de"
  },
  "package": {
   "name": "cudnn",
   "version": "8.8.0.121"
  },
  "requirements": {
   "build": [
    "nvcc_win-64 11.2 h043a383_23",
    "ucrt 10.0.22621.0 h57928b3_0",
    "vc 14.3 h64f974e_17",
    "vc14_runtime 14.36.32532 hdcecf7f_17",
    "vs2019_win-64 19.29.30139 he1865b1_17",
    "vswhere 3.1.4 h57928b3_0"
   ],
   "host": [
    "cuda-version 11.0 h6b8d8af_2",
    "libzlib-wapi 1.2.13 hcfcfb64_5",
    "ucrt 10.0.22621.0 h57928b3_0",
    "vc 14.3 h64f974e_17",
    "vc14_runtime 14.36.32532 hdcecf7f_17"
   ],
   "run": [
    "cuda-version >=11.0,<12.0a0",
    "cudatoolkit 11.*",
    "libzlib-wapi >=1.2.13,<1.3.0a0",
    "ucrt >=10.0.20348.0",
    "vc >=14.2,<15",
    "vc14_runtime >=14.29.30139"
   ],
   "run_constrained": []
  },
  "source": {
   "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-8.8.0.121_cuda11-archive.zip"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1"
   ],
   "files": null,
   "requires": null
  }
 },
 "version": "8.8.0.121"
}