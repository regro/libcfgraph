{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.27.0",
  "conda_version": "23.9.0",
  "description": "Use the meta-package x86_64-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "feedstock-name": "microarch-level",
   "final": true,
   "flow_run_id": "azure_20231107.3.1",
   "parent_recipe": {
    "name": "microarch-level-split",
    "path": "/home/conda/recipe_root",
    "version": "3"
   },
   "recipe-maintainers": [
    "isuruf"
   ],
   "remote_url": "https://github.com/conda-forge/microarch-level-feedstock",
   "sha": "f0aabd9302a612341ea110a8f8b324c17aebb01f"
  },
  "home": "https://github.com/conda-forge/microarch-level-feedstock",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "bzip2 1.0.8 h7f98852_4",
   "pyyaml 6.0.1 py310h2372a71_1",
   "jsonschema 4.19.2 pyhd8ed1ab_0",
   "tini 0.19.0 h166bdaf_1",
   "readline 8.2 h8228510_1",
   "lcms2 2.15 hb7c19ff_3",
   "typing_extensions 4.8.0 pyha770c72_0",
   "libxml2 2.11.5 h232c23b_1",
   "_openmp_mutex 4.5 2_gnu",
   "conda-build 3.27.0 py310hff52083_0",
   "requests 2.31.0 pyhd8ed1ab_0",
   "ld_impl_linux-64 2.40 h41732ed_0",
   "ca-certificates 2023.7.22 hbcca054_0",
   "platformdirs 3.11.0 pyhd8ed1ab_0",
   "cffi 1.16.0 py310h2fee648_0",
   "ruamel_yaml 0.15.80 py310h2372a71_1009",
   "perl 5.32.1 4_hd590300_perl5",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "truststore 0.8.0 pyhd8ed1ab_0",
   "libuuid 2.38.1 h0b41bf4_0",
   "chardet 5.2.0 py310hff52083_1",
   "freetype 2.12.1 h267a509_2",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "xorg-libxau 1.0.11 hd590300_0",
   "pycosat 0.6.6 py310h2372a71_0",
   "libwebp-base 1.3.2 hd590300_0",
   "jsonpointer 2.4 py310hff52083_3",
   "libssh2 1.11.0 h0841786_0",
   "pip 23.3.1 pyhd8ed1ab_0",
   "lz4-c 1.9.4 hcb278e6_0",
   "pluggy 1.3.0 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libffi 3.4.2 h7f98852_5",
   "click 8.1.7 unix_pyh707e725_0",
   "keyutils 1.6.1 h166bdaf_0",
   "six 1.16.0 pyh6c4a22f_0",
   "tk 8.6.13 h2797004_0",
   "brotli-python 1.1.0 py310hc6cd4ac_1",
   "zstandard 0.22.0 py310h1275a96_0",
   "su-exec 0.2 h166bdaf_1003",
   "pybind11-abi 4 hd8ed1ab_3",
   "libxcb 1.15 h0b41bf4_0",
   "archspec 0.2.1 pyhd8ed1ab_1",
   "ruamel.yaml 0.17.40 py310h2372a71_0",
   "ripgrep 13.0.0 he8a937b_3",
   "conda-package-streaming 0.9.0 pyhd8ed1ab_0",
   "psutil 5.9.5 py310h2372a71_1",
   "libgcc-ng 13.2.0 h807b86a_2",
   "mamba 1.5.3 py310h51d5547_1",
   "conda 23.9.0 py310hff52083_2",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "conda-package-handling 2.2.0 pyh38be061_0",
   "python_abi 3.10 4_cp310",
   "krb5 1.21.2 h659d440_0",
   "referencing 0.30.2 pyhd8ed1ab_0",
   "py-lief 0.12.3 py310hd8f1fbe_0",
   "pillow 10.1.0 py310h01dd4db_0",
   "libexpat 2.5.0 hcb278e6_1",
   "libzlib 1.2.13 hd590300_5",
   "libmamba 1.5.3 had39da4_1",
   "attrs 23.1.0 pyh71513ae_1",
   "jupyter_core 5.5.0 py310hff52083_0",
   "tzdata 2023c h71feb2d_0",
   "xz 5.2.6 h166bdaf_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_1",
   "charset-normalizer 3.3.2 pyhd8ed1ab_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "idna 3.4 pyhd8ed1ab_0",
   "packaging 23.2 pyhd8ed1ab_0",
   "fmt 10.1.1 h00ab1b0_0",
   "openjpeg 2.5.0 h488ebb8_3",
   "pcre2 10.40 hc3806b6_0",
   "python-fastjsonschema 2.18.1 pyhd8ed1ab_0",
   "libev 4.33 h516909a_1",
   "libsqlite 3.44.0 h2797004_0",
   "icu 73.2 h59595ed_0",
   "lerc 4.0.0 h27087fc_0",
   "markupsafe 2.1.3 py310h2372a71_1",
   "reproc 14.2.4.post0 hd590300_1",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "libpng 1.6.39 h753d276_0",
   "libnghttp2 1.55.1 h47da74e_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "git 2.42.0 pl5321h86e50cf_0",
   "libjpeg-turbo 3.0.0 hd590300_1",
   "ncurses 6.4 h59595ed_2",
   "conda-pack 0.7.1 pyhd8ed1ab_0",
   "certifi 2023.7.22 pyhd8ed1ab_0",
   "openssl 3.1.4 hd590300_0",
   "pytz 2023.3.post1 pyhd8ed1ab_0",
   "gettext 0.21.1 h27087fc_0",
   "libcurl 8.4.0 hca28451_0",
   "rpds-py 0.12.0 py310hcb5633a_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "tornado 6.3.3 py310h2372a71_1",
   "conda-libmamba-solver 23.11.0 pyhd8ed1ab_0",
   "libnsl 2.0.1 hd590300_0",
   "nbformat 5.9.2 pyhd8ed1ab_0",
   "pthread-stubs 0.4 h36c2ea0_1001",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "tqdm 4.66.1 pyhd8ed1ab_0",
   "libarchive 3.7.2 h039dbb9_0",
   "anaconda-client 1.12.1 pyhd8ed1ab_1",
   "pycparser 2.21 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "clyent 1.2.2 py_1",
   "yaml-cpp 0.8.0 h59595ed_0",
   "reproc-cpp 14.2.4.post0 h59595ed_1",
   "libtiff 4.6.0 ha9c0a0a_2",
   "patch 2.7.6 h7f98852_1002",
   "zstd 1.5.5 hfc55251_0",
   "c-ares 1.21.0 hd590300_0",
   "curl 8.4.0 hca28451_0",
   "python 3.10.13 hd12c33a_0_cpython",
   "jsonschema-specifications 2023.7.1 pyhd8ed1ab_0",
   "libdeflate 1.19 hd590300_0",
   "typing-extensions 4.8.0 hd8ed1ab_0",
   "jsonpatch 1.33 pyhd8ed1ab_0",
   "xorg-libxdmcp 1.1.3 h7f98852_0",
   "libmambapy 1.5.3 py310h39ff949_1",
   "importlib_resources 6.1.0 pyhd8ed1ab_0",
   "setuptools 68.2.2 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "libgomp 13.2.0 h807b86a_2",
   "ruamel.yaml.clib 0.2.7 py310h2372a71_2",
   "pysocks 1.7.1 pyha2e5f31_6",
   "pyopenssl 23.3.0 pyhd8ed1ab_0",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "wheel 0.41.3 pyhd8ed1ab_0",
   "python-libarchive-c 5.0 py310hff52083_2",
   "conda-index 0.3.0 pyhd8ed1ab_1",
   "patchelf 0.17.2 h58526e2_0",
   "libstdcxx-ng 13.2.0 h7e041cc_2",
   "libsolv 0.7.25 hfc55251_0",
   "liblief 0.12.3 h27087fc_0",
   "zipp 3.17.0 pyhd8ed1ab_0",
   "traitlets 5.13.0 pyhd8ed1ab_0",
   "soupsieve 2.5 pyhd8ed1ab_1",
   "yaml 0.2.5 h7f98852_2",
   "more-itertools 10.1.0 pyhd8ed1ab_0",
   "libiconv 1.17 h166bdaf_0",
   "urllib3 2.0.7 pyhd8ed1ab_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "cryptography 41.0.5 py310h75e40e8_0",
   "filelock 3.13.1 pyhd8ed1ab_0",
   "lzo 2.10 h516909a_1000",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000",
   "conda-forge-metadata 0.6.1 pyhd8ed1ab_0",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "oniguruma 6.9.9 hd590300_0",
   "conda-forge-ci-setup 4.0.1 py310h7a2d8a0_100",
   "conda-env 2.6.0 1"
  ],
  "summary": "Meta package to build conda recipes with microarchitecture levels",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "family": "x86_64",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "level": "3",
  "lua": "5",
  "microarchitecture": "broadwell",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "microarchitecture",
    "level",
    "family"
   ]
  ]
 },
 "conda_pkg_format": "2",
 "files": [
  "etc/conda/activate.d/~activate-x86_64-level.sh"
 ],
 "index": {
  "arch": null,
  "build": "1_broadwell",
  "build_number": 1,
  "depends": [
   "__unix"
  ],
  "license": "BSD-3-Clause",
  "name": "x86_64-microarch-level",
  "noarch": "generic",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1699400138518,
  "version": "3"
 },
 "metadata_version": 1,
 "name": "x86_64-microarch-level",
 "raw_recipe": "# This file created by conda-build 3.27.0\n# ------------------------------------------------\n\npackage:\n  name: x86_64-microarch-level\n  version: '3'\nbuild:\n  noarch: generic\n  number: 1\n  run_exports:\n    strong:\n      - _x86_64-microarch-level >=3\n  string: 1_broadwell\nrequirements:\n  build: []\n  run:\n    - __unix\nabout:\n  description: 'Use the meta-package x86_64-microarch-level in requirements/build\n    in conda\n\n    recipes to set up the compiler flags and set up the virtual package\n\n    requirements in the run requirements.\n\n\n    When building packages on CI, level=4 will not be guaranteed, so\n\n    you can only use level<=3 to build.\n\n\n    The run_exports only has a lower bound and therefore a level=2\n\n    build can be installed on a level=3 user system. A tighter bound\n\n    is not added because we want to be able to test both level=2 and\n\n    level=3 on a CI machine with level=3.\n\n    Therefore in order to prioritise the highest level, use the build\n\n    number to prioritise the level.\n\n\n    Only supported on Linux and macOS.\n\n    '\n  home: https://github.com/conda-forge/microarch-level-feedstock\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n  summary: Meta package to build conda recipes with microarchitecture levels\nextra:\n  copy_test_source_files: true\n  feedstock-name: microarch-level\n  final: true\n  flow_run_id: azure_20231107.3.1\n  recipe-maintainers:\n    - isuruf\n  remote_url: https://github.com/conda-forge/microarch-level-feedstock\n  sha: f0aabd9302a612341ea110a8f8b324c17aebb01f\n",
 "rendered_recipe": {
  "about": {
   "description": "Use the meta-package x86_64-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
   "home": "https://github.com/conda-forge/microarch-level-feedstock",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Meta package to build conda recipes with microarchitecture levels"
  },
  "build": {
   "noarch": "generic",
   "number": 1,
   "run_exports": {
    "strong": [
     "_x86_64-microarch-level >=3"
    ]
   },
   "string": "1_broadwell"
  },
  "extra": {
   "copy_test_source_files": true,
   "feedstock-name": "microarch-level",
   "final": true,
   "flow_run_id": "azure_20231107.3.1",
   "recipe-maintainers": [
    "isuruf"
   ],
   "remote_url": "https://github.com/conda-forge/microarch-level-feedstock",
   "sha": "f0aabd9302a612341ea110a8f8b324c17aebb01f"
  },
  "package": {
   "name": "x86_64-microarch-level",
   "version": "3"
  },
  "requirements": {
   "build": [],
   "run": [
    "__unix"
   ]
  }
 },
 "version": "3"
}