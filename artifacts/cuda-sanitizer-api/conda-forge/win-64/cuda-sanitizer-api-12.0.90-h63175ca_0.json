{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.25.0",
  "conda_version": "23.1.0",
  "description": "Provides a set of APIs to enable third-party tools to write GPU sanitizing\ntools, such as memory and race checkers.\n",
  "doc_url": "https://docs.nvidia.com/compute-sanitizer/SanitizerApiGuide/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "adibbley"
   ]
  },
  "home": "https://docs.nvidia.com/compute-sanitizer/SanitizerApiGuide/index.html",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
  "license_file": "LICENSE",
  "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
  "root_pkgs": [
   "anaconda-client 1.11.3 pyhd8ed1ab_0",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "anyio 3.7.0 pyhd8ed1ab_1",
   "attrs 23.1.0 pyh71513ae_1",
   "backports 1.0 pyhd8ed1ab_3",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "boa 0.15.1 pyhd8ed1ab_0",
   "brotlipy 0.7.0 py310h8d17308_1005",
   "bzip2 1.0.8 h8ffe710_4",
   "ca-certificates 2023.5.7 h56e8100_0",
   "certifi 2023.5.7 pyhd8ed1ab_0",
   "cffi 1.15.1 py310h628cb3f_3",
   "chardet 5.1.0 py310h5588dad_0",
   "charset-normalizer 3.1.0 pyhd8ed1ab_0",
   "click 8.1.3 win_pyhd8ed1ab_2",
   "clyent 1.2.2 py_1",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "conda 23.1.0 py310h5588dad_0",
   "conda-build 3.25.0 py310h5588dad_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.31.1 py310hcfc216e_100",
   "conda-forge-metadata 0.5.0 pyhd8ed1ab_0",
   "conda-index 0.2.3 pyhd8ed1ab_0",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "conda-pack 0.7.0 pyh6c4a22f_0",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "cryptography 40.0.1 py310h6e82f81_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "exceptiongroup 1.1.1 pyhd8ed1ab_0",
   "filelock 3.12.2 pyhd8ed1ab_0",
   "fmt 9.1.0 h181d51b_0",
   "freetype 2.12.1 h546665d_1",
   "glob2 0.7 py_0",
   "idna 3.4 pyhd8ed1ab_0",
   "importlib-metadata 6.7.0 pyha770c72_0",
   "importlib_resources 5.12.0 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "jupyter_core 5.3.1 py310h5588dad_0",
   "krb5 1.20.1 heb0366b_0",
   "lcms2 2.15 h3e3b177_1",
   "lerc 4.0.0 h63175ca_0",
   "libarchive 3.6.2 h27c7867_0",
   "libcurl 7.88.1 h68f0423_1",
   "libdeflate 1.18 hcfcfb64_0",
   "libffi 3.4.2 h8ffe710_5",
   "libiconv 1.17 h8ffe710_0",
   "libjpeg-turbo 2.1.5.1 hcfcfb64_0",
   "liblief 0.12.3 h63175ca_0",
   "libmamba 1.4.1 h8a7d157_0",
   "libmambapy 1.4.1 py310h3fe4c2e_0",
   "libpng 1.6.39 h19919ed_0",
   "libsolv 0.7.23 h12be248_0",
   "libsqlite 3.40.0 hcfcfb64_0",
   "libssh2 1.10.0 h9a1e1f7_3",
   "libtiff 4.5.1 h6c8260b_0",
   "libwebp-base 1.3.0 hcfcfb64_0",
   "libxcb 1.15 hcd874cb_0",
   "libxml2 2.10.3 hc3477c8_6",
   "libzlib 1.2.13 hcfcfb64_4",
   "lz4-c 1.9.4 hcfcfb64_0",
   "lzo 2.10 he774522_1000",
   "m2-bash 4.3.042 5",
   "m2-ca-certificates 20150426 103",
   "m2-coreutils 8.25 102",
   "m2-curl 7.47.1 3",
   "m2-db 5.3.28 3",
   "m2-expat 2.1.1 2",
   "m2-findutils 4.6.0 2",
   "m2-gcc-libs 5.3.0 4",
   "m2-gdbm 1.11 4",
   "m2-git 2.8.1 2",
   "m2-gmp 6.1.0 3",
   "m2-gzip 1.7 2",
   "m2-heimdal 1.5.3 10",
   "m2-heimdal-libs 1.5.3 10",
   "m2-icu 56.1 2",
   "m2-info 6.0 2",
   "m2-less 481 2",
   "m2-libcrypt 1.3 2",
   "m2-libcurl 7.47.1 3",
   "m2-libdb 5.3.28 3",
   "m2-libedit 3.1 20150326",
   "m2-libexpat 2.1.1 2",
   "m2-libffi 3.2.1 2",
   "m2-libgdbm 1.11 4",
   "m2-libiconv 1.14 3",
   "m2-libidn 1.32 2",
   "m2-libintl 0.19.7 4",
   "m2-libmetalink 0.1.2 3",
   "m2-libopenssl 1.0.2.g 2",
   "m2-libp11-kit 0.23.2 2",
   "m2-libpcre 8.38 2",
   "m2-libreadline 6.3.008 8",
   "m2-libsqlite 3.10.0.0 2",
   "m2-libssh2 1.6.0 2",
   "m2-libtasn1 4.7 2",
   "m2-msys2-runtime 2.5.0.17080.65c939c 3",
   "m2-ncurses 6.0.20160220 2",
   "m2-openssh 7.1p2 2",
   "m2-openssl 1.0.2.g 2",
   "m2-p11-kit 0.23.2 2",
   "m2-patch 2.7.5 2",
   "m2-perl 5.22.1 2",
   "m2-perl-authen-sasl 2.16 3",
   "m2-perl-convert-binhex 1.123 3",
   "m2-perl-encode-locale 1.04 2",
   "m2-perl-error 0.17024 2",
   "m2-perl-file-listing 6.04 3",
   "m2-perl-html-parser 3.71 4",
   "m2-perl-html-tagset 3.20 3",
   "m2-perl-http-cookies 6.01 3",
   "m2-perl-http-daemon 6.01 3",
   "m2-perl-http-date 6.02 3",
   "m2-perl-http-message 6.06 3",
   "m2-perl-http-negotiate 6.01 3",
   "m2-perl-io-socket-ssl 2.016 2",
   "m2-perl-io-stringy 2.111 2",
   "m2-perl-libwww 6.13 2",
   "m2-perl-lwp-mediatypes 6.02 3",
   "m2-perl-mailtools 2.14 2",
   "m2-perl-mime-tools 5.506 2",
   "m2-perl-net-http 6.09 2",
   "m2-perl-net-smtp-ssl 1.02 2",
   "m2-perl-net-ssleay 1.72 2",
   "m2-perl-termreadkey 2.33 2",
   "m2-perl-timedate 2.30 3",
   "m2-perl-uri 1.68 2",
   "m2-perl-www-robotrules 6.02 3",
   "m2-sed 4.2.2 3",
   "m2-vim 7.4.1721 2",
   "m2-zlib 1.2.8 4",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "mamba 1.4.1 py310hd9d798f_0",
   "markdown-it-py 3.0.0 pyhd8ed1ab_0",
   "markupsafe 2.1.3 py310h8d17308_0",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "menuinst 1.4.19 py310h5588dad_1",
   "miniforge_console_shortcut 1.0 h57928b3_0",
   "more-itertools 9.1.0 pyhd8ed1ab_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 5.9.0 pyhd8ed1ab_0",
   "openjpeg 2.5.0 ha2aaf27_2",
   "openssl 3.1.1 hcfcfb64_1",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "packaging 23.1 pyhd8ed1ab_0",
   "pillow 9.5.0 py310hb653ca7_1",
   "pip 23.0.1 pyhd8ed1ab_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "platformdirs 3.6.0 pyhd8ed1ab_0",
   "pluggy 1.0.0 pyhd8ed1ab_5",
   "prompt-toolkit 3.0.38 pyha770c72_0",
   "prompt_toolkit 3.0.38 hd8ed1ab_0",
   "psutil 5.9.5 py310h8d17308_0",
   "pthread-stubs 0.4 hcd874cb_1001",
   "py-lief 0.12.3 py310h00ffb61_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "pycosat 0.6.4 py310h8d17308_1",
   "pycparser 2.21 pyhd8ed1ab_0",
   "pygments 2.15.1 pyhd8ed1ab_0",
   "pyopenssl 23.1.1 pyhd8ed1ab_0",
   "pyrsistent 0.19.3 py310h8d17308_0",
   "pysocks 1.7.1 pyh0701188_6",
   "python 3.10.10 h4de0772_0_cpython",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "python-fastjsonschema 2.17.1 pyhd8ed1ab_0",
   "python-libarchive-c 4.0 py310h5588dad_2",
   "python_abi 3.10 3_cp310",
   "pytz 2023.3 pyhd8ed1ab_0",
   "pywin32 304 py310h00ffb61_2",
   "pyyaml 6.0 py310h8d17308_5",
   "reproc 14.2.4 hcfcfb64_0",
   "reproc-cpp 14.2.4 h63175ca_0",
   "requests 2.28.2 pyhd8ed1ab_1",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "rich 13.4.2 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h7f3b576_2",
   "ruamel.yaml 0.17.21 py310h8d17308_3",
   "ruamel.yaml.clib 0.2.7 py310h8d17308_1",
   "ruamel_yaml 0.15.80 py310h8d17308_1008",
   "setuptools 65.6.3 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "six 1.16.0 pyh6c4a22f_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "tk 8.6.12 h8ffe710_0",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "tornado 6.3.2 py310h8d17308_0",
   "tqdm 4.65.0 pyhd8ed1ab_1",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "typing-extensions 4.6.3 hd8ed1ab_0",
   "typing_extensions 4.6.3 pyha770c72_0",
   "tzdata 2023c h71feb2d_0",
   "ucrt 10.0.22621.0 h57928b3_0",
   "urllib3 1.26.15 pyhd8ed1ab_0",
   "vc 14.3 hb6edc58_10",
   "vc14_runtime 14.34.31931 h5081d32_13",
   "vs2015_runtime 14.34.31931 h4c5c07a_10",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "wheel 0.40.0 pyhd8ed1ab_0",
   "win_inet_pton 1.1.0 pyhd8ed1ab_6",
   "xorg-libxau 1.0.11 hcd874cb_0",
   "xorg-libxdmcp 1.1.3 hcd874cb_0",
   "xz 5.2.6 h8d14728_0",
   "yaml 0.2.5 h8ffe710_2",
   "yaml-cpp 0.7.0 h63175ca_2",
   "zipp 3.15.0 pyhd8ed1ab_0",
   "zstandard 0.19.0 py310h0009e47_1",
   "zstd 1.5.2 h12be248_6"
  ],
  "summary": "Provides a set of APIs to enable third party tools to write GPU sanitizing tools",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2019",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2019",
  "extend_keys": [
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "conda_pkg_format": "2",
 "files": [
  "Library/compute-sanitizer/EnableDebuggerInterface.bat",
  "Library/compute-sanitizer/InterceptorInjectionTarget.dll",
  "Library/compute-sanitizer/TreeLauncherTargetInjection.dll",
  "Library/compute-sanitizer/compute-sanitizer.exe",
  "Library/compute-sanitizer/docs/ComputeSanitizer/graphics/no-padding.png",
  "Library/compute-sanitizer/docs/ComputeSanitizer/graphics/padding.png",
  "Library/compute-sanitizer/docs/ComputeSanitizer/graphics/use-after-free.png",
  "Library/compute-sanitizer/docs/ComputeSanitizer/graphics/use-before-alloc.png",
  "Library/compute-sanitizer/docs/ComputeSanitizer/index.html",
  "Library/compute-sanitizer/docs/CopyrightAndLicenses/index.html",
  "Library/compute-sanitizer/docs/ReleaseNotes/index.html",
  "Library/compute-sanitizer/docs/SanitizerApi/annotated.html",
  "Library/compute-sanitizer/docs/SanitizerApi/classes.html",
  "Library/compute-sanitizer/docs/SanitizerApi/doxygen.css",
  "Library/compute-sanitizer/docs/SanitizerApi/doxygen.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2blank.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2doc.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2folderclosed.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2folderopen.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2lastnode.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2link.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2mlastnode.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2mnode.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2node.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2plastnode.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2pnode.png",
  "Library/compute-sanitizer/docs/SanitizerApi/ftv2vertline.png",
  "Library/compute-sanitizer/docs/SanitizerApi/functions.html",
  "Library/compute-sanitizer/docs/SanitizerApi/functions_vars.html",
  "Library/compute-sanitizer/docs/SanitizerApi/group__SANITIZER__BARRIER__API.html",
  "Library/compute-sanitizer/docs/SanitizerApi/group__SANITIZER__CALLBACK__API.html",
  "Library/compute-sanitizer/docs/SanitizerApi/group__SANITIZER__MEMORY__API.html",
  "Library/compute-sanitizer/docs/SanitizerApi/group__SANITIZER__PATCHING__API.html",
  "Library/compute-sanitizer/docs/SanitizerApi/group__SANITIZER__RESULT__API.html",
  "Library/compute-sanitizer/docs/SanitizerApi/group__SANITIZER__STREAM__API.html",
  "Library/compute-sanitizer/docs/SanitizerApi/index.html",
  "Library/compute-sanitizer/docs/SanitizerApi/modules.html",
  "Library/compute-sanitizer/docs/SanitizerApi/notices-header.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__BatchMemopData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__CallbackData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__EventData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__GraphExecData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__GraphLaunchData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__GraphNodeLaunchData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__LaunchData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__MemcpyData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__MemsetData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__ResourceArrayData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__ResourceContextData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__ResourceFunctionsLazyLoadedData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__ResourceMemoryData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__ResourceMempoolData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__ResourceModuleData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__ResourceStreamData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__SynchronizeData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/structSanitizer__UvmData.html",
  "Library/compute-sanitizer/docs/SanitizerApi/tab_b.gif",
  "Library/compute-sanitizer/docs/SanitizerApi/tab_l.gif",
  "Library/compute-sanitizer/docs/SanitizerApi/tab_r.gif",
  "Library/compute-sanitizer/docs/SanitizerApi/tabs.css",
  "Library/compute-sanitizer/docs/SanitizerApiGuide/index.html",
  "Library/compute-sanitizer/docs/SanitizerNvtxGuide/index.html",
  "Library/compute-sanitizer/docs/common/formatting/bg-head.png",
  "Library/compute-sanitizer/docs/common/formatting/bg-horiz.png",
  "Library/compute-sanitizer/docs/common/formatting/bg-left.png",
  "Library/compute-sanitizer/docs/common/formatting/bg-right.png",
  "Library/compute-sanitizer/docs/common/formatting/bg-sidehead-glow.png",
  "Library/compute-sanitizer/docs/common/formatting/bg-sidehead.png",
  "Library/compute-sanitizer/docs/common/formatting/bg-vert.png",
  "Library/compute-sanitizer/docs/common/formatting/common.min.js",
  "Library/compute-sanitizer/docs/common/formatting/commonltr.css",
  "Library/compute-sanitizer/docs/common/formatting/cppapiref.css",
  "Library/compute-sanitizer/docs/common/formatting/cuda-toolkit-documentation.png",
  "Library/compute-sanitizer/docs/common/formatting/devtools-documentation.png",
  "Library/compute-sanitizer/docs/common/formatting/devzone.png",
  "Library/compute-sanitizer/docs/common/formatting/dita.style.css",
  "Library/compute-sanitizer/docs/common/formatting/html5shiv-printshiv.min.js",
  "Library/compute-sanitizer/docs/common/formatting/jquery.ba-hashchange.min.js",
  "Library/compute-sanitizer/docs/common/formatting/jquery.min.js",
  "Library/compute-sanitizer/docs/common/formatting/jquery.scrollintoview.min.js",
  "Library/compute-sanitizer/docs/common/formatting/magnify-dropdown.png",
  "Library/compute-sanitizer/docs/common/formatting/magnify.png",
  "Library/compute-sanitizer/docs/common/formatting/nvidia.png",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-Splus.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-aea.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-agc.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-apollo.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-basic.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-cbm.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-cl.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-clj.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-css.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-dart.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-el.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-erl.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-erlang.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-fs.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-go.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-hs.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-lasso.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-lassoscript.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-latex.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-lgt.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-lisp.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-ll.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-llvm.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-logtalk.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-ls.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-lsp.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-lua.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-matlab.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-ml.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-mumps.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-n.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-nemerle.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-pascal.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-proto.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-r.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-rd.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-rkt.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-rust.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-s.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-scala.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-scm.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-sql.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-ss.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-swift.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-tcl.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-tex.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-vb.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-vbs.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-vhd.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-vhdl.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-wiki.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-xq.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-xquery.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-yaml.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/lang-yml.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/onLoad.png",
  "Library/compute-sanitizer/docs/common/formatting/prettify/prettify.css",
  "Library/compute-sanitizer/docs/common/formatting/prettify/prettify.js",
  "Library/compute-sanitizer/docs/common/formatting/prettify/run_prettify.js",
  "Library/compute-sanitizer/docs/common/formatting/qwcode.highlight.css",
  "Library/compute-sanitizer/docs/common/formatting/search-clear.png",
  "Library/compute-sanitizer/docs/common/formatting/site.css",
  "Library/compute-sanitizer/docs/common/scripts/google-analytics/google-analytics-tracker.js",
  "Library/compute-sanitizer/docs/common/scripts/google-analytics/google-analytics-write.js",
  "Library/compute-sanitizer/docs/common/scripts/tynt/tynt.js",
  "Library/compute-sanitizer/docs/index.html",
  "Library/compute-sanitizer/docs/pdf/ComputeSanitizer.pdf",
  "Library/compute-sanitizer/docs/pdf/CopyrightAndLicenses.pdf",
  "Library/compute-sanitizer/docs/pdf/ReleaseNotes.pdf",
  "Library/compute-sanitizer/docs/pdf/SanitizerApiGuide.pdf",
  "Library/compute-sanitizer/docs/pdf/SanitizerNvtxGuide.pdf",
  "Library/compute-sanitizer/docs/search/check.html",
  "Library/compute-sanitizer/docs/search/files.js",
  "Library/compute-sanitizer/docs/search/htmlFileInfoList.js",
  "Library/compute-sanitizer/docs/search/htmlFileList.js",
  "Library/compute-sanitizer/docs/search/index-1.js",
  "Library/compute-sanitizer/docs/search/index-2.js",
  "Library/compute-sanitizer/docs/search/index-3.js",
  "Library/compute-sanitizer/docs/search/nwSearchFnt.min.js",
  "Library/compute-sanitizer/docs/search/stemmers/en_stemmer.min.js",
  "Library/compute-sanitizer/include/generated_cudaD3D10_meta.h",
  "Library/compute-sanitizer/include/generated_cudaD3D11_meta.h",
  "Library/compute-sanitizer/include/generated_cudaD3D9_meta.h",
  "Library/compute-sanitizer/include/generated_cudaGL_meta.h",
  "Library/compute-sanitizer/include/generated_cuda_d3d10_interop_meta.h",
  "Library/compute-sanitizer/include/generated_cuda_d3d11_interop_meta.h",
  "Library/compute-sanitizer/include/generated_cuda_d3d9_interop_meta.h",
  "Library/compute-sanitizer/include/generated_cuda_gl_interop_meta.h",
  "Library/compute-sanitizer/include/generated_cuda_meta.h",
  "Library/compute-sanitizer/include/generated_cuda_profiler_api_meta.h",
  "Library/compute-sanitizer/include/generated_cuda_runtime_api_meta.h",
  "Library/compute-sanitizer/include/sanitizer.h",
  "Library/compute-sanitizer/include/sanitizer_barrier.h",
  "Library/compute-sanitizer/include/sanitizer_callbacks.h",
  "Library/compute-sanitizer/include/sanitizer_driver_cbid.h",
  "Library/compute-sanitizer/include/sanitizer_memory.h",
  "Library/compute-sanitizer/include/sanitizer_patching.h",
  "Library/compute-sanitizer/include/sanitizer_result.h",
  "Library/compute-sanitizer/include/sanitizer_runtime_cbid.h",
  "Library/compute-sanitizer/include/sanitizer_stream.h",
  "Library/compute-sanitizer/sanitizer-collection.dll",
  "Library/compute-sanitizer/sanitizer-public.dll",
  "Library/compute-sanitizer/sanitizer-public.lib",
  "Scripts/compute-sanitizer.bat"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h63175ca_0",
  "build_number": 0,
  "depends": [
   "cuda-version >=12.0,<12.1.0a0",
   "ucrt >=10.0.20348.0",
   "vc >=14.2,<15",
   "vc14_runtime >=14.29.30139"
  ],
  "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
  "name": "cuda-sanitizer-api",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1687501974337,
  "version": "12.0.90"
 },
 "metadata_version": 1,
 "name": "cuda-sanitizer-api",
 "raw_recipe": "{% set name = \"cuda-sanitizer-api\" %}\n{% set version = \"12.0.90\" %}\n{% set cuda_version = \"12.0\" %}\n{% set platform = \"linux-x86_64\" %}  # [linux64]\n{% set platform = \"linux-ppc64le\" %}  # [ppc64le]\n{% set platform = \"linux-sbsa\" %}  # [aarch64]\n{% set platform = \"windows-x86_64\" %}  # [win]\n{% set extension = \"tar.xz\" %}  # [not win]\n{% set extension = \"zip\" %}  # [win]\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_sanitizer_api/{{ platform }}/cuda_sanitizer_api-{{ platform }}-{{ version }}-archive.{{ extension }}\n  sha256: 80e23d82bf4a0bb79c564104121467bd0d15f0142e1dc4fff36bb491bc4b3d4f  # [linux64]\n  sha256: 50d66cab58c7b8aa8473b36844669ee2ea7fc85ad92d49473b30214de22c2d25  # [ppc64le]\n  sha256: c872f56fa4a0ce50f8acf5f154d73d0c7a3290e9fa7ffa0b368fbdae3d1435b9  # [aarch64]\n  sha256: cdb48694de35aed5576aaf81f2443d12791a346d7a186e2c37e7606e252ef4e4  # [win]\n\nbuild:\n  number: 0\n  skip: true  # [osx]\n  missing_dso_whitelist:\n    - '$RPATH/libInterceptorInjectionTarget.so'  # [linux]\n    - '$RPATH/InterceptorInjectionTarget.dll'    # [win]\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - arm-variant * {{ arm_variant_type }}  # [aarch64]\n  host:\n    - cuda-version {{ cuda_version }}\n  run:\n    - {{ pin_compatible(\"cuda-version\", max_pin=\"x.x\") }}\n  run_constrained:\n    - arm-variant * {{ arm_variant_type }}  # [aarch64]\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/compute-sanitizer                                         # [linux]\n    - test -f $PREFIX/compute-sanitizer/compute-sanitizer                           # [linux]\n    - if not exist %LIBRARY_PREFIX%\\compute-sanitizer\\compute-sanitizer.exe exit 1  # [win]\n    - if not exist %PREFIX%\\Scripts\\compute-sanitizer.bat exit 1                           # [win]\n    - compute-sanitizer --version\n\nabout:\n  home: https://docs.nvidia.com/compute-sanitizer/SanitizerApiGuide/index.html\n  license_file: LICENSE\n  license: LicenseRef-NVIDIA-End-User-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/eula/index.html\n  summary: Provides a set of APIs to enable third party tools to write GPU sanitizing tools\n  description: |\n    Provides a set of APIs to enable third-party tools to write GPU sanitizing\n    tools, such as memory and race checkers.\n  doc_url: https://docs.nvidia.com/compute-sanitizer/SanitizerApiGuide/index.html\n\nextra:\n  recipe-maintainers:\n    - adibbley\n",
 "rendered_recipe": {
  "about": {
   "description": "Provides a set of APIs to enable third-party tools to write GPU sanitizing\ntools, such as memory and race checkers.\n",
   "doc_url": "https://docs.nvidia.com/compute-sanitizer/SanitizerApiGuide/index.html",
   "home": "https://docs.nvidia.com/compute-sanitizer/SanitizerApiGuide/index.html",
   "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
   "summary": "Provides a set of APIs to enable third party tools to write GPU sanitizing tools"
  },
  "build": {
   "missing_dso_whitelist": [
    "$RPATH/InterceptorInjectionTarget.dll"
   ],
   "number": "0",
   "string": "h63175ca_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "adibbley"
   ]
  },
  "package": {
   "name": "cuda-sanitizer-api",
   "version": "12.0.90"
  },
  "requirements": {
   "build": [
    "vs2019_win-64 19.29.30139 he1865b1_16",
    "vswhere 3.1.4 h57928b3_0"
   ],
   "host": [
    "cuda-version 12.0 hffde075_2",
    "ucrt 10.0.22621.0 h57928b3_0",
    "vc 14.3 hb25d44b_16",
    "vc14_runtime 14.34.31931 h5081d32_16"
   ],
   "run": [
    "cuda-version >=12.0,<12.1.0a0",
    "ucrt >=10.0.20348.0",
    "vc >=14.2,<15",
    "vc14_runtime >=14.29.30139"
   ],
   "run_constrained": []
  },
  "source": {
   "sha256": "cdb48694de35aed5576aaf81f2443d12791a346d7a186e2c37e7606e252ef4e4",
   "url": "https://developer.download.nvidia.com/compute/cuda/redist/cuda_sanitizer_api/windows-x86_64/cuda_sanitizer_api-windows-x86_64-12.0.90-archive.zip"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_PREFIX%\\compute-sanitizer\\compute-sanitizer.exe exit 1",
    "if not exist %PREFIX%\\Scripts\\compute-sanitizer.bat exit 1",
    "compute-sanitizer --version"
   ]
  }
 },
 "version": "12.0.90"
}