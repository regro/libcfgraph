{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.25.0",
  "conda_version": "23.1.0",
  "description": "The compiled language is a strict, gradually typed Python variant. It\nrestricts the use of some dynamic Python features to gain performance,\nbut it's mostly compatible with standard Python.\n\nMypyc uses mypy to perform type checking and type inference. Most type\nsystem features in the stdlib typing module are supported.\n\nCompiled modules can import arbitrary Python modules and third-party\nlibraries. You can compile anything from a single performance-critical\nmodule to your entire codebase. You can run the modules you compile also\nas normal, interpreted Python modules.\n\nExisting code with type annotations is often 1.5x to 5x faster when\ncompiled. Code tuned for mypyc can be 5x to 10x faster.\n\nMypyc currently aims to speed up non-numeric code, such as server\napplications. Mypyc is also used to compile itself (and mypy).",
  "dev_url": "https://github.com/python/mypy/blob/master/mypyc",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "feedstock-name": "mypy",
   "final": true,
   "parent_recipe": {
    "name": "mypy-split",
    "path": "/Users/runner/work/1/s/recipe",
    "version": "1.4.1"
   },
   "recipe-maintainers": [
    "nehaljwani",
    "ocefpaf",
    "matthiasdiener",
    "bollwyvl"
   ]
  },
  "home": "https://mypyc.readthedocs.io",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "pip 23.1.2 pyhd8ed1ab_0",
   "xorg-libxau 1.0.11 h0dc2134_0",
   "gettext 0.21.1 h8a4c099_0",
   "urllib3 1.26.15 pyhd8ed1ab_0",
   "pthread-stubs 0.4 hc929b4f_1001",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "curl 7.88.1 h6df9250_1",
   "pygments 2.15.1 pyhd8ed1ab_0",
   "libsolv 0.7.23 hbc0c0cd_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "jq 1.6 hc929b4f_1000",
   "icu 72.1 h7336db1_0",
   "packaging 23.1 pyhd8ed1ab_0",
   "yaml 0.2.5 h0d85af4_2",
   "pillow 9.5.0 py310hd63a8c7_1",
   "rich 13.4.2 pyhd8ed1ab_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "openssl 3.1.1 h8a1eda9_1",
   "prompt-toolkit 3.0.38 pyha770c72_0",
   "ruamel.yaml 0.17.21 py310h90acd4f_3",
   "pyyaml 6.0 py310h90acd4f_5",
   "conda-index 0.2.3 pyhd8ed1ab_0",
   "openjpeg 2.5.0 h13ac156_2",
   "libzlib 1.2.13 hfd90126_4",
   "cffi 1.15.1 py310ha78151a_3",
   "readline 8.2 h9e318b2_1",
   "libmambapy 1.4.1 py310hb15139c_0",
   "chardet 5.1.0 py310h2ec42d9_0",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "reproc 14.2.4 hb7f2c08_0",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "more-itertools 9.1.0 pyhd8ed1ab_0",
   "freetype 2.12.1 h3f81eb7_1",
   "pcre2 10.40 h1c4e4bc_0",
   "glob2 0.7 py_0",
   "nbformat 5.9.0 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "python 3.10.10 he7542f4_0_cpython",
   "requests 2.28.2 pyhd8ed1ab_1",
   "conda-build 3.25.0 py310h2ec42d9_0",
   "pyopenssl 23.1.1 pyhd8ed1ab_0",
   "libjpeg-turbo 2.1.5.1 hb7f2c08_0",
   "lcms2 2.15 h2dcdeff_1",
   "xorg-libxdmcp 1.1.3 h35c211d_0",
   "conda 23.1.0 py310h2ec42d9_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "ncurses 6.3 h96cf925_1",
   "charset-normalizer 3.1.0 pyhd8ed1ab_0",
   "importlib-metadata 6.7.0 pyha770c72_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "perl 5.32.1 2_h0d85af4_perl5",
   "sigtool 0.1.3 h88f4db0_0",
   "libwebp-base 1.3.0 hb7f2c08_0",
   "exceptiongroup 1.1.1 pyhd8ed1ab_0",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "boa 0.15.1 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "lz4-c 1.9.4 hf0c8a7f_0",
   "tornado 6.3.2 py310h6729b98_0",
   "libcxx 16.0.0 h71dddab_0",
   "libcurl 7.88.1 h6df9250_1",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "prompt_toolkit 3.0.38 hd8ed1ab_0",
   "psutil 5.9.5 py310h90acd4f_0",
   "libexpat 2.5.0 hf0c8a7f_1",
   "libdeflate 1.18 hac1461d_0",
   "anaconda-client 1.11.3 pyhd8ed1ab_0",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "libnghttp2 1.52.0 he2ab024_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "typing_extensions 4.6.3 pyha770c72_0",
   "conda-pack 0.7.0 pyh6c4a22f_0",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "ripgrep 13.0.0 hbbacdb1_2",
   "fmt 9.1.0 hb8565cd_0",
   "zstandard 0.19.0 py310h3cf44b0_1",
   "anyio 3.7.0 pyhd8ed1ab_1",
   "patch 2.7.6 hbcf498f_1002",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "libffi 3.4.2 h0d85af4_5",
   "python_abi 3.10 3_cp310",
   "platformdirs 3.8.0 pyhd8ed1ab_0",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "pluggy 1.0.0 pyhd8ed1ab_5",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "reproc-cpp 14.2.4 hf0c8a7f_0",
   "liblief 0.12.3 hf0c8a7f_0",
   "certifi 2023.5.7 pyhd8ed1ab_0",
   "tapi 1100.0.11 h9ce4665_0",
   "libxml2 2.10.3 h554bb67_6",
   "zipp 3.15.0 pyhd8ed1ab_0",
   "setuptools 65.6.3 pyhd8ed1ab_0",
   "conda-forge-ci-setup 3.31.1 py310h22f808f_100",
   "cctools 973.0.1 h40f6528_13",
   "libmamba 1.4.1 h9d281b0_0",
   "importlib_resources 5.12.0 pyhd8ed1ab_0",
   "libssh2 1.10.0 h47af595_3",
   "libpng 1.6.39 ha978bb4_0",
   "python-libarchive-c 4.0 py310h2ec42d9_2",
   "markupsafe 2.1.3 py310h6729b98_0",
   "xz 5.2.6 h775f41a_0",
   "filelock 3.12.2 pyhd8ed1ab_0",
   "yaml-cpp 0.7.0 hf0c8a7f_2",
   "tzdata 2023c h71feb2d_0",
   "backports 1.0 pyhd8ed1ab_3",
   "cctools_osx-64 973.0.1 h5676edf_13",
   "zstd 1.5.2 hbc0c0cd_6",
   "bzip2 1.0.8 h0d85af4_4",
   "jupyter_core 5.3.1 py310h2ec42d9_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "libllvm16 16.0.1 h7001e86_0",
   "c-ares 1.18.1 h0d85af4_0",
   "ld64 609 ha02d983_13",
   "json5 0.9.5 pyh9f0ad1d_0",
   "py-lief 0.12.3 py310h7a76584_0",
   "tqdm 4.65.0 pyhd8ed1ab_1",
   "ca-certificates 2023.5.7 h8857fd0_0",
   "attrs 23.1.0 pyh71513ae_1",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "libsqlite 3.40.0 ha978bb4_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "mamba 1.4.1 py310h6bde348_0",
   "markdown-it-py 3.0.0 pyhd8ed1ab_0",
   "libxcb 1.15 hb7f2c08_0",
   "pycosat 0.6.4 py310h90acd4f_1",
   "clyent 1.2.2 py_1",
   "brotlipy 0.7.0 py310h90acd4f_1005",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "lerc 4.0.0 hb486fe8_0",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "backports.functools_lru_cache 1.6.5 pyhd8ed1ab_0",
   "ld64_osx-64 609 hbfe4790_13",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py310h90acd4f_1008",
   "git 2.41.0 pl5321h5c607e1_0",
   "oniguruma 6.9.8 hac89ed1_0",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "python-fastjsonschema 2.17.1 pyhd8ed1ab_0",
   "cryptography 40.0.1 py310hdd0c95c_0",
   "libiconv 1.17 hac89ed1_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "typing-extensions 4.6.3 hd8ed1ab_0",
   "lzo 2.10 haf1e3a3_1000",
   "krb5 1.20.1 h049b76e_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "ruamel.yaml.clib 0.2.7 py310h90acd4f_1",
   "pytz 2023.3 pyhd8ed1ab_0",
   "libarchive 3.6.2 h6d8d9f1_0",
   "pyrsistent 0.19.3 py310h90acd4f_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "tk 8.6.12 h5dbffcc_0",
   "libev 4.33 haf1e3a3_1",
   "idna 3.4 pyhd8ed1ab_0",
   "conda-forge-metadata 0.5.0 pyhd8ed1ab_0",
   "wheel 0.40.0 pyhd8ed1ab_0",
   "libtiff 4.5.1 hf955e92_0"
  ],
  "summary": "Mypyc compiles Python modules to C extensions. It uses standard Python type hints to generate fast code.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_13.2.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "11.0",
  "build_platform": "osx-64",
  "c_compiler": "clang",
  "c_compiler_version": "15",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "macos_machine": "arm64-apple-darwin20.0.0",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_cpython",
  "r_base": "3.5",
  "target_platform": "osx-arm64"
 },
 "conda_pkg_format": "2",
 "files": [],
 "index": {
  "arch": "arm64",
  "build": "py38h298bfb8_0",
  "build_number": 0,
  "depends": [
   "clang_osx-arm64 15.*",
   "mypy 1.4.1 py38hb192615_0",
   "python >=3.8,<3.9.0a0",
   "python_abi 3.8.* *_cp38"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "mypyc",
  "platform": "osx",
  "subdir": "osx-arm64",
  "timestamp": 1687822001828,
  "version": "1.4.1"
 },
 "metadata_version": 1,
 "name": "mypyc",
 "raw_recipe": "# This file created by conda-build 3.25.0\n# ------------------------------------------------\n\npackage:\n  name: mypyc\n  version: 1.4.1\nsource:\n  sha256: 9bbcd9ab8ea1f2e1c8031c21445b511442cc45c89951e49bbf852cbb70755b1b\n  url: https://pypi.io/packages/source/m/mypy/mypy-1.4.1.tar.gz\nbuild:\n  noarch: false\n  noarch_python: false\n  number: '0'\n  string: py38h298bfb8_0\nrequirements:\n  host:\n    - bzip2 1.0.8 h3422bc3_4\n    - ca-certificates 2023.5.7 hf0a4a13_0\n    - libffi 3.4.2 h3422bc3_5\n    - libsqlite 3.42.0 hb31c410_0\n    - libzlib 1.2.13 h53f4e23_5\n    - ncurses 6.4 h7ea286d_0\n    - openssl 3.1.1 h53f4e23_1\n    - python 3.8.17 h3ba56d0_0_cpython\n    - readline 8.2 h92ec313_1\n    - tk 8.6.12 he1e0b03_0\n    - xz 5.2.6 h57fd34a_0\n  run:\n    - clang_osx-arm64 15.*\n    - mypy 1.4.1 py38hb192615_0\n    - python >=3.8,<3.9.0a0\n    - python_abi 3.8.* *_cp38\ntest:\n  commands:\n    - pip check\n    - mypyc --help\n    - python test_mypyc.py\n  files:\n    - test_mypyc.py\n  requires:\n    - pip\nabout:\n  description: 'The compiled language is a strict, gradually typed Python variant.\n    It\n\n    restricts the use of some dynamic Python features to gain performance,\n\n    but it''s mostly compatible with standard Python.\n\n\n    Mypyc uses mypy to perform type checking and type inference. Most type\n\n    system features in the stdlib typing module are supported.\n\n\n    Compiled modules can import arbitrary Python modules and third-party\n\n    libraries. You can compile anything from a single performance-critical\n\n    module to your entire codebase. You can run the modules you compile also\n\n    as normal, interpreted Python modules.\n\n\n    Existing code with type annotations is often 1.5x to 5x faster when\n\n    compiled. Code tuned for mypyc can be 5x to 10x faster.\n\n\n    Mypyc currently aims to speed up non-numeric code, such as server\n\n    applications. Mypyc is also used to compile itself (and mypy).'\n  dev_url: https://github.com/python/mypy/blob/master/mypyc\n  home: https://mypyc.readthedocs.io\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Mypyc compiles Python modules to C extensions. It uses standard Python\n    type hints to generate fast code.\nextra:\n  copy_test_source_files: true\n  feedstock-name: mypy\n  final: true\n  recipe-maintainers:\n    - bollwyvl\n    - matthiasdiener\n    - nehaljwani\n    - ocefpaf\n",
 "rendered_recipe": {
  "about": {
   "description": "The compiled language is a strict, gradually typed Python variant. It\nrestricts the use of some dynamic Python features to gain performance,\nbut it's mostly compatible with standard Python.\n\nMypyc uses mypy to perform type checking and type inference. Most type\nsystem features in the stdlib typing module are supported.\n\nCompiled modules can import arbitrary Python modules and third-party\nlibraries. You can compile anything from a single performance-critical\nmodule to your entire codebase. You can run the modules you compile also\nas normal, interpreted Python modules.\n\nExisting code with type annotations is often 1.5x to 5x faster when\ncompiled. Code tuned for mypyc can be 5x to 10x faster.\n\nMypyc currently aims to speed up non-numeric code, such as server\napplications. Mypyc is also used to compile itself (and mypy).",
   "dev_url": "https://github.com/python/mypy/blob/master/mypyc",
   "home": "https://mypyc.readthedocs.io",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Mypyc compiles Python modules to C extensions. It uses standard Python type hints to generate fast code."
  },
  "build": {
   "noarch": false,
   "noarch_python": false,
   "number": "0",
   "string": "py38h298bfb8_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "feedstock-name": "mypy",
   "final": true,
   "recipe-maintainers": [
    "bollwyvl",
    "matthiasdiener",
    "nehaljwani",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "mypyc",
   "version": "1.4.1"
  },
  "requirements": {
   "host": [
    "bzip2 1.0.8 h3422bc3_4",
    "ca-certificates 2023.5.7 hf0a4a13_0",
    "libffi 3.4.2 h3422bc3_5",
    "libsqlite 3.42.0 hb31c410_0",
    "libzlib 1.2.13 h53f4e23_5",
    "ncurses 6.4 h7ea286d_0",
    "openssl 3.1.1 h53f4e23_1",
    "python 3.8.17 h3ba56d0_0_cpython",
    "readline 8.2 h92ec313_1",
    "tk 8.6.12 he1e0b03_0",
    "xz 5.2.6 h57fd34a_0"
   ],
   "run": [
    "clang_osx-arm64 15.*",
    "mypy 1.4.1 py38hb192615_0",
    "python >=3.8,<3.9.0a0",
    "python_abi 3.8.* *_cp38"
   ]
  },
  "source": {
   "sha256": "9bbcd9ab8ea1f2e1c8031c21445b511442cc45c89951e49bbf852cbb70755b1b",
   "url": "https://pypi.io/packages/source/m/mypy/mypy-1.4.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "mypyc --help",
    "python test_mypyc.py"
   ],
   "files": [
    "test_mypyc.py"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "version": "1.4.1"
}