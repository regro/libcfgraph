{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.27.0",
  "conda_version": "23.10.0",
  "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
  "doc_url": "https://ffmpeg.org/documentation.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "flow_run_id": "azure_20231110.2.1",
   "recipe-maintainers": [
    "hmaarrfk",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari"
   ],
   "remote_url": "https://github.com/conda-forge/ffmpeg-feedstock",
   "sha": "5c2a93c1b90574725f54023b70c32c202abb2bcd"
  },
  "home": "https://www.ffmpeg.org/",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL-2.1-or-later",
  "license_family": "LGPL",
  "license_file": [
   "COPYING.LGPLv2.1",
   "COPYING.LGPLv3"
  ],
  "root_pkgs": [
   "pyyaml 6.0.1 py310h2372a71_1",
   "jsonschema 4.19.2 pyhd8ed1ab_0",
   "tini 0.19.0 h166bdaf_1",
   "readline 8.2 h8228510_1",
   "lcms2 2.15 hb7c19ff_3",
   "typing_extensions 4.8.0 pyha770c72_0",
   "libxml2 2.11.5 h232c23b_1",
   "_openmp_mutex 4.5 2_gnu",
   "conda-build 3.27.0 py310hff52083_0",
   "requests 2.31.0 pyhd8ed1ab_0",
   "ld_impl_linux-64 2.40 h41732ed_0",
   "ca-certificates 2023.7.22 hbcca054_0",
   "platformdirs 3.11.0 pyhd8ed1ab_0",
   "libnghttp2 1.58.0 h47da74e_0",
   "cffi 1.16.0 py310h2fee648_0",
   "ruamel_yaml 0.15.80 py310h2372a71_1009",
   "perl 5.32.1 4_hd590300_perl5",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "truststore 0.8.0 pyhd8ed1ab_0",
   "libuuid 2.38.1 h0b41bf4_0",
   "chardet 5.2.0 py310hff52083_1",
   "freetype 2.12.1 h267a509_2",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "xorg-libxau 1.0.11 hd590300_0",
   "pycosat 0.6.6 py310h2372a71_0",
   "libwebp-base 1.3.2 hd590300_0",
   "jsonpointer 2.4 py310hff52083_3",
   "libssh2 1.11.0 h0841786_0",
   "pip 23.3.1 pyhd8ed1ab_0",
   "lz4-c 1.9.4 hcb278e6_0",
   "pluggy 1.3.0 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libffi 3.4.2 h7f98852_5",
   "click 8.1.7 unix_pyh707e725_0",
   "keyutils 1.6.1 h166bdaf_0",
   "bzip2 1.0.8 hd590300_5",
   "six 1.16.0 pyh6c4a22f_0",
   "brotli-python 1.1.0 py310hc6cd4ac_1",
   "zstandard 0.22.0 py310h1275a96_0",
   "su-exec 0.2 h166bdaf_1003",
   "pybind11-abi 4 hd8ed1ab_3",
   "libxcb 1.15 h0b41bf4_0",
   "ripgrep 13.0.0 he8a937b_3",
   "conda-package-streaming 0.9.0 pyhd8ed1ab_0",
   "psutil 5.9.5 py310h2372a71_1",
   "libgcc-ng 13.2.0 h807b86a_2",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "ruamel.yaml 0.18.5 py310h2372a71_0",
   "conda-package-handling 2.2.0 pyh38be061_0",
   "python_abi 3.10 4_cp310",
   "krb5 1.21.2 h659d440_0",
   "referencing 0.30.2 pyhd8ed1ab_0",
   "py-lief 0.12.3 py310hd8f1fbe_0",
   "pillow 10.1.0 py310h01dd4db_0",
   "libexpat 2.5.0 hcb278e6_1",
   "libzlib 1.2.13 hd590300_5",
   "attrs 23.1.0 pyh71513ae_1",
   "jupyter_core 5.5.0 py310hff52083_0",
   "tzdata 2023c h71feb2d_0",
   "xz 5.2.6 h166bdaf_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_1",
   "charset-normalizer 3.3.2 pyhd8ed1ab_0",
   "tk 8.6.13 noxft_h4845f30_101",
   "libedit 3.1.20191231 he28a2e2_2",
   "idna 3.4 pyhd8ed1ab_0",
   "packaging 23.2 pyhd8ed1ab_0",
   "fmt 10.1.1 h00ab1b0_0",
   "openjpeg 2.5.0 h488ebb8_3",
   "pcre2 10.40 hc3806b6_0",
   "python-fastjsonschema 2.18.1 pyhd8ed1ab_0",
   "libev 4.33 h516909a_1",
   "libsqlite 3.44.0 h2797004_0",
   "icu 73.2 h59595ed_0",
   "importlib_resources 6.1.1 pyhd8ed1ab_0",
   "libsolv 0.7.26 hfc55251_0",
   "lerc 4.0.0 h27087fc_0",
   "markupsafe 2.1.3 py310h2372a71_1",
   "reproc 14.2.4.post0 hd590300_1",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "libpng 1.6.39 h753d276_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "git 2.42.0 pl5321h86e50cf_0",
   "libjpeg-turbo 3.0.0 hd590300_1",
   "ncurses 6.4 h59595ed_2",
   "conda-pack 0.7.1 pyhd8ed1ab_0",
   "certifi 2023.7.22 pyhd8ed1ab_0",
   "openssl 3.1.4 hd590300_0",
   "pytz 2023.3.post1 pyhd8ed1ab_0",
   "gettext 0.21.1 h27087fc_0",
   "libcurl 8.4.0 hca28451_0",
   "rpds-py 0.12.0 py310hcb5633a_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "tornado 6.3.3 py310h2372a71_1",
   "conda-libmamba-solver 23.11.0 pyhd8ed1ab_0",
   "libnsl 2.0.1 hd590300_0",
   "nbformat 5.9.2 pyhd8ed1ab_0",
   "pthread-stubs 0.4 h36c2ea0_1001",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "tqdm 4.66.1 pyhd8ed1ab_0",
   "libarchive 3.7.2 h039dbb9_0",
   "anaconda-client 1.12.1 pyhd8ed1ab_1",
   "pycparser 2.21 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "yaml-cpp 0.8.0 h59595ed_0",
   "reproc-cpp 14.2.4.post0 h59595ed_1",
   "libtiff 4.6.0 ha9c0a0a_2",
   "patch 2.7.6 h7f98852_1002",
   "zstd 1.5.5 hfc55251_0",
   "c-ares 1.21.0 hd590300_0",
   "curl 8.4.0 hca28451_0",
   "python 3.10.13 hd12c33a_0_cpython",
   "conda 23.10.0 py310hff52083_1",
   "jsonschema-specifications 2023.7.1 pyhd8ed1ab_0",
   "libdeflate 1.19 hd590300_0",
   "typing-extensions 4.8.0 hd8ed1ab_0",
   "jsonpatch 1.33 pyhd8ed1ab_0",
   "xorg-libxdmcp 1.1.3 h7f98852_0",
   "setuptools 68.2.2 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "archspec 0.2.2 pyhd8ed1ab_0",
   "libgomp 13.2.0 h807b86a_2",
   "ruamel.yaml.clib 0.2.7 py310h2372a71_2",
   "pysocks 1.7.1 pyha2e5f31_6",
   "pyopenssl 23.3.0 pyhd8ed1ab_0",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "wheel 0.41.3 pyhd8ed1ab_0",
   "python-libarchive-c 5.0 py310hff52083_2",
   "conda-index 0.3.0 pyhd8ed1ab_1",
   "patchelf 0.17.2 h58526e2_0",
   "libstdcxx-ng 13.2.0 h7e041cc_2",
   "liblief 0.12.3 h27087fc_0",
   "zipp 3.17.0 pyhd8ed1ab_0",
   "traitlets 5.13.0 pyhd8ed1ab_0",
   "soupsieve 2.5 pyhd8ed1ab_1",
   "yaml 0.2.5 h7f98852_2",
   "more-itertools 10.1.0 pyhd8ed1ab_0",
   "libiconv 1.17 h166bdaf_0",
   "urllib3 2.0.7 pyhd8ed1ab_0",
   "clyent 1.2.2 pyhd8ed1ab_2",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "cryptography 41.0.5 py310h75e40e8_0",
   "filelock 3.13.1 pyhd8ed1ab_0",
   "lzo 2.10 h516909a_1000",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000",
   "conda-forge-metadata 0.6.1 pyhd8ed1ab_0",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "libmambapy 1.5.3 py310h39ff949_2",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "libmamba 1.5.3 had39da4_2",
   "oniguruma 6.9.9 hd590300_0",
   "mamba 1.5.3 py310h51d5547_2",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 4.1.0 py310h7a2d8a0_100"
  ],
  "summary": "Cross-platform solution to record, convert and stream audio and video.",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "azure",
  "CMAKE_CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "aom": "3.6",
  "build_platform": "linux-64",
  "bzip2": "1",
  "c_compiler": "gcc",
  "c_compiler_version": "12",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "12",
  "dav1d": "1.2.1",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version",
   "extend_keys"
  ],
  "fontconfig": "2",
  "fortran_compiler": "gfortran",
  "freetype": "2",
  "gmp": "6",
  "gnutls": "3.7",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "libxml2": "2.11",
  "license_family": "lgpl",
  "lua": "5",
  "numpy": "1.22",
  "openh264": "2.3.1",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "svt_av1": "1.7.0",
  "target_platform": "linux-aarch64",
  "x264": "1!164.*",
  "x265": "3.5",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ],
  "zlib": "1.2"
 },
 "conda_pkg_format": "2",
 "files": [
  "bin/ffmpeg",
  "bin/ffprobe",
  "include/libavcodec/ac3_parser.h",
  "include/libavcodec/adts_parser.h",
  "include/libavcodec/avcodec.h",
  "include/libavcodec/avdct.h",
  "include/libavcodec/avfft.h",
  "include/libavcodec/bsf.h",
  "include/libavcodec/codec.h",
  "include/libavcodec/codec_desc.h",
  "include/libavcodec/codec_id.h",
  "include/libavcodec/codec_par.h",
  "include/libavcodec/d3d11va.h",
  "include/libavcodec/defs.h",
  "include/libavcodec/dirac.h",
  "include/libavcodec/dv_profile.h",
  "include/libavcodec/dxva2.h",
  "include/libavcodec/jni.h",
  "include/libavcodec/mediacodec.h",
  "include/libavcodec/packet.h",
  "include/libavcodec/qsv.h",
  "include/libavcodec/vdpau.h",
  "include/libavcodec/version.h",
  "include/libavcodec/version_major.h",
  "include/libavcodec/videotoolbox.h",
  "include/libavcodec/vorbis_parser.h",
  "include/libavcodec/xvmc.h",
  "include/libavdevice/avdevice.h",
  "include/libavdevice/version.h",
  "include/libavdevice/version_major.h",
  "include/libavfilter/avfilter.h",
  "include/libavfilter/buffersink.h",
  "include/libavfilter/buffersrc.h",
  "include/libavfilter/version.h",
  "include/libavfilter/version_major.h",
  "include/libavformat/avformat.h",
  "include/libavformat/avio.h",
  "include/libavformat/version.h",
  "include/libavformat/version_major.h",
  "include/libavutil/adler32.h",
  "include/libavutil/aes.h",
  "include/libavutil/aes_ctr.h",
  "include/libavutil/ambient_viewing_environment.h",
  "include/libavutil/attributes.h",
  "include/libavutil/audio_fifo.h",
  "include/libavutil/avassert.h",
  "include/libavutil/avconfig.h",
  "include/libavutil/avstring.h",
  "include/libavutil/avutil.h",
  "include/libavutil/base64.h",
  "include/libavutil/blowfish.h",
  "include/libavutil/bprint.h",
  "include/libavutil/bswap.h",
  "include/libavutil/buffer.h",
  "include/libavutil/camellia.h",
  "include/libavutil/cast5.h",
  "include/libavutil/channel_layout.h",
  "include/libavutil/common.h",
  "include/libavutil/cpu.h",
  "include/libavutil/crc.h",
  "include/libavutil/csp.h",
  "include/libavutil/des.h",
  "include/libavutil/detection_bbox.h",
  "include/libavutil/dict.h",
  "include/libavutil/display.h",
  "include/libavutil/dovi_meta.h",
  "include/libavutil/downmix_info.h",
  "include/libavutil/encryption_info.h",
  "include/libavutil/error.h",
  "include/libavutil/eval.h",
  "include/libavutil/ffversion.h",
  "include/libavutil/fifo.h",
  "include/libavutil/file.h",
  "include/libavutil/film_grain_params.h",
  "include/libavutil/frame.h",
  "include/libavutil/hash.h",
  "include/libavutil/hdr_dynamic_metadata.h",
  "include/libavutil/hdr_dynamic_vivid_metadata.h",
  "include/libavutil/hmac.h",
  "include/libavutil/hwcontext.h",
  "include/libavutil/hwcontext_cuda.h",
  "include/libavutil/hwcontext_d3d11va.h",
  "include/libavutil/hwcontext_drm.h",
  "include/libavutil/hwcontext_dxva2.h",
  "include/libavutil/hwcontext_mediacodec.h",
  "include/libavutil/hwcontext_opencl.h",
  "include/libavutil/hwcontext_qsv.h",
  "include/libavutil/hwcontext_vaapi.h",
  "include/libavutil/hwcontext_vdpau.h",
  "include/libavutil/hwcontext_videotoolbox.h",
  "include/libavutil/hwcontext_vulkan.h",
  "include/libavutil/imgutils.h",
  "include/libavutil/intfloat.h",
  "include/libavutil/intreadwrite.h",
  "include/libavutil/lfg.h",
  "include/libavutil/log.h",
  "include/libavutil/lzo.h",
  "include/libavutil/macros.h",
  "include/libavutil/mastering_display_metadata.h",
  "include/libavutil/mathematics.h",
  "include/libavutil/md5.h",
  "include/libavutil/mem.h",
  "include/libavutil/motion_vector.h",
  "include/libavutil/murmur3.h",
  "include/libavutil/opt.h",
  "include/libavutil/parseutils.h",
  "include/libavutil/pixdesc.h",
  "include/libavutil/pixelutils.h",
  "include/libavutil/pixfmt.h",
  "include/libavutil/random_seed.h",
  "include/libavutil/rational.h",
  "include/libavutil/rc4.h",
  "include/libavutil/replaygain.h",
  "include/libavutil/ripemd.h",
  "include/libavutil/samplefmt.h",
  "include/libavutil/sha.h",
  "include/libavutil/sha512.h",
  "include/libavutil/spherical.h",
  "include/libavutil/stereo3d.h",
  "include/libavutil/tea.h",
  "include/libavutil/threadmessage.h",
  "include/libavutil/time.h",
  "include/libavutil/timecode.h",
  "include/libavutil/timestamp.h",
  "include/libavutil/tree.h",
  "include/libavutil/twofish.h",
  "include/libavutil/tx.h",
  "include/libavutil/uuid.h",
  "include/libavutil/version.h",
  "include/libavutil/video_enc_params.h",
  "include/libavutil/xtea.h",
  "include/libswresample/swresample.h",
  "include/libswresample/version.h",
  "include/libswresample/version_major.h",
  "include/libswscale/swscale.h",
  "include/libswscale/version.h",
  "include/libswscale/version_major.h",
  "lib/libavcodec.so",
  "lib/libavcodec.so.60",
  "lib/libavcodec.so.60.3.100",
  "lib/libavdevice.so",
  "lib/libavdevice.so.60",
  "lib/libavdevice.so.60.1.100",
  "lib/libavfilter.so",
  "lib/libavfilter.so.9",
  "lib/libavfilter.so.9.3.100",
  "lib/libavformat.so",
  "lib/libavformat.so.60",
  "lib/libavformat.so.60.3.100",
  "lib/libavutil.so",
  "lib/libavutil.so.58",
  "lib/libavutil.so.58.2.100",
  "lib/libswresample.so",
  "lib/libswresample.so.4",
  "lib/libswresample.so.4.10.100",
  "lib/libswscale.so",
  "lib/libswscale.so.7",
  "lib/libswscale.so.7.1.100",
  "lib/pkgconfig/libavcodec.pc",
  "lib/pkgconfig/libavdevice.pc",
  "lib/pkgconfig/libavfilter.pc",
  "lib/pkgconfig/libavformat.pc",
  "lib/pkgconfig/libavutil.pc",
  "lib/pkgconfig/libswresample.pc",
  "lib/pkgconfig/libswscale.pc",
  "share/ffmpeg/examples/Makefile",
  "share/ffmpeg/examples/README",
  "share/ffmpeg/examples/avio_http_serve_files.c",
  "share/ffmpeg/examples/avio_list_dir.c",
  "share/ffmpeg/examples/avio_read_callback.c",
  "share/ffmpeg/examples/decode_audio.c",
  "share/ffmpeg/examples/decode_filter_audio.c",
  "share/ffmpeg/examples/decode_filter_video.c",
  "share/ffmpeg/examples/decode_video.c",
  "share/ffmpeg/examples/demux_decode.c",
  "share/ffmpeg/examples/encode_audio.c",
  "share/ffmpeg/examples/encode_video.c",
  "share/ffmpeg/examples/extract_mvs.c",
  "share/ffmpeg/examples/filter_audio.c",
  "share/ffmpeg/examples/hw_decode.c",
  "share/ffmpeg/examples/mux.c",
  "share/ffmpeg/examples/qsv_decode.c",
  "share/ffmpeg/examples/qsv_transcode.c",
  "share/ffmpeg/examples/remux.c",
  "share/ffmpeg/examples/resample_audio.c",
  "share/ffmpeg/examples/scale_video.c",
  "share/ffmpeg/examples/show_metadata.c",
  "share/ffmpeg/examples/transcode.c",
  "share/ffmpeg/examples/transcode_aac.c",
  "share/ffmpeg/examples/vaapi_encode.c",
  "share/ffmpeg/examples/vaapi_transcode.c",
  "share/ffmpeg/ffprobe.xsd",
  "share/ffmpeg/libvpx-1080p.ffpreset",
  "share/ffmpeg/libvpx-1080p50_60.ffpreset",
  "share/ffmpeg/libvpx-360p.ffpreset",
  "share/ffmpeg/libvpx-720p.ffpreset",
  "share/ffmpeg/libvpx-720p50_60.ffpreset"
 ],
 "index": {
  "arch": "aarch64",
  "build": "lgpl_haa40f77_0",
  "build_number": 0,
  "depends": [
   "aom >=3.6.1,<3.7.0a0",
   "bzip2 >=1.0.8,<2.0a0",
   "dav1d >=1.2.1,<1.2.2.0a0",
   "fontconfig >=2.14.2,<3.0a0",
   "fonts-conda-ecosystem",
   "freetype >=2.12.1,<3.0a0",
   "gmp >=6.2.1,<7.0a0",
   "gnutls >=3.7.8,<3.8.0a0",
   "lame >=3.100,<3.101.0a0",
   "libass >=0.17.1,<0.17.2.0a0",
   "libgcc-ng >=12",
   "libopus >=1.3.1,<2.0a0",
   "libstdcxx-ng >=12",
   "libvpx >=1.13.1,<1.14.0a0",
   "libxml2 >=2.11.5,<2.12.0a0",
   "libzlib >=1.2.13,<1.3.0a0",
   "openh264 >=2.3.1,<2.3.2.0a0",
   "svt-av1 >=1.7.0,<1.7.1.0a0"
  ],
  "license": "LGPL-2.1-or-later",
  "license_family": "LGPL",
  "name": "ffmpeg",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1699624448493,
  "version": "6.0.1"
 },
 "metadata_version": 1,
 "name": "ffmpeg",
 "raw_recipe": "{% set version = \"6.0.1\" %} # semver: (x.y.z)\n{% set x,y,z = version.split('.') %}\n{% set version_ffmpeg_style = x ~ '.' ~ y if z == \"0\" else version %}\n\npackage:\n  name: ffmpeg\n  version: {{ version }}\n\nsource:\n  url: https://ffmpeg.org/releases/ffmpeg-{{ version_ffmpeg_style }}.tar.gz\n  sha256: 375fd8abab657d18578554927d23abfc9cb3b6794bd9839330230cf5f9fcea26\n  patches:\n    - patches/pkgconfig_generate_windows_llvm.patch  # [win]\n    # I don't really think that the original changes made at FFmpeg make sense for\n    # conda-forge's conmpiler stack on windows\n    # https://github.com/FFmpeg/FFmpeg/commit/f8d6d0fbf12b3247a37885cd0a5cd32ddc1f01b3\n    # https://github.com/conda-forge/ffmpeg-feedstock/pull/193#issuecomment-1484476264\n    - patches/0001-Revert-compat-Use-instead-of-for-rc.exe-options.patch\n\n{% set build = 0 %}\n{% if license_family == 'gpl' %}\n    {% set build = build + 100 %}\n{% endif %}\n\nbuild:\n  number: {{ build }}\n  string: {{ license_family }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n  run_exports:\n  # seems to be major version compatibility\n  # https://abi-laboratory.pro/tracker/timeline/ffmpeg/\n    - {{ pin_subpackage('ffmpeg', max_pin='x') }}\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    # clangxx is required for support of the nvidia encoders and decoders\n    - clangxx  # [linux64]\n    - autotools_clang_conda  # [win]\n    - pkg-config\n    - libtool  # [not win]\n    - nasm  # [not (osx and x86_64)]\n    # osx_64 needs yasm due to https://stackoverflow.com/questions/58796267/building-for-macos-but-linking-in-object-file-built-for-free-standing\n    - yasm  # [osx and x86_64]\n    - lame  # [not win]\n    - make  # [not win]\n    - m2-sed  # [win]\n    # makedef uses the printf command which is provided by coreutils\n    # - m2-coreutils  # [win]\n  host:\n    - bzip2\n    - freetype\n    - fontconfig\n    - gnutls  # [not win]\n    - libiconv  # [osx]\n    - libxml2\n    {% if license_family == 'gpl' %}\n    - x264\n    - x265\n    {% endif %}\n    - libvpx  # [not win]\n    - zlib\n    - openh264\n    - lame  # [not win]\n    - gmp  # [unix]\n    - libva  # [linux64]\n    - aom\n    - svt-av1\n    - ffnvcodec-headers  # [linux64 or win]\n    - libopus\n    - libass  # [not win]\n    - dav1d\n\n{% set grep = \"grep\" %}  # [unix]\n{% set grep = \"findstr\" %}  # [win]\n\ntest:\n  commands:\n    - ffmpeg --help\n    - ffmpeg -hide_banner -codecs\n    - ffmpeg -hide_banner -protocols\n    - ffmpeg -hide_banner -protocols | {{ grep }} \"https\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libmp3lame\"       # [unix]\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"DEVI.S\\ zlib\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"DEV.LS h264\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libopenh264\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"vaapi\"            # [linux64]\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libaom\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libsvtav1\"\n    # Verify dynamic libraries on all systems\n    {% set ffmpeg_libs = [\n        \"avdevice\",\n        \"swresample\",\n        \"avfilter\",\n        \"avcodec\",\n        \"avformat\",\n        \"swscale\",\n        \"avutil\",\n    ] %}\n    {% for each_ffmpeg_lib in ffmpeg_libs %}\n    - test -f $PREFIX/lib/lib{{ each_ffmpeg_lib }}${SHLIB_EXT}  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ each_ffmpeg_lib }}.lib exit 1  # [win]\n    {% endfor %}\n    # Windows dynamic libraries have a suffix\n    {% set ffmpeg_libs = [\n        \"avdevice-60\",\n        \"swresample-4\",\n        \"avfilter-9\",\n        \"avcodec-60\",\n        \"avformat-60\",\n        \"swscale-7\",\n        \"avutil-58\",\n    ] %}\n    {% for each_ffmpeg_lib in ffmpeg_libs %}\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ each_ffmpeg_lib }}.dll exit 1  # [win]\n    {% endfor %}\n    {%- if license_family == 'gpl' %}\n    - ffmpeg -hide_banner -buildconf | {{ grep }} \"enable-gpl\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libx264\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libx265\"\n    - test -f $PREFIX/lib/libpostproc${SHLIB_EXT}         # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\postproc.lib exit 1  # [win]\n    # https://trac.ffmpeg.org/wiki/Null\n    - ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx264 -f null -\n    - ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx265 -f null -\n    {%- endif %}\n    {%- if license_family == 'lgpl' %}\n    - ffmpeg -hide_banner -buildconf | {{ grep }} \"disable-gpl\"\n    - test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")     # [unix]\n    - test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")     # [unix]\n    - test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}              # [unix]\n    - if exist %PREFIX%\\\\Library\\\\lib\\\\postproc.lib exit 1       # [win]\n    {%- endif %}\n    # Verify nvidia codecs on linux\n    {% set nvcodecs = [\n        \"h264_nvenc\",\n        \"hevc_nvenc\",\n        \"mjpeg_cuvid\",\n        \"mpeg1_cuvid\",\n        \"mpeg2_cuvid\",\n        \"mpeg4_cuvid\",\n        \"vc1_cuvid\",\n        \"vp8_cuvid\",\n        \"vp9_cuvid\"\n    ] %}\n    {% for nvcodec in nvcodecs %}\n    # Make sure to include a space in there to ensure we get an exact match\n    - ffmpeg -hide_banner -codecs | {{ grep }} \" {{ nvcodec }} \"  # [linux64 or win]\n    {% endfor %}\n    # https://trac.ffmpeg.org/wiki/Null\n    - ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -\n\nabout:\n  home: https://www.ffmpeg.org/\n  license: GPL-2.0-or-later  # [license_family=='gpl']\n  license: LGPL-2.1-or-later  # [license_family=='lgpl']\n  license_file:\n    - COPYING.GPLv2            # [license_family=='gpl']\n    - COPYING.GPLv3            # [license_family=='gpl']\n    - COPYING.LGPLv2.1         # [license_family=='lgpl']\n    - COPYING.LGPLv3           # [license_family=='lgpl']\n  license_family: GPL  # [license_family=='gpl']\n  license_family: LGPL  # [license_family=='lgpl']\n  summary: Cross-platform solution to record, convert and stream audio and video.\n  dev_url: https://git.ffmpeg.org/ffmpeg.git\n  doc_url: https://ffmpeg.org/documentation.html\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n    - danielballan\n    - jakirkham\n    - 183amir\n    - patricksnape\n    - ocefpaf\n    - sdvillal\n    - carlodri\n    - benjaminrwilson\n    - matthiasdiener\n    - h-vetinari\n",
 "rendered_recipe": {
  "about": {
   "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
   "doc_url": "https://ffmpeg.org/documentation.html",
   "home": "https://www.ffmpeg.org/",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": [
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3"
   ],
   "summary": "Cross-platform solution to record, convert and stream audio and video."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "ffmpeg >=6.0.1,<7.0a0"
   ],
   "string": "lgpl_haa40f77_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "flow_run_id": "azure_20231110.2.1",
   "recipe-maintainers": [
    "183amir",
    "benjaminrwilson",
    "carlodri",
    "danielballan",
    "h-vetinari",
    "hmaarrfk",
    "jakirkham",
    "matthiasdiener",
    "ocefpaf",
    "patricksnape",
    "sdvillal"
   ],
   "remote_url": "https://github.com/conda-forge/ffmpeg-feedstock",
   "sha": "5c2a93c1b90574725f54023b70c32c202abb2bcd"
  },
  "package": {
   "name": "ffmpeg",
   "version": "6.0.1"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "_sysroot_linux-aarch64_curr_repodata_hack 4 h57d6b7b_13",
    "binutils_impl_linux-64 2.40 hf600244_0",
    "binutils_impl_linux-aarch64 2.40 h40ea8b1_0",
    "binutils_linux-aarch64 2.40 h19b5abf_2",
    "gcc_impl_linux-64 12.3.0 he2b93b0_2",
    "gcc_impl_linux-aarch64 12.3.0 hfb0b921_2",
    "gcc_linux-aarch64 12.3.0 hd570763_2",
    "gxx_impl_linux-64 12.3.0 he2b93b0_2",
    "gxx_impl_linux-aarch64 12.3.0 hfb0b921_2",
    "gxx_linux-aarch64 12.3.0 h4913bc6_2",
    "kernel-headers_linux-64 2.6.32 he073ed8_16",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_13",
    "lame 3.100 h166bdaf_1003",
    "ld_impl_linux-64 2.40 h41732ed_0",
    "ld_impl_linux-aarch64 2.40 hc365e21_0",
    "libgcc-devel_linux-64 12.3.0 h8bca6fd_2",
    "libgcc-devel_linux-aarch64 12.3.0 h1a07b91_2",
    "libgcc-ng 13.2.0 h807b86a_2",
    "libgomp 13.2.0 h807b86a_2",
    "libsanitizer 12.3.0 h0f45ef3_2",
    "libstdcxx-devel_linux-64 12.3.0 h8bca6fd_2",
    "libstdcxx-devel_linux-aarch64 12.3.0 h1a07b91_2",
    "libstdcxx-ng 13.2.0 h7e041cc_2",
    "libtool 2.4.7 h27087fc_0",
    "make 4.3 hd18ef5c_1",
    "nasm 2.15.05 h7f98852_0",
    "pkg-config 0.29.2 h36c2ea0_1008",
    "sysroot_linux-64 2.12 he073ed8_16",
    "sysroot_linux-aarch64 2.17 h5b4a56d_13"
   ],
   "host": [
    "_openmp_mutex 4.5 2_gnu",
    "aom 3.6.1 h0425590_0",
    "bzip2 1.0.8 h31becfc_5",
    "cairo 1.18.0 ha13f110_0",
    "dav1d 1.2.1 h31becfc_0",
    "expat 2.5.0 hd600fc2_1",
    "font-ttf-dejavu-sans-mono 2.37 hab24e00_0",
    "font-ttf-inconsolata 3.000 h77eed37_0",
    "font-ttf-source-code-pro 2.038 h77eed37_0",
    "font-ttf-ubuntu 0.83 hab24e00_0",
    "fontconfig 2.14.2 ha9a116f_0",
    "fonts-conda-ecosystem 1 0",
    "fonts-conda-forge 1 0",
    "freetype 2.12.1 hf0a5ef3_2",
    "fribidi 1.0.10 hb9de7d4_0",
    "gettext 0.21.1 ha18d298_0",
    "gmp 6.2.1 h7fd3ca4_0",
    "gnutls 3.7.8 h5e100cc_0",
    "graphite2 1.3.13 h7fd3ca4_1001",
    "harfbuzz 8.2.1 hebeb849_0",
    "icu 73.2 h787c7f5_0",
    "lame 3.100 h4e544f5_1003",
    "libass 0.17.1 h36b5d3b_1",
    "libexpat 2.5.0 hd600fc2_1",
    "libffi 3.4.2 h3557bc0_5",
    "libgcc-ng 13.2.0 hf8544c7_2",
    "libglib 2.78.1 h0464669_0",
    "libgomp 13.2.0 hf8544c7_2",
    "libiconv 1.17 h9cdd2b7_0",
    "libidn2 2.3.4 h4e544f5_0",
    "libopus 1.3.1 hf897c2e_1",
    "libpng 1.6.39 hf9034f9_0",
    "libstdcxx-ng 13.2.0 h9a76618_2",
    "libtasn1 4.19.0 h4e544f5_0",
    "libunistring 0.9.10 hf897c2e_0",
    "libuuid 2.38.1 hb4cce97_0",
    "libvpx 1.13.1 h2f0025b_0",
    "libxcb 1.15 h2a766a3_0",
    "libxml2 2.11.5 h3091e33_1",
    "libzlib 1.2.13 h31becfc_5",
    "nettle 3.8.1 hcc5b78b_1",
    "openh264 2.3.1 hd600fc2_2",
    "p11-kit 0.24.1 h9f2702f_0",
    "pcre2 10.40 he7b27c6_0",
    "pixman 0.42.2 h2f0025b_0",
    "pthread-stubs 0.4 hb9de7d4_1001",
    "svt-av1 1.7.0 h2f0025b_0",
    "xorg-kbproto 1.0.7 h3557bc0_1002",
    "xorg-libice 1.1.1 h7935292_0",
    "xorg-libsm 1.2.4 h5a01bc2_0",
    "xorg-libx11 1.8.7 h055a233_0",
    "xorg-libxau 1.0.11 h31becfc_0",
    "xorg-libxdmcp 1.1.3 h3557bc0_0",
    "xorg-libxext 1.3.4 h2a766a3_2",
    "xorg-libxrender 0.9.11 h7935292_0",
    "xorg-renderproto 0.11.1 h3557bc0_1002",
    "xorg-xextproto 7.3.0 h2a766a3_1003",
    "xorg-xproto 7.0.31 h3557bc0_1007",
    "xz 5.2.6 h9cdd2b7_0",
    "zlib 1.2.13 h31becfc_5"
   ],
   "run": [
    "aom >=3.6.1,<3.7.0a0",
    "bzip2 >=1.0.8,<2.0a0",
    "dav1d >=1.2.1,<1.2.2.0a0",
    "fontconfig >=2.14.2,<3.0a0",
    "fonts-conda-ecosystem",
    "freetype >=2.12.1,<3.0a0",
    "gmp >=6.2.1,<7.0a0",
    "gnutls >=3.7.8,<3.8.0a0",
    "lame >=3.100,<3.101.0a0",
    "libass >=0.17.1,<0.17.2.0a0",
    "libgcc-ng >=12",
    "libopus >=1.3.1,<2.0a0",
    "libstdcxx-ng >=12",
    "libvpx >=1.13.1,<1.14.0a0",
    "libxml2 >=2.11.5,<2.12.0a0",
    "libzlib >=1.2.13,<1.3.0a0",
    "openh264 >=2.3.1,<2.3.2.0a0",
    "svt-av1 >=1.7.0,<1.7.1.0a0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Revert-compat-Use-instead-of-for-rc.exe-options.patch"
   ],
   "sha256": "375fd8abab657d18578554927d23abfc9cb3b6794bd9839330230cf5f9fcea26",
   "url": "https://ffmpeg.org/releases/ffmpeg-6.0.1.tar.gz"
  },
  "test": {
   "commands": [
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S\\ zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -"
   ]
  }
 },
 "version": "6.0.1"
}