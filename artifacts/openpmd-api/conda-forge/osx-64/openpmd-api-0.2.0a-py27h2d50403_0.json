{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.10.7",
  "conda_private": false,
  "conda_version": "4.5.4",
  "description": "This library provides a common high-level API for openPMD writing and\nreading. It provides a common interface to I/O libraries and file formats\nsuch as HDF5 and ADIOS.\nThis conda-forge package only provides serial I/O, please build from source\nfor MPI parallel I/O on HPC systems. Window support is limited to HDF5 and\nPython 3.\n",
  "dev_url": "https://github.com/openPMD/openPMD-api",
  "doc_url": "https://openpmd-api.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "home": "https://www.openPMD.org",
  "license": "LGPL 3",
  "license_family": "LGPL",
  "license_file": "COPYING.LESSER",
  "root_pkgs": [
   "anaconda-client 1.6.14 py_0",
   "asn1crypto 0.24.0 py36_0",
   "beautifulsoup4 4.6.0 py36_0",
   "ca-certificates 2018.4.16 0",
   "certifi 2018.4.16 py36_0",
   "cffi 1.11.5 py36h342bebf_0",
   "chardet 3.0.4 py36h96c241c_1",
   "clyent 1.2.2 py36_0",
   "conda 4.5.4 py36_0",
   "conda-build 3.10.7 py36_1",
   "conda-env 2.6.0 h36134e3_0",
   "conda-forge-ci-setup 1.3.5 0",
   "conda-verify 2.0.0 py36_0",
   "cryptography 2.2.2 py36h1de35cc_0",
   "decorator 4.3.0 py_0",
   "filelock 3.0.4 py36_0",
   "glob2 0.6 py_0",
   "idna 2.6 py36h8628d0a_1",
   "ipython_genutils 0.2.0 py36_0",
   "jinja2 2.10 py36_0",
   "jsonschema 2.6.0 py36_1",
   "jupyter_core 4.4.0 py_0",
   "libcxx 4.0.1 h579ed51_0",
   "libcxxabi 4.0.1 hebd6815_0",
   "libedit 3.1.20170329 hb402a30_2",
   "libffi 3.2.1 h475c297_4",
   "markupsafe 1.0 py36_0",
   "nbformat 4.4.0 py36_0",
   "ncurses 6.1 h0a44026_0",
   "openssl 1.0.2o 0",
   "pip 10.0.1 py36_0",
   "pkginfo 1.4.2 py36_0",
   "psutil 5.4.6 py36_0",
   "pycosat 0.6.3 py36hee92d8f_0",
   "pycparser 2.18 py36h724b2fc_1",
   "pyopenssl 18.0.0 py36_0",
   "pysocks 1.6.8 py36_0",
   "python 3.6.5 hc167b69_1",
   "python-dateutil 2.7.3 py_0",
   "python.app 2 py36_8",
   "pytz 2018.4 py_0",
   "pyyaml 3.12 py36_1",
   "readline 7.0 hc1231fa_4",
   "requests 2.18.4 py36h4516966_1",
   "ruamel_yaml 0.15.37 py36h1de35cc_2",
   "setuptools 39.2.0 py36_0",
   "six 1.11.0 py36h0e22d5e_1",
   "sqlite 3.23.1 hf1716c9_0",
   "tk 8.6.7 h35a86e2_3",
   "traitlets 4.3.2 py36_0",
   "urllib3 1.22 py36h68b9469_0",
   "wheel 0.31.1 py36_0",
   "xz 5.2.4 h1de35cc_4",
   "yaml 0.1.7 hc338f04_2",
   "zlib 1.2.11 hf3cbc9b_2"
  ],
  "summary": "C++ & Python API for writing & reading (H5, BP, ...), serial & MPI parallel openPMD files."
 },
 "conda_build_config": {
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "toolchain_cxx",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "numpy",
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "numpy": "1.9",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "2.7",
  "r_base": "3.4",
  "target_platform": "osx-64"
 },
 "files": [
  "include/mpark/variant.hpp",
  "include/openPMD/Dataset.hpp",
  "include/openPMD/Datatype.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1Auxiliary.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1FilePosition.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1IOHandler.hpp",
  "include/openPMD/IO/ADIOS/ADIOS2FilePosition.hpp",
  "include/openPMD/IO/ADIOS/ADIOS2IOHandler.hpp",
  "include/openPMD/IO/ADIOS/ParallelADIOS1IOHandler.hpp",
  "include/openPMD/IO/AbstractFilePosition.hpp",
  "include/openPMD/IO/AbstractIOHandler.hpp",
  "include/openPMD/IO/AbstractIOHandlerImpl.hpp",
  "include/openPMD/IO/AccessType.hpp",
  "include/openPMD/IO/Format.hpp",
  "include/openPMD/IO/HDF5/HDF5Auxiliary.hpp",
  "include/openPMD/IO/HDF5/HDF5FilePosition.hpp",
  "include/openPMD/IO/HDF5/HDF5IOHandler.hpp",
  "include/openPMD/IO/HDF5/ParallelHDF5IOHandler.hpp",
  "include/openPMD/IO/IOTask.hpp",
  "include/openPMD/Iteration.hpp",
  "include/openPMD/IterationEncoding.hpp",
  "include/openPMD/Mesh.hpp",
  "include/openPMD/ParticlePatches.hpp",
  "include/openPMD/ParticleSpecies.hpp",
  "include/openPMD/Record.hpp",
  "include/openPMD/RecordComponent.hpp",
  "include/openPMD/Series.hpp",
  "include/openPMD/auxiliary/Filesystem.hpp",
  "include/openPMD/auxiliary/Memory.hpp",
  "include/openPMD/auxiliary/OutOfRangeMsg.hpp",
  "include/openPMD/auxiliary/ShareRaw.hpp",
  "include/openPMD/auxiliary/StringManip.hpp",
  "include/openPMD/auxiliary/Variant.hpp",
  "include/openPMD/backend/Attributable.hpp",
  "include/openPMD/backend/Attribute.hpp",
  "include/openPMD/backend/BaseRecord.hpp",
  "include/openPMD/backend/BaseRecordComponent.hpp",
  "include/openPMD/backend/Container.hpp",
  "include/openPMD/backend/MeshRecordComponent.hpp",
  "include/openPMD/backend/PatchRecord.hpp",
  "include/openPMD/backend/PatchRecordComponent.hpp",
  "include/openPMD/backend/Writable.hpp",
  "include/openPMD/openPMD.hpp",
  "include/openPMD/version.hpp",
  "lib/cmake/openPMD/Modules/FindADIOS.cmake",
  "lib/cmake/openPMD/openPMDConfig.cmake",
  "lib/cmake/openPMD/openPMDConfigVersion.cmake",
  "lib/cmake/openPMD/openPMDTargets-release.cmake",
  "lib/cmake/openPMD/openPMDTargets.cmake",
  "lib/libopenPMD.a",
  "lib/python2.7/site-packages/openPMD.so"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py27h2d50403_0",
  "build_number": 0,
  "depends": [
   "adios >=1.13.1",
   "hdf5 >=1.8.13",
   "numpy",
   "python >=2.7,<2.8.0a0"
  ],
  "license": "LGPL 3",
  "license_family": "LGPL",
  "name": "openpmd-api",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1528749570453,
  "version": "0.2.0a"
 },
 "metadata_version": 1,
 "name": "openpmd-api",
 "raw_recipe": "{% set name = \"openpmd-api\" %}\n{% set version = \"0.2.0a\" %}\n{% set sha256 = \"ea81378be1818a18e619467887be9529617c9130a791d6d92f5b560c531b2404\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: 0.2.0-alpha.tar.gz\n  url: https://github.com/openPMD/openPMD-api/archive/0.2.0-alpha.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  # Python 2.7 stack is build with too ancient vc9 (VS2008)\n  skip: True  # [win and py27]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pybind11 >=2.2.1\n    - cmake >=3.10\n    - adios >=1.13.1  # [unix]\n    - hdf5  >=1.8.13\n  run:\n    - python\n    - adios >=1.13.1  # [unix]\n    - hdf5  >=1.8.13\n    - numpy\n\ntest:\n  requires:\n    - numpy\n  imports:\n    - openPMD\n  commands:\n    - python -c \"import openPMD; print(openPMD.__version__);\"\n    - python -c \"import openPMD; print(openPMD.variants)\"\n    - test -f ${PREFIX}/lib/cmake/openPMD/openPMDConfig.cmake             # [unix]\n    - if exist %PREFIX%\\cmake\\openPMDConfig.cmake (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://www.openPMD.org\n  license: LGPL 3\n  license_family: LGPL\n  license_file: COPYING.LESSER\n  summary: 'C++ & Python API for writing & reading (H5, BP, ...), serial & MPI parallel openPMD files.'\n\n  description: |\n    This library provides a common high-level API for openPMD writing and\n    reading. It provides a common interface to I/O libraries and file formats\n    such as HDF5 and ADIOS.\n    This conda-forge package only provides serial I/O, please build from source\n    for MPI parallel I/O on HPC systems. Window support is limited to HDF5 and\n    Python 3.\n  doc_url: https://openpmd-api.readthedocs.io\n  dev_url: https://github.com/openPMD/openPMD-api\n\nextra:\n  recipe-maintainers:\n    - ax3l\n    - C0nsultant\n",
 "rendered_recipe": {
  "about": {
   "description": "This library provides a common high-level API for openPMD writing and\nreading. It provides a common interface to I/O libraries and file formats\nsuch as HDF5 and ADIOS.\nThis conda-forge package only provides serial I/O, please build from source\nfor MPI parallel I/O on HPC systems. Window support is limited to HDF5 and\nPython 3.\n",
   "dev_url": "https://github.com/openPMD/openPMD-api",
   "doc_url": "https://openpmd-api.readthedocs.io",
   "home": "https://www.openPMD.org",
   "license": "LGPL 3",
   "license_family": "LGPL",
   "license_file": "COPYING.LESSER",
   "summary": "C++ & Python API for writing & reading (H5, BP, ...), serial & MPI parallel openPMD files."
  },
  "build": {
   "number": "0",
   "string": "py27h2d50403_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "C0nsultant",
    "ax3l"
   ]
  },
  "package": {
   "name": "openpmd-api",
   "version": "0.2.0a"
  },
  "requirements": {
   "build": [
    "toolchain 2.1.5 0",
    "toolchain_cxx_osx-64 2.1.5 0"
   ],
   "host": [
    "adios 1.13.1 hbecc8f4_2",
    "blosc 1.14.0 1",
    "bzip2 1.0.6 1",
    "ca-certificates 2018.4.16 0",
    "cmake 3.11.3 0",
    "curl 7.60.0 0",
    "expat 2.2.5 0",
    "hdf5 1.10.2 0",
    "krb5 1.14.6 0",
    "libgfortran 3.0.0 0",
    "libssh2 1.8.0 2",
    "libuv 1.20.3 0",
    "ncurses 5.9 10",
    "openssl 1.0.2o 0",
    "pybind11 2.2.3 py27_0",
    "python 2.7.15 0",
    "readline 7.0 0",
    "rhash 1.3.4 0",
    "sqlite 3.20.1 2",
    "tk 8.6.7 0",
    "xz 5.2.3 0",
    "zlib 1.2.11 h470a237_3"
   ],
   "run": [
    "adios >=1.13.1",
    "hdf5 >=1.8.13",
    "numpy",
    "python >=2.7,<2.8.0a0"
   ]
  },
  "source": {
   "fn": "0.2.0-alpha.tar.gz",
   "sha256": "ea81378be1818a18e619467887be9529617c9130a791d6d92f5b560c531b2404",
   "url": "https://github.com/openPMD/openPMD-api/archive/0.2.0-alpha.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import openPMD; print(openPMD.__version__);\"",
    "python -c \"import openPMD; print(openPMD.variants)\"",
    "test -f ${PREFIX}/lib/cmake/openPMD/openPMDConfig.cmake"
   ],
   "imports": [
    "openPMD"
   ],
   "requires": [
    "numpy"
   ]
  }
 },
 "version": "0.2.0a"
}