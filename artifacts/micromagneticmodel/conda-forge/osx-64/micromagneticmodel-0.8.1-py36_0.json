{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.10.9",
  "conda_private": false,
  "conda_version": "4.5.4",
  "description": "The micromagneticmodel is a representation of the physics of a\nmicromagnetic problem in Python. It does not carry out any\ncalculation. However, other packages derive from this abstract\nclass and provide 'micromagnetic calculators'. For example the\n'oommfc' package is a micromagnetic calculator (OOMMFCalculator)\nbased on the micromagneticmodel provided here, and uses OOMMF to\ncarry out any actual numerical calculation.\n",
  "dev_url": "https://github.com/joommf/micromagneticmodel",
  "doc_url": "http://micromagneticmodel.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "home": "http://joommf.github.io/",
  "license": "BSD 3-clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.6.14 py_0",
   "asn1crypto 0.24.0 py36_0",
   "beautifulsoup4 4.6.0 py36_0",
   "ca-certificates 2018.4.16 0",
   "certifi 2018.4.16 py36_0",
   "cffi 1.11.5 py36h342bebf_0",
   "chardet 3.0.4 py36h96c241c_1",
   "clyent 1.2.2 py36_0",
   "conda 4.5.4 py36_0",
   "conda-build 3.10.9 py36_0",
   "conda-env 2.6.0 h36134e3_0",
   "conda-forge-ci-setup 1.3.5 0",
   "conda-verify 2.0.0 py36_0",
   "cryptography 2.2.2 py36h1de35cc_0",
   "decorator 4.3.0 py_0",
   "filelock 3.0.4 py36_0",
   "glob2 0.6 py_0",
   "idna 2.6 py36h8628d0a_1",
   "ipython_genutils 0.2.0 py36_0",
   "jinja2 2.10 py36_0",
   "jsonschema 2.6.0 py36_1",
   "jupyter_core 4.4.0 py_0",
   "libcxx 4.0.1 h579ed51_0",
   "libcxxabi 4.0.1 hebd6815_0",
   "libedit 3.1.20170329 hb402a30_2",
   "libffi 3.2.1 h475c297_4",
   "markupsafe 1.0 py36_0",
   "nbformat 4.4.0 py36_0",
   "ncurses 6.1 h0a44026_0",
   "openssl 1.0.2o 0",
   "pip 10.0.1 py36_0",
   "pkginfo 1.4.2 py36_0",
   "psutil 5.4.6 py36_0",
   "pycosat 0.6.3 py36hee92d8f_0",
   "pycparser 2.18 py36h724b2fc_1",
   "pyopenssl 18.0.0 py36_0",
   "pysocks 1.6.8 py36_0",
   "python 3.6.5 hc167b69_1",
   "python-dateutil 2.7.3 py_0",
   "python.app 2 py36_8",
   "pytz 2018.5 py_0",
   "pyyaml 3.12 py36_1",
   "readline 7.0 hc1231fa_4",
   "requests 2.18.4 py36h4516966_1",
   "ruamel_yaml 0.15.37 py36h1de35cc_2",
   "setuptools 39.2.0 py36_0",
   "six 1.11.0 py36h0e22d5e_1",
   "sqlite 3.23.1 hf1716c9_0",
   "tk 8.6.7 h35a86e2_3",
   "traitlets 4.3.2 py36_0",
   "urllib3 1.22 py36h68b9469_0",
   "wheel 0.31.1 py36_0",
   "xz 5.2.4 h1de35cc_4",
   "yaml 0.1.7 hc338f04_2",
   "zlib 1.2.11 hf3cbc9b_2"
  ],
  "summary": "A Python-based micromagnetic model"
 },
 "conda_build_config": {
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "osx-64"
 },
 "files": [
  "lib/python3.6/site-packages/micromagneticmodel-0.8.1-py3.6.egg-info/PKG-INFO",
  "lib/python3.6/site-packages/micromagneticmodel/__init__.py",
  "lib/python3.6/site-packages/micromagneticmodel/consts.py",
  "lib/python3.6/site-packages/micromagneticmodel/data.py",
  "lib/python3.6/site-packages/micromagneticmodel/drivers/__init__.py",
  "lib/python3.6/site-packages/micromagneticmodel/drivers/driver.py",
  "lib/python3.6/site-packages/micromagneticmodel/drivers/hysteresisdriver.py",
  "lib/python3.6/site-packages/micromagneticmodel/drivers/mindriver.py",
  "lib/python3.6/site-packages/micromagneticmodel/drivers/timedriver.py",
  "lib/python3.6/site-packages/micromagneticmodel/dynamics/__init__.py",
  "lib/python3.6/site-packages/micromagneticmodel/dynamics/damping.py",
  "lib/python3.6/site-packages/micromagneticmodel/dynamics/dynamics.py",
  "lib/python3.6/site-packages/micromagneticmodel/dynamics/dynamicsterm.py",
  "lib/python3.6/site-packages/micromagneticmodel/dynamics/precession.py",
  "lib/python3.6/site-packages/micromagneticmodel/dynamics/stt.py",
  "lib/python3.6/site-packages/micromagneticmodel/hamiltonian/__init__.py",
  "lib/python3.6/site-packages/micromagneticmodel/hamiltonian/cubicanisotropy.py",
  "lib/python3.6/site-packages/micromagneticmodel/hamiltonian/demag.py",
  "lib/python3.6/site-packages/micromagneticmodel/hamiltonian/dmi.py",
  "lib/python3.6/site-packages/micromagneticmodel/hamiltonian/energyproperties.py",
  "lib/python3.6/site-packages/micromagneticmodel/hamiltonian/energyterm.py",
  "lib/python3.6/site-packages/micromagneticmodel/hamiltonian/exchange.py",
  "lib/python3.6/site-packages/micromagneticmodel/hamiltonian/hamiltonian.py",
  "lib/python3.6/site-packages/micromagneticmodel/hamiltonian/uniaxialanisotropy.py",
  "lib/python3.6/site-packages/micromagneticmodel/hamiltonian/zeeman.py",
  "lib/python3.6/site-packages/micromagneticmodel/system.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/__init__.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_consts.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_cubicanisotropy.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_damping.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_data.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_demag.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_dmi.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_driver.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_dynamics.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_energyproperties.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_exchange.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_hamiltonian.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_hysteresisdriver.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_mindriver.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_precession.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_stt.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_system.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_term.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_termsum.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_timedriver.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_uniaxialanisotropy.py",
  "lib/python3.6/site-packages/micromagneticmodel/tests/test_zeeman.py",
  "lib/python3.6/site-packages/micromagneticmodel/util/__init__.py",
  "lib/python3.6/site-packages/micromagneticmodel/util/term.py",
  "lib/python3.6/site-packages/micromagneticmodel/util/termsum.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py36_0",
  "build_number": 0,
  "depends": [
   "discretisedfield",
   "joommfutil",
   "pytest",
   "python >=3.6,<3.7.0a0"
  ],
  "license": "BSD 3-clause",
  "license_family": "BSD",
  "name": "micromagneticmodel",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1530505853635,
  "version": "0.8.1"
 },
 "metadata_version": 1,
 "name": "micromagneticmodel",
 "raw_recipe": "{% set name = \"micromagneticmodel\" %}\n{% set version = \"0.8.1\" %}\n{% set sha256 = \"b43d08a064ce4dec527be813348db3381cde0db19a5310e510d91456e2846094\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  skip: True  # [py27]\n  number: 0\n  script: pip install --no-deps .\n\nrequirements:\n  build:\n    - python\n    - pip\n  run:\n    - python\n    - discretisedfield\n    - joommfutil\n    - pytest\n\ntest:\n  imports:\n    - micromagneticmodel\n    - micromagneticmodel.tests\n    - micromagneticmodel.drivers\n    - micromagneticmodel.dynamics\n    - micromagneticmodel.hamiltonian\n\n  commands:\n    - python -c \"import sys; import micromagneticmodel as m; sys.exit(m.test())\"\n\n\nabout:\n  home: http://joommf.github.io/\n  license: BSD 3-clause\n  summary: A Python-based micromagnetic model\n  license_family: BSD\n  license_file: LICENSE\n\n  description: |\n    The micromagneticmodel is a representation of the physics of a\n    micromagnetic problem in Python. It does not carry out any\n    calculation. However, other packages derive from this abstract\n    class and provide 'micromagnetic calculators'. For example the\n    'oommfc' package is a micromagnetic calculator (OOMMFCalculator)\n    based on the micromagneticmodel provided here, and uses OOMMF to\n    carry out any actual numerical calculation.\n  doc_url: http://micromagneticmodel.readthedocs.io\n  dev_url: https://github.com/joommf/micromagneticmodel\n\nextra:\n  recipe-maintainers:\n    - fangohr\n    - marijanbeg\n    - takluyver\n    - davidcortesortuno\n    - rpep\n",
 "rendered_recipe": {
  "about": {
   "description": "The micromagneticmodel is a representation of the physics of a\nmicromagnetic problem in Python. It does not carry out any\ncalculation. However, other packages derive from this abstract\nclass and provide 'micromagnetic calculators'. For example the\n'oommfc' package is a micromagnetic calculator (OOMMFCalculator)\nbased on the micromagneticmodel provided here, and uses OOMMF to\ncarry out any actual numerical calculation.\n",
   "dev_url": "https://github.com/joommf/micromagneticmodel",
   "doc_url": "http://micromagneticmodel.readthedocs.io",
   "home": "http://joommf.github.io/",
   "license": "BSD 3-clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "A Python-based micromagnetic model"
  },
  "build": {
   "number": "0",
   "script": "pip install --no-deps .",
   "string": "py36_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "davidcortesortuno",
    "fangohr",
    "marijanbeg",
    "rpep",
    "takluyver"
   ]
  },
  "package": {
   "name": "micromagneticmodel",
   "version": "0.8.1"
  },
  "requirements": {
   "build": [
    "ca-certificates 2018.4.16 0",
    "certifi 2018.4.16 py36_0",
    "ncurses 5.9 10",
    "openssl 1.0.2o 0",
    "pip 9.0.3 py36_0",
    "python 3.6.5 1",
    "readline 7.0 0",
    "setuptools 39.2.0 py36_0",
    "sqlite 3.20.1 2",
    "tk 8.6.7 0",
    "wheel 0.31.0 py36_0",
    "xz 5.2.3 0",
    "zlib 1.2.11 h470a237_3"
   ],
   "run": [
    "discretisedfield",
    "joommfutil",
    "pytest",
    "python >=3.6,<3.7.0a0"
   ]
  },
  "source": {
   "fn": "micromagneticmodel-0.8.1.tar.gz",
   "sha256": "b43d08a064ce4dec527be813348db3381cde0db19a5310e510d91456e2846094",
   "url": "https://pypi.io/packages/source/m/micromagneticmodel/micromagneticmodel-0.8.1.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import sys; import micromagneticmodel as m; sys.exit(m.test())\""
   ],
   "imports": [
    "micromagneticmodel",
    "micromagneticmodel.drivers",
    "micromagneticmodel.dynamics",
    "micromagneticmodel.hamiltonian",
    "micromagneticmodel.tests"
   ]
  }
 },
 "version": "0.8.1"
}