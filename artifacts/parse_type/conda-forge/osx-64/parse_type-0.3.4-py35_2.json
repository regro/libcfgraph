{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge/osx-64",
   "https://conda.anaconda.org/conda-forge/noarch",
   "https://repo.continuum.io/pkgs/free/osx-64",
   "https://repo.continuum.io/pkgs/free/noarch",
   "https://repo.continuum.io/pkgs/pro/osx-64",
   "https://repo.continuum.io/pkgs/pro/noarch"
  ],
  "conda_build_version": "2.1.4",
  "conda_env_version": "4.2.13",
  "conda_private": false,
  "conda_version": "4.2.13",
  "description": "parse_type extends the parse module (opposite of string.format()) with the following features:\n  * build type converters for common use cases (enum/mapping, choice)\n  * build a type converter with a cardinality constraint (0..1, 0..*, 1..*) from the type converter with cardinality=1.\n  * compose a type converter from other type converters\n  * an extended parser that supports the CardinalityField naming schema and creates missing type variants (0..1, 0..*, 1..*) from the primary type converter\ndev_url: https://github.com/jenisys/parse_type\n",
  "env_vars": {
   "CIO_TEST": "<not set>",
   "CONDA_DEFAULT_ENV": "root",
   "CONDA_ENVS_PATH": "<not set>",
   "DYLD_LIBRARY_PATH": "<not set>",
   "PATH": "/Users/travis/miniconda3/bin:/Users/travis/.rvm/gems/ruby-2.0.0-p643/bin:/Users/travis/.rvm/gems/ruby-2.0.0-p643@global/bin:/Users/travis/.rvm/rubies/ruby-2.0.0-p643/bin:/Users/travis/.rvm/bin:/Users/travis/bin:/Users/travis/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin",
   "PYTHONHOME": "<not set>",
   "PYTHONPATH": "<not set>"
  },
  "home": "https://github.com/jenisys/parse_type",
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "offline": false,
  "root_pkgs": [
   "anaconda-client-1.6.2-py36_0",
   "conda-forge::beautifulsoup4-4.5.3-py36_0",
   "cffi-1.9.1-py36_0",
   "conda-forge::chardet-2.3.0-py36_0",
   "conda-forge::clyent-1.2.1-py36_0",
   "conda-forge::conda-4.2.13-py36_0",
   "conda-forge::conda-build-2.1.4-py36_1",
   "conda-forge::conda-env-2.6.0-0",
   "conda-forge::conda-forge-build-setup-4.4.1-0",
   "conda-forge::conda-verify-2.0.0-py36_0",
   "cryptography-1.7.1-py36_0",
   "conda-forge::filelock-2.0.6-py36_0",
   "idna-2.2-py36_0",
   "conda-forge::jinja2-2.9.5-py36_0",
   "conda-forge::markupsafe-0.23-py36_1",
   "openssl-1.0.2k-0",
   "pip-9.0.1-py36_1",
   "conda-forge::pkginfo-1.2.1-py36_0",
   "pyasn1-0.1.9-py36_0",
   "pycosat-0.6.1-py36_1",
   "pycparser-2.17-py36_0",
   "pycrypto-2.6.1-py36_4",
   "pyopenssl-16.2.0-py36_0",
   "python-3.6.0-0",
   "conda-forge::python-dateutil-2.6.0-py36_0",
   "conda-forge::pytz-2016.10-py36_0",
   "conda-forge::pyyaml-3.12-py36_0",
   "readline-6.2-2",
   "requests-2.12.4-py36_0",
   "ruamel_yaml-0.11.14-py36_1",
   "setuptools-27.2.0-py36_0",
   "six-1.10.0-py36_0",
   "sqlite-3.13.0-0",
   "tk-8.5.18-0",
   "wheel-0.29.0-py36_0",
   "xz-5.2.2-1",
   "yaml-0.1.6-0",
   "zlib-1.2.8-3"
  ],
  "summary": "Simplifies to build parse types based on the parse module"
 },
 "conda_build_config": {},
 "files": [
  "lib/python3.5/site-packages/parse_type/cfparse.py",
  "lib/python3.5/site-packages/parse_type/parse.py",
  "lib/python3.5/site-packages/parse_type/cardinality.py",
  "lib/python3.5/site-packages/_paver_ext/python_checker.py",
  "lib/python3.5/site-packages/parse_type/cardinality_field.py",
  "lib/python3.5/site-packages/_paver_ext/pip_download.py",
  "lib/python3.5/site-packages/_paver_ext/paver_require.py",
  "lib/python3.5/site-packages/_paver_ext/paver_consume_args.py",
  "lib/python3.5/site-packages/parse_type-0.3.4-py3.5.egg-info/PKG-INFO",
  "lib/python3.5/site-packages/parse_type/parse_util.py",
  "lib/python3.5/site-packages/_paver_ext/python_requirements.py",
  "lib/python3.5/site-packages/_paver_ext/paver_patch.py",
  "lib/python3.5/site-packages/_paver_ext/python_bundle.py",
  "lib/python3.5/site-packages/parse_type/builder.py",
  "lib/python3.5/site-packages/_paver_ext/__init__.py",
  "lib/python3.5/site-packages/parse_type/__init__.py",
  "lib/python3.5/site-packages/parse_type-0.3.4-py3.5.egg-info/zip-safe"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py35_2",
  "build_number": 2,
  "depends": [
   "parse >=1.6",
   "python 3.5*",
   "six"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "parse_type",
  "platform": "osx",
  "subdir": "osx-64",
  "version": "0.3.4"
 },
 "metadata_version": 1,
 "name": "parse_type",
 "raw_recipe": "{% set name = \"parse_type\" %}\n{% set version = \"0.3.4\" %}\n{% set sha256 = \"3dd0b323bafcb8c25e000ce5589042a1c99cba9c3bec77b9f591e46bc9606147\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  script: python setup.py install --single-version-externally-managed --record record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n    - parse >=1.6\n    - six\n    - enum34  # [py2k]\n\ntest:\n  imports:\n    - _paver_ext\n    - parse_type\n\nabout:\n  home: https://github.com/jenisys/parse_type\n  license: BSD-3-Clause\n  summary: 'Simplifies to build parse types based on the parse module'\n  license_family: BSD\n  description: |\n    parse_type extends the parse module (opposite of string.format()) with the following features:\n      * build type converters for common use cases (enum/mapping, choice)\n      * build a type converter with a cardinality constraint (0..1, 0..*, 1..*) from the type converter with cardinality=1.\n      * compose a type converter from other type converters\n      * an extended parser that supports the CardinalityField naming schema and creates missing type variants (0..1, 0..*, 1..*) from the primary type converter\n    dev_url: https://github.com/jenisys/parse_type\n    \nextra:\n  recipe-maintainers:\n    - stuertz\n",
 "rendered_recipe": {
  "about": {
   "description": "parse_type extends the parse module (opposite of string.format()) with the following features:\n  * build type converters for common use cases (enum/mapping, choice)\n  * build a type converter with a cardinality constraint (0..1, 0..*, 1..*) from the type converter with cardinality=1.\n  * compose a type converter from other type converters\n  * an extended parser that supports the CardinalityField naming schema and creates missing type variants (0..1, 0..*, 1..*) from the primary type converter\ndev_url: https://github.com/jenisys/parse_type\n",
   "home": "https://github.com/jenisys/parse_type",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "summary": "Simplifies to build parse types based on the parse module"
  },
  "build": {
   "number": "2",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "py35_2"
  },
  "extra": {
   "recipe-maintainers": [
    "stuertz"
   ]
  },
  "package": {
   "name": "parse_type",
   "version": "0.3.4"
  },
  "requirements": {
   "build": [],
   "run": [
    "python",
    "parse >=1.6",
    "six"
   ]
  },
  "source": {
   "fn": "parse_type-0.3.4.tar.gz",
   "sha256": "3dd0b323bafcb8c25e000ce5589042a1c99cba9c3bec77b9f591e46bc9606147",
   "url": "https://pypi.io/packages/source/p/parse_type/parse_type-0.3.4.tar.gz"
  },
  "test": {
   "imports": [
    "_paver_ext",
    "parse_type"
   ]
  }
 },
 "version": "0.3.4"
}