{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.25.0",
  "conda_version": "23.3.1",
  "description": "Intel\u00ae Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud.\n\nInstalling OpenVINO Runtime from Conda Forge is recommended for C / C++ developers,\nas it provides only the C / C++ Runtime API.\nIf you work with Python or aim at GPU inference, consider other OpenVINO distribution channels:\nhttps://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n",
  "dev_url": "https://github.com/openvinotoolkit/openvino",
  "doc_url": "https://docs.openvino.ai/latest/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov"
   ]
  },
  "home": "https://github.com/openvinotoolkit/openvino",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_family": "Apache",
  "license_file": [
   "LICENSE",
   "third-party-programs.txt",
   "onednn_third-party-programs.txt",
   "runtime-third-party-programs.txt"
  ],
  "root_pkgs": [
   "rich 13.4.2 pyhd8ed1ab_0",
   "python-libarchive-c 5.0 py310hff52083_1",
   "pycosat 0.6.4 py310h5764c6d_1",
   "keyutils 1.6.1 h166bdaf_0",
   "jsonschema 4.18.4 pyhd8ed1ab_0",
   "patchelf 0.17.2 h58526e2_0",
   "charset-normalizer 3.2.0 pyhd8ed1ab_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "libgcc-ng 13.1.0 he5830b7_0",
   "libnsl 2.0.0 h7f98852_0",
   "setuptools 68.0.0 pyhd8ed1ab_0",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "python 3.10.12 hd12c33a_0_cpython",
   "libtiff 4.5.1 h8b53f26_0",
   "git 2.41.0 pl5321h86e50cf_0",
   "more-itertools 9.1.0 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.32 py310h2372a71_0",
   "krb5 1.21.1 h659d440_0",
   "ncurses 6.4 hcb278e6_0",
   "yaml-cpp 0.7.0 h27087fc_2",
   "dataclasses 0.8 pyhc8e2a94_3",
   "markupsafe 2.1.3 py310h2372a71_0",
   "libuuid 2.38.1 h0b41bf4_0",
   "py-lief 0.12.3 py310hd8f1fbe_0",
   "backports.functools_lru_cache 1.6.5 pyhd8ed1ab_0",
   "libgomp 13.1.0 he5830b7_0",
   "libexpat 2.5.0 hcb278e6_1",
   "brotlipy 0.7.0 py310h5764c6d_1005",
   "xorg-libxau 1.0.11 hd590300_0",
   "perl 5.32.1 4_hd590300_perl5",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "glob2 0.7 py_0",
   "pygments 2.15.1 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "c-ares 1.19.1 hd590300_0",
   "libwebp-base 1.3.1 hd590300_0",
   "attrs 23.1.0 pyh71513ae_1",
   "reproc 14.2.4 h0b41bf4_0",
   "filelock 3.12.2 pyhd8ed1ab_0",
   "backports 1.0 pyhd8ed1ab_3",
   "lcms2 2.15 haa2dc70_1",
   "zipp 3.16.2 pyhd8ed1ab_0",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "libnghttp2 1.52.0 h61bc06f_0",
   "libsqlite 3.42.0 h2797004_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "platformdirs 3.9.1 pyhd8ed1ab_0",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "libxcb 1.15 h0b41bf4_0",
   "mamba 1.4.2 py310h51d5547_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "icu 72.1 hcb278e6_0",
   "pluggy 1.2.0 pyhd8ed1ab_0",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "pcre2 10.40 hc3806b6_0",
   "wheel 0.40.0 pyhd8ed1ab_1",
   "anyio 3.7.1 pyhd8ed1ab_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "referencing 0.30.0 pyhd8ed1ab_0",
   "freetype 2.12.1 hca18f0e_1",
   "pip 23.2 pyhd8ed1ab_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "tornado 6.3.2 py310h2372a71_0",
   "conda-index 0.2.3 pyhd8ed1ab_0",
   "rpds-py 0.9.2 py310hcb5633a_0",
   "patch 2.7.6 h7f98852_1002",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "json5 0.9.14 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "requests 2.31.0 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h2f28480_2",
   "libcurl 8.2.0 hca28451_0",
   "jsonpatch 1.32 pyhd8ed1ab_0",
   "cffi 1.15.1 py310h255011f_3",
   "yaml 0.2.5 h7f98852_2",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "idna 3.4 pyhd8ed1ab_0",
   "python-fastjsonschema 2.17.1 pyhd8ed1ab_0",
   "libstdcxx-ng 13.1.0 hfd8a6a1_0",
   "six 1.16.0 pyh6c4a22f_0",
   "readline 8.2 h8228510_1",
   "bzip2 1.0.8 h7f98852_4",
   "pybind11-abi 4 hd8ed1ab_3",
   "libpng 1.6.39 h753d276_0",
   "prompt_toolkit 3.0.39 hd8ed1ab_0",
   "libev 4.33 h516909a_1",
   "libjpeg-turbo 2.1.5.1 h0b41bf4_0",
   "urllib3 1.26.15 pyhd8ed1ab_0",
   "markdown-it-py 3.0.0 pyhd8ed1ab_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "libzlib 1.2.13 hd590300_5",
   "libffi 3.4.2 h7f98852_5",
   "python_abi 3.10 3_cp310",
   "curl 8.2.0 hca28451_0",
   "pillow 10.0.0 py310h582fbeb_0",
   "typing_extensions 4.7.1 pyha770c72_0",
   "conda-pack 0.7.0 pyh6c4a22f_0",
   "ld_impl_linux-64 2.40 h41732ed_0",
   "openjpeg 2.5.0 hfec8fc6_2",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "chardet 5.1.0 py310hff52083_0",
   "ruamel.yaml.clib 0.2.7 py310h1fa729e_1",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "xorg-libxdmcp 1.1.3 h7f98852_0",
   "importlib_resources 6.0.0 pyhd8ed1ab_1",
   "openssl 3.1.1 hd590300_1",
   "conda 23.3.1 py310hff52083_0",
   "clyent 1.2.2 py_1",
   "jupyter_core 5.3.1 py310hff52083_0",
   "_openmp_mutex 4.5 2_gnu",
   "cryptography 41.0.2 py310h75e40e8_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "zstandard 0.19.0 py310h1275a96_2",
   "nbformat 5.9.1 pyhd8ed1ab_0",
   "gettext 0.21.1 h27087fc_0",
   "psutil 5.9.5 py310h1fa729e_0",
   "ruamel_yaml 0.15.80 py310h5764c6d_1008",
   "prompt-toolkit 3.0.39 pyha770c72_0",
   "libsolv 0.7.24 hfc55251_1",
   "libiconv 1.17 h166bdaf_0",
   "xz 5.2.6 h166bdaf_0",
   "jsonschema-specifications 2023.7.1 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "libxml2 2.11.4 h0d562d8_0",
   "conda-build 3.25.0 py310hff52083_0",
   "exceptiongroup 1.1.2 pyhd8ed1ab_0",
   "certifi 2023.5.7 pyhd8ed1ab_0",
   "lzo 2.10 h516909a_1000",
   "libmambapy 1.4.2 py310h1428755_0",
   "libssh2 1.11.0 h0841786_0",
   "liblief 0.12.3 h27087fc_0",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "tk 8.6.12 h27826a3_0",
   "lz4-c 1.9.4 hcb278e6_0",
   "zstd 1.5.2 hfc55251_7",
   "pytz 2023.3 pyhd8ed1ab_0",
   "packaging 23.1 pyhd8ed1ab_0",
   "ca-certificates 2023.5.7 hbcca054_0",
   "typing-extensions 4.7.1 hd8ed1ab_0",
   "jsonpointer 2.0 py_0",
   "tini 0.19.0 h166bdaf_1",
   "libarchive 3.6.2 h039dbb9_1",
   "fmt 9.1.0 h924138e_0",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "pyyaml 6.0 py310h5764c6d_5",
   "reproc-cpp 14.2.4 hcb278e6_0",
   "lerc 4.0.0 h27087fc_0",
   "conda-package-streaming 0.8.0 pyhd8ed1ab_0",
   "joblib 1.3.0 pyhd8ed1ab_1",
   "libmamba 1.4.2 hcea66bb_0",
   "anaconda-client 1.12.0 pyhd8ed1ab_0",
   "tzdata 2023c h71feb2d_0",
   "click 8.1.6 unix_pyh707e725_0",
   "tqdm 4.65.0 pyhd8ed1ab_1",
   "su-exec 0.2 h166bdaf_1003",
   "libdeflate 1.18 h0b41bf4_0",
   "pthread-stubs 0.4 h36c2ea0_1001",
   "brotli-python 1.0.9 py310hd8f1fbe_9",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "pyopenssl 23.2.0 pyhd8ed1ab_1",
   "_libgcc_mutex 0.1 conda_forge",
   "boa 0.15.1 pyhd8ed1ab_0",
   "conda-forge-metadata 0.5.0 pyhd8ed1ab_0",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "jq 1.6 h36c2ea0_1000",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "conda-forge-ci-setup 3.32.5 py310h7a2d8a0_100",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "oniguruma 6.9.8 h166bdaf_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "Intel\u00ae Distribution of OpenVINO\u2122 Toolkit",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "12",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "12",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "gflags": "2.2",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "tbb_devel": "2021",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ],
  "zlib": "1.2"
 },
 "conda_pkg_format": "2",
 "files": [
  "include/ie/c_api/ie_c_api.h",
  "include/ie/cldnn/cldnn_config.hpp",
  "include/ie/cpp/ie_cnn_network.h",
  "include/ie/cpp/ie_executable_network.hpp",
  "include/ie/cpp/ie_infer_request.hpp",
  "include/ie/cpp/ie_memory_state.hpp",
  "include/ie/cpu/cpu_config.hpp",
  "include/ie/details/ie_blob_iterator.hpp",
  "include/ie/details/ie_exception.hpp",
  "include/ie/details/ie_pre_allocator.hpp",
  "include/ie/details/ie_so_loader.h",
  "include/ie/details/ie_so_pointer.hpp",
  "include/ie/gna/gna_config.hpp",
  "include/ie/gpu/details/gpu_context_helpers.hpp",
  "include/ie/gpu/gpu_config.hpp",
  "include/ie/gpu/gpu_context_api_dx.hpp",
  "include/ie/gpu/gpu_context_api_ocl.hpp",
  "include/ie/gpu/gpu_context_api_va.hpp",
  "include/ie/gpu/gpu_ocl_wrapper.hpp",
  "include/ie/gpu/gpu_params.hpp",
  "include/ie/hetero/hetero_plugin_config.hpp",
  "include/ie/ie_allocator.hpp",
  "include/ie/ie_api.h",
  "include/ie/ie_blob.h",
  "include/ie/ie_common.h",
  "include/ie/ie_compound_blob.h",
  "include/ie/ie_core.hpp",
  "include/ie/ie_data.h",
  "include/ie/ie_extension.h",
  "include/ie/ie_icnn_network.hpp",
  "include/ie/ie_iexecutable_network.hpp",
  "include/ie/ie_iextension.h",
  "include/ie/ie_iinfer_request.hpp",
  "include/ie/ie_input_info.hpp",
  "include/ie/ie_layouts.h",
  "include/ie/ie_locked_memory.hpp",
  "include/ie/ie_parallel.hpp",
  "include/ie/ie_parameter.hpp",
  "include/ie/ie_plugin_config.hpp",
  "include/ie/ie_precision.hpp",
  "include/ie/ie_preprocess.hpp",
  "include/ie/ie_remote_blob.hpp",
  "include/ie/ie_remote_context.hpp",
  "include/ie/ie_transformations.hpp",
  "include/ie/ie_version.hpp",
  "include/ie/inference_engine.hpp",
  "include/ie/multi-device/multi_device_config.hpp",
  "include/ie/vpu/hddl_config.hpp",
  "include/ie/vpu/myriad_config.hpp",
  "include/ie/vpu/vpu_config.hpp",
  "include/ngraph/attribute_adapter.hpp",
  "include/ngraph/attribute_visitor.hpp",
  "include/ngraph/axis_set.hpp",
  "include/ngraph/axis_vector.hpp",
  "include/ngraph/check.hpp",
  "include/ngraph/compatibility.hpp",
  "include/ngraph/coordinate.hpp",
  "include/ngraph/coordinate_diff.hpp",
  "include/ngraph/deprecated.hpp",
  "include/ngraph/descriptor/input.hpp",
  "include/ngraph/descriptor/output.hpp",
  "include/ngraph/descriptor/tensor.hpp",
  "include/ngraph/dimension.hpp",
  "include/ngraph/distributed.hpp",
  "include/ngraph/enum_names.hpp",
  "include/ngraph/env_util.hpp",
  "include/ngraph/evaluator.hpp",
  "include/ngraph/except.hpp",
  "include/ngraph/factory.hpp",
  "include/ngraph/factory_adapter.hpp",
  "include/ngraph/file_util.hpp",
  "include/ngraph/frontend/onnx_import/core/node.hpp",
  "include/ngraph/frontend/onnx_import/core/null_node.hpp",
  "include/ngraph/frontend/onnx_import/core/operator_set.hpp",
  "include/ngraph/frontend/onnx_import/onnx.hpp",
  "include/ngraph/frontend/onnx_import/onnx_importer_visibility.hpp",
  "include/ngraph/frontend/onnx_import/onnx_utils.hpp",
  "include/ngraph/function.hpp",
  "include/ngraph/graph_util.hpp",
  "include/ngraph/interval.hpp",
  "include/ngraph/log.hpp",
  "include/ngraph/ngraph.hpp",
  "include/ngraph/ngraph_visibility.hpp",
  "include/ngraph/node.hpp",
  "include/ngraph/node_input.hpp",
  "include/ngraph/node_output.hpp",
  "include/ngraph/op/abs.hpp",
  "include/ngraph/op/acos.hpp",
  "include/ngraph/op/acosh.hpp",
  "include/ngraph/op/adaptive_avg_pool.hpp",
  "include/ngraph/op/adaptive_max_pool.hpp",
  "include/ngraph/op/add.hpp",
  "include/ngraph/op/and.hpp",
  "include/ngraph/op/asin.hpp",
  "include/ngraph/op/asinh.hpp",
  "include/ngraph/op/assign.hpp",
  "include/ngraph/op/atan.hpp",
  "include/ngraph/op/atanh.hpp",
  "include/ngraph/op/avg_pool.hpp",
  "include/ngraph/op/batch_norm.hpp",
  "include/ngraph/op/batch_to_space.hpp",
  "include/ngraph/op/binary_convolution.hpp",
  "include/ngraph/op/broadcast.hpp",
  "include/ngraph/op/bucketize.hpp",
  "include/ngraph/op/ceiling.hpp",
  "include/ngraph/op/clamp.hpp",
  "include/ngraph/op/concat.hpp",
  "include/ngraph/op/constant.hpp",
  "include/ngraph/op/convert.hpp",
  "include/ngraph/op/convert_like.hpp",
  "include/ngraph/op/convolution.hpp",
  "include/ngraph/op/cos.hpp",
  "include/ngraph/op/cosh.hpp",
  "include/ngraph/op/ctc_greedy_decoder.hpp",
  "include/ngraph/op/ctc_greedy_decoder_seq_len.hpp",
  "include/ngraph/op/ctc_loss.hpp",
  "include/ngraph/op/cum_sum.hpp",
  "include/ngraph/op/deformable_convolution.hpp",
  "include/ngraph/op/deformable_psroi_pooling.hpp",
  "include/ngraph/op/depth_to_space.hpp",
  "include/ngraph/op/detection_output.hpp",
  "include/ngraph/op/dft.hpp",
  "include/ngraph/op/divide.hpp",
  "include/ngraph/op/einsum.hpp",
  "include/ngraph/op/elu.hpp",
  "include/ngraph/op/embedding_segments_sum.hpp",
  "include/ngraph/op/embeddingbag_offsets_sum.hpp",
  "include/ngraph/op/embeddingbag_packedsum.hpp",
  "include/ngraph/op/equal.hpp",
  "include/ngraph/op/erf.hpp",
  "include/ngraph/op/exp.hpp",
  "include/ngraph/op/experimental_detectron_detection_output.hpp",
  "include/ngraph/op/experimental_detectron_generate_proposals.hpp",
  "include/ngraph/op/experimental_detectron_prior_grid_generator.hpp",
  "include/ngraph/op/experimental_detectron_roi_feature.hpp",
  "include/ngraph/op/experimental_detectron_topkrois.hpp",
  "include/ngraph/op/extractimagepatches.hpp",
  "include/ngraph/op/eye.hpp",
  "include/ngraph/op/fake_quantize.hpp",
  "include/ngraph/op/floor.hpp",
  "include/ngraph/op/floor_mod.hpp",
  "include/ngraph/op/gather.hpp",
  "include/ngraph/op/gather_elements.hpp",
  "include/ngraph/op/gather_nd.hpp",
  "include/ngraph/op/gather_tree.hpp",
  "include/ngraph/op/gelu.hpp",
  "include/ngraph/op/generate_proposals.hpp",
  "include/ngraph/op/greater.hpp",
  "include/ngraph/op/greater_eq.hpp",
  "include/ngraph/op/grid_sample.hpp",
  "include/ngraph/op/grn.hpp",
  "include/ngraph/op/group_conv.hpp",
  "include/ngraph/op/gru_cell.hpp",
  "include/ngraph/op/gru_sequence.hpp",
  "include/ngraph/op/hard_sigmoid.hpp",
  "include/ngraph/op/hsigmoid.hpp",
  "include/ngraph/op/hswish.hpp",
  "include/ngraph/op/i420_to_bgr.hpp",
  "include/ngraph/op/i420_to_rgb.hpp",
  "include/ngraph/op/idft.hpp",
  "include/ngraph/op/if.hpp",
  "include/ngraph/op/interpolate.hpp",
  "include/ngraph/op/irdft.hpp",
  "include/ngraph/op/is_finite.hpp",
  "include/ngraph/op/is_inf.hpp",
  "include/ngraph/op/is_nan.hpp",
  "include/ngraph/op/less.hpp",
  "include/ngraph/op/less_eq.hpp",
  "include/ngraph/op/log.hpp",
  "include/ngraph/op/log_softmax.hpp",
  "include/ngraph/op/loop.hpp",
  "include/ngraph/op/lrn.hpp",
  "include/ngraph/op/lstm_cell.hpp",
  "include/ngraph/op/lstm_sequence.hpp",
  "include/ngraph/op/matmul.hpp",
  "include/ngraph/op/matrix_nms.hpp",
  "include/ngraph/op/max.hpp",
  "include/ngraph/op/max_pool.hpp",
  "include/ngraph/op/maximum.hpp",
  "include/ngraph/op/min.hpp",
  "include/ngraph/op/minimum.hpp",
  "include/ngraph/op/mish.hpp",
  "include/ngraph/op/mod.hpp",
  "include/ngraph/op/multiclass_nms.hpp",
  "include/ngraph/op/multiply.hpp",
  "include/ngraph/op/mvn.hpp",
  "include/ngraph/op/negative.hpp",
  "include/ngraph/op/non_max_suppression.hpp",
  "include/ngraph/op/non_zero.hpp",
  "include/ngraph/op/normalize_l2.hpp",
  "include/ngraph/op/not.hpp",
  "include/ngraph/op/not_equal.hpp",
  "include/ngraph/op/nv12_to_bgr.hpp",
  "include/ngraph/op/nv12_to_rgb.hpp",
  "include/ngraph/op/one_hot.hpp",
  "include/ngraph/op/op.hpp",
  "include/ngraph/op/or.hpp",
  "include/ngraph/op/pad.hpp",
  "include/ngraph/op/parameter.hpp",
  "include/ngraph/op/power.hpp",
  "include/ngraph/op/prelu.hpp",
  "include/ngraph/op/prior_box.hpp",
  "include/ngraph/op/prior_box_clustered.hpp",
  "include/ngraph/op/proposal.hpp",
  "include/ngraph/op/psroi_pooling.hpp",
  "include/ngraph/op/random_uniform.hpp",
  "include/ngraph/op/range.hpp",
  "include/ngraph/op/rdft.hpp",
  "include/ngraph/op/read_value.hpp",
  "include/ngraph/op/reduce_l1.hpp",
  "include/ngraph/op/reduce_l2.hpp",
  "include/ngraph/op/reduce_logical_and.hpp",
  "include/ngraph/op/reduce_logical_or.hpp",
  "include/ngraph/op/reduce_mean.hpp",
  "include/ngraph/op/reduce_prod.hpp",
  "include/ngraph/op/reduce_sum.hpp",
  "include/ngraph/op/region_yolo.hpp",
  "include/ngraph/op/relu.hpp",
  "include/ngraph/op/reorg_yolo.hpp",
  "include/ngraph/op/reshape.hpp",
  "include/ngraph/op/result.hpp",
  "include/ngraph/op/reverse.hpp",
  "include/ngraph/op/reverse_sequence.hpp",
  "include/ngraph/op/rnn_cell.hpp",
  "include/ngraph/op/rnn_sequence.hpp",
  "include/ngraph/op/roi_align.hpp",
  "include/ngraph/op/roi_pooling.hpp",
  "include/ngraph/op/roll.hpp",
  "include/ngraph/op/round.hpp",
  "include/ngraph/op/scatter_elements_update.hpp",
  "include/ngraph/op/scatter_nd_update.hpp",
  "include/ngraph/op/scatter_update.hpp",
  "include/ngraph/op/select.hpp",
  "include/ngraph/op/selu.hpp",
  "include/ngraph/op/shape_of.hpp",
  "include/ngraph/op/shuffle_channels.hpp",
  "include/ngraph/op/sigmoid.hpp",
  "include/ngraph/op/sign.hpp",
  "include/ngraph/op/sin.hpp",
  "include/ngraph/op/sinh.hpp",
  "include/ngraph/op/sink.hpp",
  "include/ngraph/op/slice.hpp",
  "include/ngraph/op/softmax.hpp",
  "include/ngraph/op/softplus.hpp",
  "include/ngraph/op/softsign.hpp",
  "include/ngraph/op/space_to_batch.hpp",
  "include/ngraph/op/space_to_depth.hpp",
  "include/ngraph/op/split.hpp",
  "include/ngraph/op/sqrt.hpp",
  "include/ngraph/op/squared_difference.hpp",
  "include/ngraph/op/squeeze.hpp",
  "include/ngraph/op/strided_slice.hpp",
  "include/ngraph/op/subtract.hpp",
  "include/ngraph/op/swish.hpp",
  "include/ngraph/op/tan.hpp",
  "include/ngraph/op/tanh.hpp",
  "include/ngraph/op/tensor_iterator.hpp",
  "include/ngraph/op/tile.hpp",
  "include/ngraph/op/topk.hpp",
  "include/ngraph/op/transpose.hpp",
  "include/ngraph/op/unique.hpp",
  "include/ngraph/op/unsqueeze.hpp",
  "include/ngraph/op/util/activation_functions.hpp",
  "include/ngraph/op/util/arithmetic_reduction.hpp",
  "include/ngraph/op/util/arithmetic_reductions_keep_dims.hpp",
  "include/ngraph/op/util/attr_types.hpp",
  "include/ngraph/op/util/binary_elementwise_arithmetic.hpp",
  "include/ngraph/op/util/binary_elementwise_comparison.hpp",
  "include/ngraph/op/util/binary_elementwise_logical.hpp",
  "include/ngraph/op/util/broadcast_base.hpp",
  "include/ngraph/op/util/deformable_convolution_base.hpp",
  "include/ngraph/op/util/detection_output_base.hpp",
  "include/ngraph/op/util/elementwise_args.hpp",
  "include/ngraph/op/util/embeddingbag_offsets_base.hpp",
  "include/ngraph/op/util/embeddingbag_packed_base.hpp",
  "include/ngraph/op/util/eval_copy.hpp",
  "include/ngraph/op/util/evaluate_helpers.hpp",
  "include/ngraph/op/util/fft_base.hpp",
  "include/ngraph/op/util/framework_node.hpp",
  "include/ngraph/op/util/gather_base.hpp",
  "include/ngraph/op/util/gather_nd_base.hpp",
  "include/ngraph/op/util/index_reduction.hpp",
  "include/ngraph/op/util/logical_reduction.hpp",
  "include/ngraph/op/util/logical_reduction_keep_dims.hpp",
  "include/ngraph/op/util/max_pool_base.hpp",
  "include/ngraph/op/util/multi_subgraph_base.hpp",
  "include/ngraph/op/util/multiclass_nms_base.hpp",
  "include/ngraph/op/util/op_annotations.hpp",
  "include/ngraph/op/util/op_types.hpp",
  "include/ngraph/op/util/recurrent_sequence.hpp",
  "include/ngraph/op/util/reduction_base.hpp",
  "include/ngraph/op/util/rnn_cell_base.hpp",
  "include/ngraph/op/util/scatter_base.hpp",
  "include/ngraph/op/util/scatter_nd_base.hpp",
  "include/ngraph/op/util/slice_plan.hpp",
  "include/ngraph/op/util/sub_graph_base.hpp",
  "include/ngraph/op/util/unary_elementwise_arithmetic.hpp",
  "include/ngraph/op/util/variable.hpp",
  "include/ngraph/op/util/variable_context.hpp",
  "include/ngraph/op/util/variable_extension.hpp",
  "include/ngraph/op/util/variable_value.hpp",
  "include/ngraph/op/variadic_split.hpp",
  "include/ngraph/op/xor.hpp",
  "include/ngraph/ops.hpp",
  "include/ngraph/opsets/opset.hpp",
  "include/ngraph/opsets/opset1.hpp",
  "include/ngraph/opsets/opset10.hpp",
  "include/ngraph/opsets/opset10_tbl.hpp",
  "include/ngraph/opsets/opset1_tbl.hpp",
  "include/ngraph/opsets/opset2.hpp",
  "include/ngraph/opsets/opset2_tbl.hpp",
  "include/ngraph/opsets/opset3.hpp",
  "include/ngraph/opsets/opset3_tbl.hpp",
  "include/ngraph/opsets/opset4.hpp",
  "include/ngraph/opsets/opset4_tbl.hpp",
  "include/ngraph/opsets/opset5.hpp",
  "include/ngraph/opsets/opset5_tbl.hpp",
  "include/ngraph/opsets/opset6.hpp",
  "include/ngraph/opsets/opset6_tbl.hpp",
  "include/ngraph/opsets/opset7.hpp",
  "include/ngraph/opsets/opset7_tbl.hpp",
  "include/ngraph/opsets/opset8.hpp",
  "include/ngraph/opsets/opset8_tbl.hpp",
  "include/ngraph/opsets/opset9.hpp",
  "include/ngraph/opsets/opset9_tbl.hpp",
  "include/ngraph/output_vector.hpp",
  "include/ngraph/partial_shape.hpp",
  "include/ngraph/pass/constant_folding.hpp",
  "include/ngraph/pass/convert_fp32_to_fp16.hpp",
  "include/ngraph/pass/graph_rewrite.hpp",
  "include/ngraph/pass/low_latency.hpp",
  "include/ngraph/pass/manager.hpp",
  "include/ngraph/pass/pass.hpp",
  "include/ngraph/pass/pass_config.hpp",
  "include/ngraph/pass/serialize.hpp",
  "include/ngraph/pass/validate.hpp",
  "include/ngraph/pass/visualize_tree.hpp",
  "include/ngraph/pattern/matcher.hpp",
  "include/ngraph/pattern/op/any.hpp",
  "include/ngraph/pattern/op/any_of.hpp",
  "include/ngraph/pattern/op/any_output.hpp",
  "include/ngraph/pattern/op/branch.hpp",
  "include/ngraph/pattern/op/capture.hpp",
  "include/ngraph/pattern/op/label.hpp",
  "include/ngraph/pattern/op/or.hpp",
  "include/ngraph/pattern/op/pattern.hpp",
  "include/ngraph/pattern/op/skip.hpp",
  "include/ngraph/pattern/op/true.hpp",
  "include/ngraph/pattern/op/wrap_type.hpp",
  "include/ngraph/rank.hpp",
  "include/ngraph/rt_info.hpp",
  "include/ngraph/runtime/aligned_buffer.hpp",
  "include/ngraph/runtime/host_tensor.hpp",
  "include/ngraph/runtime/shared_buffer.hpp",
  "include/ngraph/runtime/tensor.hpp",
  "include/ngraph/shape.hpp",
  "include/ngraph/shape_util.hpp",
  "include/ngraph/slice_plan.hpp",
  "include/ngraph/specialize_function.hpp",
  "include/ngraph/strides.hpp",
  "include/ngraph/type.hpp",
  "include/ngraph/type/bfloat16.hpp",
  "include/ngraph/type/element_type.hpp",
  "include/ngraph/type/element_type_traits.hpp",
  "include/ngraph/type/float16.hpp",
  "include/ngraph/util.hpp",
  "include/ngraph/validation_util.hpp",
  "include/ngraph/variant.hpp",
  "include/ngraph/version.hpp",
  "include/ngraph/visibility.hpp",
  "include/openvino/c/openvino.h",
  "include/openvino/c/ov_common.h",
  "include/openvino/c/ov_compiled_model.h",
  "include/openvino/c/ov_core.h",
  "include/openvino/c/ov_dimension.h",
  "include/openvino/c/ov_infer_request.h",
  "include/openvino/c/ov_layout.h",
  "include/openvino/c/ov_model.h",
  "include/openvino/c/ov_node.h",
  "include/openvino/c/ov_partial_shape.h",
  "include/openvino/c/ov_prepostprocess.h",
  "include/openvino/c/ov_property.h",
  "include/openvino/c/ov_rank.h",
  "include/openvino/c/ov_shape.h",
  "include/openvino/c/ov_tensor.h",
  "include/openvino/core/any.hpp",
  "include/openvino/core/attribute_adapter.hpp",
  "include/openvino/core/attribute_visitor.hpp",
  "include/openvino/core/axis_set.hpp",
  "include/openvino/core/axis_vector.hpp",
  "include/openvino/core/coordinate.hpp",
  "include/openvino/core/coordinate_diff.hpp",
  "include/openvino/core/core.hpp",
  "include/openvino/core/core_visibility.hpp",
  "include/openvino/core/deprecated.hpp",
  "include/openvino/core/descriptor/input.hpp",
  "include/openvino/core/descriptor/output.hpp",
  "include/openvino/core/descriptor/tensor.hpp",
  "include/openvino/core/dimension.hpp",
  "include/openvino/core/enum_mask.hpp",
  "include/openvino/core/enum_names.hpp",
  "include/openvino/core/except.hpp",
  "include/openvino/core/extension.hpp",
  "include/openvino/core/graph_util.hpp",
  "include/openvino/core/interval.hpp",
  "include/openvino/core/layout.hpp",
  "include/openvino/core/model.hpp",
  "include/openvino/core/node.hpp",
  "include/openvino/core/node_input.hpp",
  "include/openvino/core/node_output.hpp",
  "include/openvino/core/node_vector.hpp",
  "include/openvino/core/op_extension.hpp",
  "include/openvino/core/partial_shape.hpp",
  "include/openvino/core/preprocess/color_format.hpp",
  "include/openvino/core/preprocess/input_info.hpp",
  "include/openvino/core/preprocess/input_model_info.hpp",
  "include/openvino/core/preprocess/input_tensor_info.hpp",
  "include/openvino/core/preprocess/output_info.hpp",
  "include/openvino/core/preprocess/output_model_info.hpp",
  "include/openvino/core/preprocess/output_tensor_info.hpp",
  "include/openvino/core/preprocess/postprocess_steps.hpp",
  "include/openvino/core/preprocess/pre_post_process.hpp",
  "include/openvino/core/preprocess/preprocess_steps.hpp",
  "include/openvino/core/preprocess/resize_algorithm.hpp",
  "include/openvino/core/rank.hpp",
  "include/openvino/core/rt_info.hpp",
  "include/openvino/core/rtti.hpp",
  "include/openvino/core/runtime_attribute.hpp",
  "include/openvino/core/shape.hpp",
  "include/openvino/core/strides.hpp",
  "include/openvino/core/type.hpp",
  "include/openvino/core/type/bfloat16.hpp",
  "include/openvino/core/type/element_type.hpp",
  "include/openvino/core/type/element_type_traits.hpp",
  "include/openvino/core/type/float16.hpp",
  "include/openvino/core/validation_util.hpp",
  "include/openvino/core/version.hpp",
  "include/openvino/core/visibility.hpp",
  "include/openvino/frontend/exception.hpp",
  "include/openvino/frontend/extension.hpp",
  "include/openvino/frontend/extension/conversion.hpp",
  "include/openvino/frontend/extension/decoder_transformation.hpp",
  "include/openvino/frontend/extension/holder.hpp",
  "include/openvino/frontend/extension/op.hpp",
  "include/openvino/frontend/extension/progress_reporter.hpp",
  "include/openvino/frontend/extension/telemetry.hpp",
  "include/openvino/frontend/frontend.hpp",
  "include/openvino/frontend/input_model.hpp",
  "include/openvino/frontend/manager.hpp",
  "include/openvino/frontend/node_context.hpp",
  "include/openvino/frontend/onnx/extension/conversion.hpp",
  "include/openvino/frontend/onnx/extension/op.hpp",
  "include/openvino/frontend/onnx/frontend.hpp",
  "include/openvino/frontend/onnx/node_context.hpp",
  "include/openvino/frontend/onnx/visibility.hpp",
  "include/openvino/frontend/paddle/decoder.hpp",
  "include/openvino/frontend/paddle/exception.hpp",
  "include/openvino/frontend/paddle/extension/conversion.hpp",
  "include/openvino/frontend/paddle/frontend.hpp",
  "include/openvino/frontend/paddle/node_context.hpp",
  "include/openvino/frontend/paddle/visibility.hpp",
  "include/openvino/frontend/place.hpp",
  "include/openvino/frontend/tensorflow/decoder.hpp",
  "include/openvino/frontend/tensorflow/exception.hpp",
  "include/openvino/frontend/tensorflow/extension/conversion.hpp",
  "include/openvino/frontend/tensorflow/extension/op.hpp",
  "include/openvino/frontend/tensorflow/frontend.hpp",
  "include/openvino/frontend/tensorflow/graph_iterator.hpp",
  "include/openvino/frontend/tensorflow/node_context.hpp",
  "include/openvino/frontend/tensorflow/special_types.hpp",
  "include/openvino/frontend/tensorflow/visibility.hpp",
  "include/openvino/frontend/visibility.hpp",
  "include/openvino/op/abs.hpp",
  "include/openvino/op/acos.hpp",
  "include/openvino/op/acosh.hpp",
  "include/openvino/op/adaptive_avg_pool.hpp",
  "include/openvino/op/adaptive_max_pool.hpp",
  "include/openvino/op/add.hpp",
  "include/openvino/op/asin.hpp",
  "include/openvino/op/asinh.hpp",
  "include/openvino/op/assign.hpp",
  "include/openvino/op/atan.hpp",
  "include/openvino/op/atanh.hpp",
  "include/openvino/op/avg_pool.hpp",
  "include/openvino/op/batch_norm.hpp",
  "include/openvino/op/batch_to_space.hpp",
  "include/openvino/op/binary_convolution.hpp",
  "include/openvino/op/broadcast.hpp",
  "include/openvino/op/bucketize.hpp",
  "include/openvino/op/ceiling.hpp",
  "include/openvino/op/clamp.hpp",
  "include/openvino/op/concat.hpp",
  "include/openvino/op/constant.hpp",
  "include/openvino/op/convert.hpp",
  "include/openvino/op/convert_like.hpp",
  "include/openvino/op/convolution.hpp",
  "include/openvino/op/cos.hpp",
  "include/openvino/op/cosh.hpp",
  "include/openvino/op/ctc_greedy_decoder.hpp",
  "include/openvino/op/ctc_greedy_decoder_seq_len.hpp",
  "include/openvino/op/ctc_loss.hpp",
  "include/openvino/op/cum_sum.hpp",
  "include/openvino/op/deformable_convolution.hpp",
  "include/openvino/op/deformable_psroi_pooling.hpp",
  "include/openvino/op/depth_to_space.hpp",
  "include/openvino/op/detection_output.hpp",
  "include/openvino/op/dft.hpp",
  "include/openvino/op/divide.hpp",
  "include/openvino/op/einsum.hpp",
  "include/openvino/op/elu.hpp",
  "include/openvino/op/embedding_segments_sum.hpp",
  "include/openvino/op/embeddingbag_offsets_sum.hpp",
  "include/openvino/op/embeddingbag_packedsum.hpp",
  "include/openvino/op/equal.hpp",
  "include/openvino/op/erf.hpp",
  "include/openvino/op/exp.hpp",
  "include/openvino/op/experimental_detectron_detection_output.hpp",
  "include/openvino/op/experimental_detectron_generate_proposals.hpp",
  "include/openvino/op/experimental_detectron_prior_grid_generator.hpp",
  "include/openvino/op/experimental_detectron_roi_feature.hpp",
  "include/openvino/op/experimental_detectron_topkrois.hpp",
  "include/openvino/op/extractimagepatches.hpp",
  "include/openvino/op/eye.hpp",
  "include/openvino/op/fake_quantize.hpp",
  "include/openvino/op/floor.hpp",
  "include/openvino/op/floor_mod.hpp",
  "include/openvino/op/gather.hpp",
  "include/openvino/op/gather_elements.hpp",
  "include/openvino/op/gather_nd.hpp",
  "include/openvino/op/gather_tree.hpp",
  "include/openvino/op/gelu.hpp",
  "include/openvino/op/generate_proposals.hpp",
  "include/openvino/op/greater.hpp",
  "include/openvino/op/greater_eq.hpp",
  "include/openvino/op/grid_sample.hpp",
  "include/openvino/op/grn.hpp",
  "include/openvino/op/group_conv.hpp",
  "include/openvino/op/gru_cell.hpp",
  "include/openvino/op/gru_sequence.hpp",
  "include/openvino/op/hard_sigmoid.hpp",
  "include/openvino/op/hsigmoid.hpp",
  "include/openvino/op/hswish.hpp",
  "include/openvino/op/i420_to_bgr.hpp",
  "include/openvino/op/i420_to_rgb.hpp",
  "include/openvino/op/idft.hpp",
  "include/openvino/op/if.hpp",
  "include/openvino/op/interpolate.hpp",
  "include/openvino/op/irdft.hpp",
  "include/openvino/op/is_finite.hpp",
  "include/openvino/op/is_inf.hpp",
  "include/openvino/op/is_nan.hpp",
  "include/openvino/op/less.hpp",
  "include/openvino/op/less_eq.hpp",
  "include/openvino/op/log.hpp",
  "include/openvino/op/log_softmax.hpp",
  "include/openvino/op/logical_and.hpp",
  "include/openvino/op/logical_not.hpp",
  "include/openvino/op/logical_or.hpp",
  "include/openvino/op/logical_xor.hpp",
  "include/openvino/op/loop.hpp",
  "include/openvino/op/lrn.hpp",
  "include/openvino/op/lstm_cell.hpp",
  "include/openvino/op/lstm_sequence.hpp",
  "include/openvino/op/matmul.hpp",
  "include/openvino/op/matrix_nms.hpp",
  "include/openvino/op/max_pool.hpp",
  "include/openvino/op/maximum.hpp",
  "include/openvino/op/minimum.hpp",
  "include/openvino/op/mish.hpp",
  "include/openvino/op/mod.hpp",
  "include/openvino/op/multiclass_nms.hpp",
  "include/openvino/op/multiply.hpp",
  "include/openvino/op/mvn.hpp",
  "include/openvino/op/negative.hpp",
  "include/openvino/op/non_max_suppression.hpp",
  "include/openvino/op/non_zero.hpp",
  "include/openvino/op/normalize_l2.hpp",
  "include/openvino/op/not_equal.hpp",
  "include/openvino/op/nv12_to_bgr.hpp",
  "include/openvino/op/nv12_to_rgb.hpp",
  "include/openvino/op/one_hot.hpp",
  "include/openvino/op/op.hpp",
  "include/openvino/op/ops.hpp",
  "include/openvino/op/pad.hpp",
  "include/openvino/op/parameter.hpp",
  "include/openvino/op/power.hpp",
  "include/openvino/op/prelu.hpp",
  "include/openvino/op/prior_box.hpp",
  "include/openvino/op/prior_box_clustered.hpp",
  "include/openvino/op/proposal.hpp",
  "include/openvino/op/psroi_pooling.hpp",
  "include/openvino/op/random_uniform.hpp",
  "include/openvino/op/range.hpp",
  "include/openvino/op/rdft.hpp",
  "include/openvino/op/read_value.hpp",
  "include/openvino/op/reduce_l1.hpp",
  "include/openvino/op/reduce_l2.hpp",
  "include/openvino/op/reduce_logical_and.hpp",
  "include/openvino/op/reduce_logical_or.hpp",
  "include/openvino/op/reduce_max.hpp",
  "include/openvino/op/reduce_mean.hpp",
  "include/openvino/op/reduce_min.hpp",
  "include/openvino/op/reduce_prod.hpp",
  "include/openvino/op/reduce_sum.hpp",
  "include/openvino/op/region_yolo.hpp",
  "include/openvino/op/relu.hpp",
  "include/openvino/op/reorg_yolo.hpp",
  "include/openvino/op/reshape.hpp",
  "include/openvino/op/result.hpp",
  "include/openvino/op/reverse.hpp",
  "include/openvino/op/reverse_sequence.hpp",
  "include/openvino/op/rnn_cell.hpp",
  "include/openvino/op/rnn_sequence.hpp",
  "include/openvino/op/roi_align.hpp",
  "include/openvino/op/roi_pooling.hpp",
  "include/openvino/op/roll.hpp",
  "include/openvino/op/round.hpp",
  "include/openvino/op/scatter_elements_update.hpp",
  "include/openvino/op/scatter_nd_update.hpp",
  "include/openvino/op/scatter_update.hpp",
  "include/openvino/op/select.hpp",
  "include/openvino/op/selu.hpp",
  "include/openvino/op/shape_of.hpp",
  "include/openvino/op/shuffle_channels.hpp",
  "include/openvino/op/sigmoid.hpp",
  "include/openvino/op/sign.hpp",
  "include/openvino/op/sin.hpp",
  "include/openvino/op/sinh.hpp",
  "include/openvino/op/sink.hpp",
  "include/openvino/op/slice.hpp",
  "include/openvino/op/softmax.hpp",
  "include/openvino/op/softplus.hpp",
  "include/openvino/op/softsign.hpp",
  "include/openvino/op/space_to_batch.hpp",
  "include/openvino/op/space_to_depth.hpp",
  "include/openvino/op/split.hpp",
  "include/openvino/op/sqrt.hpp",
  "include/openvino/op/squared_difference.hpp",
  "include/openvino/op/squeeze.hpp",
  "include/openvino/op/strided_slice.hpp",
  "include/openvino/op/subtract.hpp",
  "include/openvino/op/swish.hpp",
  "include/openvino/op/tan.hpp",
  "include/openvino/op/tanh.hpp",
  "include/openvino/op/tensor_iterator.hpp",
  "include/openvino/op/tile.hpp",
  "include/openvino/op/topk.hpp",
  "include/openvino/op/transpose.hpp",
  "include/openvino/op/unique.hpp",
  "include/openvino/op/unsqueeze.hpp",
  "include/openvino/op/util/activation_functions.hpp",
  "include/openvino/op/util/arithmetic_reduction.hpp",
  "include/openvino/op/util/arithmetic_reductions_keep_dims.hpp",
  "include/openvino/op/util/assign_base.hpp",
  "include/openvino/op/util/attr_types.hpp",
  "include/openvino/op/util/binary_elementwise_arithmetic.hpp",
  "include/openvino/op/util/binary_elementwise_comparison.hpp",
  "include/openvino/op/util/binary_elementwise_logical.hpp",
  "include/openvino/op/util/broadcast_base.hpp",
  "include/openvino/op/util/convert_color_i420_base.hpp",
  "include/openvino/op/util/convert_color_nv12_base.hpp",
  "include/openvino/op/util/deformable_convolution_base.hpp",
  "include/openvino/op/util/detection_output_base.hpp",
  "include/openvino/op/util/elementwise_args.hpp",
  "include/openvino/op/util/embeddingbag_offsets_base.hpp",
  "include/openvino/op/util/embeddingbag_packed_base.hpp",
  "include/openvino/op/util/fft_base.hpp",
  "include/openvino/op/util/framework_node.hpp",
  "include/openvino/op/util/gather_base.hpp",
  "include/openvino/op/util/gather_nd_base.hpp",
  "include/openvino/op/util/index_reduction.hpp",
  "include/openvino/op/util/logical_reduction.hpp",
  "include/openvino/op/util/logical_reduction_keep_dims.hpp",
  "include/openvino/op/util/max_pool_base.hpp",
  "include/openvino/op/util/multi_subgraph_base.hpp",
  "include/openvino/op/util/multiclass_nms_base.hpp",
  "include/openvino/op/util/op_types.hpp",
  "include/openvino/op/util/precision_sensitive_attribute.hpp",
  "include/openvino/op/util/read_value_base.hpp",
  "include/openvino/op/util/reduction_base.hpp",
  "include/openvino/op/util/rnn_cell_base.hpp",
  "include/openvino/op/util/scatter_base.hpp",
  "include/openvino/op/util/scatter_nd_base.hpp",
  "include/openvino/op/util/sub_graph_base.hpp",
  "include/openvino/op/util/unary_elementwise_arithmetic.hpp",
  "include/openvino/op/util/variable.hpp",
  "include/openvino/op/util/variable_context.hpp",
  "include/openvino/op/util/variable_extension.hpp",
  "include/openvino/op/util/variable_value.hpp",
  "include/openvino/op/variadic_split.hpp",
  "include/openvino/op/xor.hpp",
  "include/openvino/openvino.hpp",
  "include/openvino/opsets/opset.hpp",
  "include/openvino/opsets/opset1.hpp",
  "include/openvino/opsets/opset10.hpp",
  "include/openvino/opsets/opset10_tbl.hpp",
  "include/openvino/opsets/opset1_tbl.hpp",
  "include/openvino/opsets/opset2.hpp",
  "include/openvino/opsets/opset2_tbl.hpp",
  "include/openvino/opsets/opset3.hpp",
  "include/openvino/opsets/opset3_tbl.hpp",
  "include/openvino/opsets/opset4.hpp",
  "include/openvino/opsets/opset4_tbl.hpp",
  "include/openvino/opsets/opset5.hpp",
  "include/openvino/opsets/opset5_tbl.hpp",
  "include/openvino/opsets/opset6.hpp",
  "include/openvino/opsets/opset6_tbl.hpp",
  "include/openvino/opsets/opset7.hpp",
  "include/openvino/opsets/opset7_tbl.hpp",
  "include/openvino/opsets/opset8.hpp",
  "include/openvino/opsets/opset8_tbl.hpp",
  "include/openvino/opsets/opset9.hpp",
  "include/openvino/opsets/opset9_tbl.hpp",
  "include/openvino/pass/constant_folding.hpp",
  "include/openvino/pass/convert_fp32_to_fp16.hpp",
  "include/openvino/pass/graph_rewrite.hpp",
  "include/openvino/pass/low_latency.hpp",
  "include/openvino/pass/make_stateful.hpp",
  "include/openvino/pass/manager.hpp",
  "include/openvino/pass/pass.hpp",
  "include/openvino/pass/pass_config.hpp",
  "include/openvino/pass/pattern/matcher.hpp",
  "include/openvino/pass/pattern/op/any.hpp",
  "include/openvino/pass/pattern/op/any_of.hpp",
  "include/openvino/pass/pattern/op/any_output.hpp",
  "include/openvino/pass/pattern/op/branch.hpp",
  "include/openvino/pass/pattern/op/capture.hpp",
  "include/openvino/pass/pattern/op/label.hpp",
  "include/openvino/pass/pattern/op/or.hpp",
  "include/openvino/pass/pattern/op/pattern.hpp",
  "include/openvino/pass/pattern/op/skip.hpp",
  "include/openvino/pass/pattern/op/true.hpp",
  "include/openvino/pass/pattern/op/wrap_type.hpp",
  "include/openvino/pass/serialize.hpp",
  "include/openvino/pass/validate.hpp",
  "include/openvino/pass/visualize_tree.hpp",
  "include/openvino/runtime/allocator.hpp",
  "include/openvino/runtime/auto/properties.hpp",
  "include/openvino/runtime/common.hpp",
  "include/openvino/runtime/compiled_model.hpp",
  "include/openvino/runtime/core.hpp",
  "include/openvino/runtime/exception.hpp",
  "include/openvino/runtime/infer_request.hpp",
  "include/openvino/runtime/intel_cpu/properties.hpp",
  "include/openvino/runtime/intel_gna/properties.hpp",
  "include/openvino/runtime/intel_gpu/ocl/dx.hpp",
  "include/openvino/runtime/intel_gpu/ocl/ocl.hpp",
  "include/openvino/runtime/intel_gpu/ocl/ocl_wrapper.hpp",
  "include/openvino/runtime/intel_gpu/ocl/va.hpp",
  "include/openvino/runtime/intel_gpu/properties.hpp",
  "include/openvino/runtime/intel_gpu/remote_properties.hpp",
  "include/openvino/runtime/intel_myriad/hddl_properties.hpp",
  "include/openvino/runtime/intel_myriad/myriad_properties.hpp",
  "include/openvino/runtime/profiling_info.hpp",
  "include/openvino/runtime/properties.hpp",
  "include/openvino/runtime/remote_context.hpp",
  "include/openvino/runtime/remote_tensor.hpp",
  "include/openvino/runtime/runtime.hpp",
  "include/openvino/runtime/tensor.hpp",
  "include/openvino/runtime/variable_state.hpp",
  "lib/cmake/inferenceengine2022.3.1/InferenceEngineConfig-version.cmake",
  "lib/cmake/inferenceengine2022.3.1/InferenceEngineConfig.cmake",
  "lib/cmake/ngraph2022.3.1/ngraphConfig.cmake",
  "lib/cmake/ngraph2022.3.1/ngraphConfigVersion.cmake",
  "lib/cmake/openvino2022.3.1/OpenVINOConfig-version.cmake",
  "lib/cmake/openvino2022.3.1/OpenVINOConfig.cmake",
  "lib/cmake/openvino2022.3.1/OpenVINOTargets-release.cmake",
  "lib/cmake/openvino2022.3.1/OpenVINOTargets.cmake",
  "lib/libopenvino.so",
  "lib/libopenvino_c.so",
  "lib/libopenvino_onnx_frontend.so",
  "lib/libopenvino_paddle_frontend.so",
  "lib/libopenvino_tensorflow_frontend.so",
  "lib/pkgconfig/openvino.pc"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h0f01653_1",
  "build_number": 1,
  "depends": [
   "__glibc >=2.17,<3.0.a0",
   "libopenvino >=2022.3.1,<2022.3.2.0a0",
   "libopenvino-auto-batch-plugin >=2022.3.1,<2022.3.2.0a0",
   "libopenvino-auto-plugin >=2022.3.1,<2022.3.2.0a0",
   "libopenvino-hetero-plugin >=2022.3.1,<2022.3.2.0a0",
   "libopenvino-intel-cpu-plugin >=2022.3.1,<2022.3.2.0a0",
   "libopenvino-intel-gpu-plugin >=2022.3.1,<2022.3.2.0a0",
   "libopenvino-ir-frontend >=2022.3.1,<2022.3.2.0a0",
   "libopenvino-onnx-frontend >=2022.3.1,<2022.3.2.0a0",
   "libopenvino-paddle-frontend >=2022.3.1,<2022.3.2.0a0",
   "libopenvino-tensorflow-frontend >=2022.3.1,<2022.3.2.0a0",
   "ocl-icd >=2.3.1,<3.0a0"
  ],
  "license": "Apache-2.0",
  "license_family": "Apache",
  "name": "openvino",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1689968410011,
  "version": "2022.3.1"
 },
 "metadata_version": 1,
 "name": "openvino",
 "raw_recipe": "{% set name = \"openvino\" %}\n{% set version = \"2022.3.1\" %}\n{% set commit_number = \"9236\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/openvinotoolkit/openvino/archive/refs/tags/{{ version }}.tar.gz\n    sha256: 79ed23521e20513a2e587f8226d95375146546f33fc7a842228f37752bacc412\n    folder: openvino_sources\n    patches:\n    - patches/001-gflags.patch\n    - patches/002-find-hwloc.patch\n    - patches/003-find-opencl.patch\n    - patches/004-apple-cross-compile.patch\n  - url: https://github.com/openvinotoolkit/openvino_contrib/archive/13025cfb0a98a5eb0ed531ea922dcb567b879902.tar.gz  # [aarch64 or arm64]\n    sha256: a6bd13848443a2e8f15ea8c24fb049935753157d233913a2174e5cf080c98c90  # [aarch64 or arm64]\n    folder: openvino_contrib  # [aarch64 or arm64]\n  - url: https://github.com/ARM-software/ComputeLibrary/archive/1b3192e8a23513031163dc14d248f47671986121.tar.gz  # [aarch64 or arm64]\n    sha256: 7244013364f4f52341cdaed0d7995e6cd93def542388b9b0b5662e0799fc93de  # [aarch64 or arm64]\n    folder: openvino_contrib/modules/arm_plugin/thirdparty/ComputeLibrary  # [aarch64 or arm64]\n  - url: https://github.com/herumi/xbyak/archive/f8ea5c28dfcdc98585881d0ca9e499580ca077ae.tar.gz\n    sha256: 394e6381f943387c481e9aabe2cdafd6cf422d35499ed042c6fcb85523d00f2f\n    folder: openvino_sources/thirdparty/xbyak\n  - url: https://github.com/openvinotoolkit/oneDNN/archive/44de3c3698b687c26e487fc8f0213fa487e8fe2c.tar.gz  # [x86_64]\n    sha256: 2c6aa7d787a947aa032224683f216ab38c168de4aed61d0554671774060a3615  # [x86_64]\n    folder: openvino_sources/src/plugins/intel_cpu/thirdparty/onednn  # [x86_64]\n  - url: https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz\n    sha256: db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07\n    folder: openvino_sources/thirdparty/ade\n  - url: https://github.com/onnx/onnx/archive/refs/tags/v1.12.0.tar.gz\n    sha256: 052ad3d5dad358a33606e0fc89483f8150bb0655c99b12a43aa58b5b7f0cc507\n    folder: openvino_sources/thirdparty/onnx/onnx\n  - url: https://github.com/oneapi-src/oneDNN/archive/fbec3e25a559ee252022ae066817b204e106a6ba.tar.gz\n    sha256: 414747494018d41b115593e0ea7f952cdff62418f94ca32d89300e435293addd\n    folder: openvino_sources/src/plugins/intel_gpu/thirdparty/onednn_gpu\n\nbuild:\n  number: 1\n  script_env:\n    - CI_BUILD_NUMBER={{ commit_number }}\n  run_exports:\n    - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}  # [x86_64]\n    - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}  # [aarch64 or arm64]\n    - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}  # [win64 or linux64]\n    - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-ir-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-onnx-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-paddle-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-tensorflow-frontend', max_pin='x.x.x') }}\n  ignore_run_exports_from:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - pugixml # libopenvino and others already depends on pugixml\n    - tbb-devel # libopenvino and libopenvino already depend on tbb\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - git\n    - cmake >=3.15\n    - ninja\n    - gflags\n    - python >=3.7\n    - pkg-config\n    - scons  # [aarch64 or arm64]\n    - libprotobuf =3.20.3\n    - sysroot_linux-64 =2.17  # [linux64]\n  host:\n    - tbb-devel =2021.5\n    - ocl-icd  # [linux64]\n    - clhpp  # [linux64 or win64]\n    - khronos-opencl-icd-loader  # [win64]\n    - pugixml >=1.12.1\n    - libprotobuf-static =3.20.3  # [not win64]\n    - libprotobuf-static  # [win64]\n  run:\n    - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}  # [x86_64]\n    - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}  # [aarch64 or arm64]\n    - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}  # [win64 or linux64]\n    - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-ir-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-onnx-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-paddle-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-tensorflow-frontend', max_pin='x.x.x') }}\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - ninja\n    - cmake >=3.15\n    - pkg-config # to find zlib\n    - zlib\n    - nlohmann_json\n    - sysroot_linux-64 =2.17  # [linux64]\n    - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n    - opencv\n    - gflags\n  source_files:\n    - openvino_sources/samples\n    - openvino_sources/thirdparty/cnpy\n  files:\n    - snippets/\n  commands:\n    - export MACOSX_DEPLOYMENT_TARGET={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx]\n    - export CMAKE_GENERATOR=Ninja  # [unix]\n\n    # check libraries (symlinks)\n    {% set openvino_libs = [] %}\n    {{ openvino_libs.append(\"\") or \"\" }}\n    {{ openvino_libs.append(\"_c\") or \"\" }}\n    {{ openvino_libs.append(\"_paddle_frontend\") or \"\" }}\n    {{ openvino_libs.append(\"_onnx_frontend\") or \"\" }}\n    {{ openvino_libs.append(\"_tensorflow_frontend\") or \"\" }}\n    {% for openvino_lib in openvino_libs %}\n    - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}${SHLIB_EXT}  # [unix]\n    - if not exist %LIBRARY_BIN%\\\\openvino{{ openvino_lib }}%SHLIB_EXT% exit 1  # [win]\n    {% endfor %}\n\n    # C++ samples on Unix\n    - mkdir -p openvino_sources/samples/cpp/thirdparty  # [unix]\n    - cp -R openvino_sources/thirdparty/cnpy openvino_sources/samples/cpp/thirdparty/cnpy  # [unix]\n    - cmake -S openvino_sources/samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin  # [unix]\n    - cmake --build samples_cpp_build --config Release --verbose  # [unix]\n    - ./samples_cpp_build/bin/hello_query_device  # [unix]\n\n    # C samples on Unix\n    - cp openvino_sources/samples/cpp/CMakeLists.txt openvino_sources/samples/c/CMakeLists.txt  # [unix]\n    - cmake -S openvino_sources/samples/c -B samples_c_build -DBIN_FOLDER=bin  # [unix]\n    - cmake --build samples_c_build --config Release --verbose  # [unix]\n\n    # C++ samples on Windows\n    - mkdir -p openvino_sources\\\\samples\\\\cpp\\\\thirdparty  # [win]\n    - cp -R openvino_sources\\\\thirdparty\\\\cnpy openvino_sources\\\\samples\\\\cpp\\\\thirdparty\\\\cnpy  # [win]\n    - cmake -S openvino_sources\\\\samples\\\\cpp -B samples_cpp_build -DBIN_FOLDER=bin  # [win]\n    - cmake --build samples_cpp_build --config Release --verbose  # [win]\n    - .\\\\samples_cpp_build\\\\bin\\\\Release\\\\hello_query_device.exe  # [win]\n\n    # C samples on Windows\n    - cp openvino_sources\\\\samples\\\\cpp\\\\CMakeLists.txt openvino_sources\\\\samples\\\\c\\\\CMakeLists.txt  # [win]\n    - cmake -S openvino_sources\\\\samples\\\\c -B samples_c_build -DBIN_FOLDER=bin  # [win]\n    - cmake --build samples_c_build --config Release --verbose  # [win]\n\n    # check that devices are found using OpenVINO C API\n    - $CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test  # [unix]\n    - if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi  # [unix]\n\n    # check that frontends are found using OpenVINO C++ API\n    - cmake -S snippets -B snippets_build\n    - cmake --build snippets_build --config Release --verbose\n    - if [[ $(./snippets_build/openvino_frontends_test) != 4 ]]; then exit 1 ; fi  # [unix]\n\n\noutputs:\n  - name: libopenvino\n    version: {{ version }}\n    script: install/install.sh\n    about:\n      summary: OpenVINO Core Runtime library\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15\n      host:\n        - pugixml >=1.12.1\n        - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n    test:\n      commands:\n        {% set openvino_libs = [] %}\n        {{ openvino_libs.append(\"\") or \"\" }}\n        {{ openvino_libs.append(\"_c\") or \"\" }}\n        {% for openvino_lib in openvino_libs %}\n        - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino{{ openvino_lib }}%SHLIB_EXT% exit 1  # [win]\n        {% endfor %}\n\n  - name: libopenvino-ir-frontend\n    version: {{ version }}\n    script: install/install_ir.sh\n    about:\n      summary: OpenVINO IR Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-ir-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n        - pugixml >=1.12.1\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_ir_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_ir_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-onnx-frontend\n    version: {{ version }}\n    script: install/install_onnx.sh\n    about:\n      summary: OpenVINO ONNX Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-onnx-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_onnx_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-paddle-frontend\n    version: {{ version }}\n    script: install/install_paddle.sh\n    about:\n      summary: OpenVINO Paddle Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-paddle-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_paddle_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-tensorflow-frontend\n    version: {{ version }}\n    script: install/install_tensorflow.sh\n    about:\n      summary: OpenVINO TensorFlow Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-tensorflow-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_tensorflow_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-intel-cpu-plugin\n    version: {{ version }}\n    script: install/install_cpu.sh\n    about:\n      summary: OpenVINO Intel\u00ae CPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not x86_64]\n      run_exports:\n        - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15\n      host:\n        - pugixml >=1.12.1\n        - tbb-devel =2021.5\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_intel_cpu_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_intel_cpu_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-arm-cpu-plugin\n    version: {{ version }}\n    script: install/install_cpu.sh\n    about:\n      summary: OpenVINO ARM CPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not aarch64 and not arm64]\n      run_exports:\n        - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15\n      host:\n        - tbb-devel =2021.5\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_arm_cpu_plugin.so  # [unix]\n\n  - name: libopenvino-intel-gpu-plugin\n    version: {{ version }}\n    script: install/install_gpu.sh\n    about:\n      summary: OpenVINO Intel\u00ae GPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not linux64 and not win64]\n      run_exports:\n        - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n        - ocl-icd  # [linux64]\n        - clhpp\n        - khronos-opencl-icd-loader  # [win64]\n        - pugixml >=1.12.1\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n        - ocl-icd-system  # [linux64]\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_intel_gpu_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_intel_gpu_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-auto-plugin\n    version: {{ version }}\n    script: install/install_auto.sh\n    about:\n      summary: OpenVINO Auto plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15\n      host:\n        - tbb-devel =2021.5\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_auto_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_auto_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-auto-batch-plugin\n    version: {{ version }}\n    script: install/install_batch.sh\n    about:\n      summary: OpenVINO Auto Batch plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_auto_batch_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_auto_batch_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-hetero-plugin\n    version: {{ version }}\n    script: install/install_hetero.sh\n    about:\n      summary: OpenVINO Hetero plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n        - pugixml >=1.12.1\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_hetero_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_hetero_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: openvino\n    script: install/install_dev.sh\n\nabout:\n  home: https://github.com/openvinotoolkit/openvino\n  summary: 'Intel\u00ae Distribution of OpenVINO\u2122 Toolkit'\n  description: |\n    Intel\u00ae Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\n    optimizing and deploying AI inference. It can be used to develop\n    applications and solutions based on deep learning tasks, such as:\n    emulation of human vision, automatic speech recognition, natural\n    language processing, recommendation systems, etc. It provides\n    high-performance and rich deployment options, from edge to cloud.\n\n    Installing OpenVINO Runtime from Conda Forge is recommended for C / C++ developers,\n    as it provides only the C / C++ Runtime API.\n    If you work with Python or aim at GPU inference, consider other OpenVINO distribution channels:\n    https://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n  license: Apache-2.0\n  license_family: Apache\n  license_file:\n    - LICENSE\n    - third-party-programs.txt\n    - onednn_third-party-programs.txt\n    - runtime-third-party-programs.txt\n  doc_url: https://docs.openvino.ai/latest/index.html\n  dev_url: https://github.com/openvinotoolkit/openvino\n\nextra:\n  recipe-maintainers:\n    - ilya-lavrenov\n    - artanokhov\n",
 "rendered_recipe": {
  "about": {
   "description": "Intel\u00ae Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud.\n\nInstalling OpenVINO Runtime from Conda Forge is recommended for C / C++ developers,\nas it provides only the C / C++ Runtime API.\nIf you work with Python or aim at GPU inference, consider other OpenVINO distribution channels:\nhttps://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt",
    "third-party-programs.txt"
   ],
   "summary": "Intel\u00ae Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "ignore_run_exports_from": [
    "gcc_linux-64 12.*",
    "gxx_linux-64 12.*",
    "pugixml",
    "tbb-devel"
   ],
   "number": "1",
   "run_exports": [
    "libopenvino >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-auto-batch-plugin >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-auto-plugin >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-hetero-plugin >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-intel-cpu-plugin >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-intel-gpu-plugin >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-ir-frontend >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-onnx-frontend >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-paddle-frontend >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-tensorflow-frontend >=2022.3.1,<2022.3.2.0a0"
   ],
   "script_env": [
    "CI_BUILD_NUMBER=9236"
   ],
   "string": "h0f01653_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "artanokhov",
    "ilya-lavrenov"
   ]
  },
  "package": {
   "name": "openvino",
   "version": "2022.3.1"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "_sysroot_linux-64_curr_repodata_hack 3 h69a702a_13",
    "binutils_impl_linux-64 2.40 hf600244_0",
    "binutils_linux-64 2.40 hbdbef99_1",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.19.1 hd590300_0",
    "ca-certificates 2023.5.7 hbcca054_0",
    "cmake 3.26.4 hcfe8598_0",
    "curl 8.2.0 hca28451_0",
    "expat 2.5.0 hcb278e6_1",
    "gcc_impl_linux-64 12.3.0 he2b93b0_0",
    "gcc_linux-64 12.3.0 h76fc315_1",
    "gettext 0.21.1 h27087fc_0",
    "gflags 2.2.2 he1b5a44_1004",
    "git 2.41.0 pl5321h86e50cf_0",
    "gxx_impl_linux-64 12.3.0 he2b93b0_0",
    "gxx_linux-64 12.3.0 h8a814eb_1",
    "kernel-headers_linux-64 3.10.0 h4a8ded7_13",
    "keyutils 1.6.1 h166bdaf_0",
    "krb5 1.21.1 h659d440_0",
    "ld_impl_linux-64 2.40 h41732ed_0",
    "libcurl 8.2.0 hca28451_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libexpat 2.5.0 hcb278e6_1",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-devel_linux-64 12.3.0 h8bca6fd_0",
    "libgcc-ng 13.1.0 he5830b7_0",
    "libgomp 13.1.0 he5830b7_0",
    "libiconv 1.17 h166bdaf_0",
    "libnghttp2 1.52.0 h61bc06f_0",
    "libnsl 2.0.0 h7f98852_0",
    "libprotobuf 3.20.3 h3eb15da_0",
    "libsanitizer 12.3.0 h0f45ef3_0",
    "libsqlite 3.42.0 h2797004_0",
    "libssh2 1.11.0 h0841786_0",
    "libstdcxx-devel_linux-64 12.3.0 h8bca6fd_0",
    "libstdcxx-ng 13.1.0 hfd8a6a1_0",
    "libuuid 2.38.1 h0b41bf4_0",
    "libuv 1.44.2 h166bdaf_0",
    "libzlib 1.2.13 hd590300_5",
    "ncurses 6.4 hcb278e6_0",
    "ninja 1.11.1 h924138e_0",
    "openssl 3.1.1 hd590300_1",
    "pcre2 10.40 hc3806b6_0",
    "perl 5.32.1 4_hd590300_perl5",
    "pkg-config 0.29.2 h36c2ea0_1008",
    "python 3.11.4 hab00c5b_0_cpython",
    "readline 8.2 h8228510_1",
    "rhash 1.4.3 h166bdaf_0",
    "sysroot_linux-64 2.17 h4a8ded7_13",
    "tk 8.6.12 h27826a3_0",
    "tzdata 2023c h71feb2d_0",
    "xz 5.2.6 h166bdaf_0",
    "zlib 1.2.13 hd590300_5",
    "zstd 1.5.2 hfc55251_7"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "clhpp 2.0.16 h27087fc_0",
    "libgcc-ng 13.1.0 he5830b7_0",
    "libgomp 13.1.0 he5830b7_0",
    "libprotobuf 3.20.3 h3eb15da_0",
    "libprotobuf-static 3.20.3 h3eb15da_0",
    "libstdcxx-ng 13.1.0 hfd8a6a1_0",
    "libzlib 1.2.13 hd590300_5",
    "ocl-icd 2.3.1 h7f98852_0",
    "pugixml 1.13 h59595ed_1",
    "tbb 2021.5.0 h924138e_5",
    "tbb-devel 2021.5.0 h924138e_5"
   ],
   "run": [
    "__glibc >=2.17,<3.0.a0",
    "libopenvino >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-auto-batch-plugin >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-auto-plugin >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-hetero-plugin >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-intel-cpu-plugin >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-intel-gpu-plugin >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-ir-frontend >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-onnx-frontend >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-paddle-frontend >=2022.3.1,<2022.3.2.0a0",
    "libopenvino-tensorflow-frontend >=2022.3.1,<2022.3.2.0a0",
    "ocl-icd >=2.3.1,<3.0a0"
   ]
  },
  "source": [
   {
    "folder": "openvino_sources",
    "patches": [
     "patches/001-gflags.patch",
     "patches/002-find-hwloc.patch",
     "patches/003-find-opencl.patch",
     "patches/004-apple-cross-compile.patch"
    ],
    "sha256": "79ed23521e20513a2e587f8226d95375146546f33fc7a842228f37752bacc412",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2022.3.1.tar.gz"
   },
   {
    "folder": "openvino_sources/thirdparty/xbyak",
    "sha256": "394e6381f943387c481e9aabe2cdafd6cf422d35499ed042c6fcb85523d00f2f",
    "url": "https://github.com/herumi/xbyak/archive/f8ea5c28dfcdc98585881d0ca9e499580ca077ae.tar.gz"
   },
   {
    "folder": "openvino_sources/src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "2c6aa7d787a947aa032224683f216ab38c168de4aed61d0554671774060a3615",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/44de3c3698b687c26e487fc8f0213fa487e8fe2c.tar.gz"
   },
   {
    "folder": "openvino_sources/thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "openvino_sources/thirdparty/onnx/onnx",
    "sha256": "052ad3d5dad358a33606e0fc89483f8150bb0655c99b12a43aa58b5b7f0cc507",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.12.0.tar.gz"
   },
   {
    "folder": "openvino_sources/src/plugins/intel_gpu/thirdparty/onednn_gpu",
    "sha256": "414747494018d41b115593e0ea7f952cdff62418f94ca32d89300e435293addd",
    "url": "https://github.com/oneapi-src/oneDNN/archive/fbec3e25a559ee252022ae066817b204e106a6ba.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "export CMAKE_GENERATOR=Ninja",
    "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
    "mkdir -p openvino_sources/samples/cpp/thirdparty",
    "cp -R openvino_sources/thirdparty/cnpy openvino_sources/samples/cpp/thirdparty/cnpy",
    "cmake -S openvino_sources/samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    "./samples_cpp_build/bin/hello_query_device",
    "cp openvino_sources/samples/cpp/CMakeLists.txt openvino_sources/samples/c/CMakeLists.txt",
    "cmake -S openvino_sources/samples/c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
    "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose",
    "if [[ $(./snippets_build/openvino_frontends_test) != 4 ]]; then exit 1 ; fi"
   ],
   "files": [
    "snippets/"
   ],
   "requires": [
    "cmake >=3.15",
    "gcc_linux-64 12.*",
    "gflags",
    "gxx_linux-64 12.*",
    "ninja",
    "nlohmann_json",
    "opencv",
    "pkg-config",
    "sysroot_linux-64 =2.17",
    "tbb-devel =2021.5",
    "zlib"
   ],
   "source_files": [
    "openvino_sources/samples",
    "openvino_sources/thirdparty/cnpy"
   ]
  }
 },
 "version": "2022.3.1"
}