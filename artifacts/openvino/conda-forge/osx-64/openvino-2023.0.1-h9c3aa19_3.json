{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.25.0",
  "conda_version": "23.3.1",
  "description": "Intel\u00ae Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n\nInstalling OpenVINO Runtime from Conda Forge is recommended for C++ developers,\nas it provides only the C++ / C Runtime API.\nIf you work with Python, consider other OpenVINO distribution channels:\nhttps://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n",
  "dev_url": "https://github.com/openvinotoolkit/openvino",
  "doc_url": "https://docs.openvino.ai/latest/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "home": "https://github.com/openvinotoolkit/openvino",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_family": "Apache",
  "license_file": [
   "LICENSE",
   "third-party-programs.txt",
   "onednn_third-party-programs.txt",
   "runtime-third-party-programs.txt"
  ],
  "root_pkgs": [
   "jsonschema-specifications 2023.7.1 pyhd8ed1ab_0",
   "cctools_osx-64 973.0.1 ha1c5b94_14",
   "prompt-toolkit 3.0.39 pyha770c72_0",
   "xorg-libxau 1.0.11 h0dc2134_0",
   "cryptography 41.0.3 py310ha1817de_0",
   "gettext 0.21.1 h8a4c099_0",
   "typing-extensions 4.7.1 hd8ed1ab_0",
   "urllib3 1.26.15 pyhd8ed1ab_0",
   "exceptiongroup 1.1.3 pyhd8ed1ab_0",
   "platformdirs 3.10.0 pyhd8ed1ab_0",
   "pthread-stubs 0.4 hc929b4f_1001",
   "tornado 6.3.3 py310h6729b98_0",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "libmamba 1.4.2 h9d281b0_0",
   "joblib 1.3.2 pyhd8ed1ab_0",
   "pygments 2.16.1 pyhd8ed1ab_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "pillow 10.0.0 py310hd63a8c7_0",
   "jq 1.6 hc929b4f_1000",
   "importlib_resources 6.0.1 pyhd8ed1ab_0",
   "icu 72.1 h7336db1_0",
   "packaging 23.1 pyhd8ed1ab_0",
   "yaml 0.2.5 h0d85af4_2",
   "ncurses 6.4 hf0c8a7f_0",
   "python 3.10.12 had23ca6_0_cpython",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "libxml2 2.11.5 hd95e348_0",
   "anaconda-client 1.12.0 pyhd8ed1ab_1",
   "chardet 5.2.0 py310h2ec42d9_0",
   "click 8.1.7 unix_pyh707e725_0",
   "charset-normalizer 3.2.0 pyhd8ed1ab_0",
   "conda-index 0.2.3 pyhd8ed1ab_0",
   "openjpeg 2.5.0 h13ac156_2",
   "cffi 1.15.1 py310ha78151a_3",
   "conda 23.3.1 py310h2ec42d9_0",
   "readline 8.2 h9e318b2_1",
   "python-libarchive-c 5.0 py310h2ec42d9_1",
   "reproc 14.2.4 hb7f2c08_0",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "freetype 2.12.1 h3f81eb7_1",
   "pcre2 10.40 h1c4e4bc_0",
   "typing_extensions 4.7.1 pyha770c72_0",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "prompt_toolkit 3.0.39 hd8ed1ab_0",
   "conda-build 3.25.0 py310h2ec42d9_0",
   "libarchive 3.6.2 h0b5dc4a_1",
   "libcurl 8.2.1 h5f667d7_0",
   "libjpeg-turbo 2.1.5.1 hb7f2c08_0",
   "lcms2 2.15 h2dcdeff_1",
   "xorg-libxdmcp 1.1.3 h35c211d_0",
   "pyopenssl 23.2.0 pyhd8ed1ab_1",
   "libsqlite 3.42.0 h58db7d2_0",
   "mamba 1.4.2 py310h6bde348_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "pluggy 1.2.0 pyhd8ed1ab_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "git 2.42.0 pl5321hbb4c4ee_0",
   "sigtool 0.1.3 h88f4db0_0",
   "ruamel.yaml 0.17.32 py310h6729b98_0",
   "boa 0.15.1 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "perl 5.32.1 4_h0dc2134_perl5",
   "libcxx 16.0.6 hd57cbcb_0",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "requests 2.31.0 pyhd8ed1ab_0",
   "lz4-c 1.9.4 hf0c8a7f_0",
   "pyyaml 6.0.1 py310h6729b98_0",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "libssh2 1.11.0 hd019ec5_0",
   "psutil 5.9.5 py310h90acd4f_0",
   "libexpat 2.5.0 hf0c8a7f_1",
   "libdeflate 1.18 hac1461d_0",
   "setuptools 68.1.2 pyhd8ed1ab_0",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "libnghttp2 1.52.0 he2ab024_0",
   "anyio 3.7.1 pyhd8ed1ab_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "certifi 2023.7.22 pyhd8ed1ab_0",
   "requests-toolbelt 1.0.0 pyhd8ed1ab_0",
   "brotli-python 1.0.9 py310h7a76584_9",
   "libwebp-base 1.3.1 h0dc2134_0",
   "ripgrep 13.0.0 hbbacdb1_2",
   "rich 13.5.1 pyhd8ed1ab_0",
   "nbformat 5.9.2 pyhd8ed1ab_0",
   "ld64_osx-64 609 ha20a434_14",
   "fmt 9.1.0 hb8565cd_0",
   "ca-certificates 2023.7.22 h8857fd0_0",
   "patch 2.7.6 hbcf498f_1002",
   "pip 23.2.1 pyhd8ed1ab_0",
   "conda-package-handling 2.2.0 pyh38be061_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "libffi 3.4.2 h0d85af4_5",
   "python_abi 3.10 3_cp310",
   "krb5 1.21.2 hb884880_0",
   "filelock 3.12.3 pyhd8ed1ab_0",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "libzlib 1.2.13 h8a1eda9_5",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "conda-package-streaming 0.9.0 pyhd8ed1ab_0",
   "more-itertools 10.1.0 pyhd8ed1ab_0",
   "rpds-py 0.10.0 py310h3461e44_0",
   "jsonpatch 1.32 pyhd8ed1ab_0",
   "openssl 3.1.2 h8a1eda9_0",
   "reproc-cpp 14.2.4 hf0c8a7f_0",
   "referencing 0.30.2 pyhd8ed1ab_0",
   "liblief 0.12.3 hf0c8a7f_0",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "conda-pack 0.7.1 pyhd8ed1ab_0",
   "tapi 1100.0.11 h9ce4665_0",
   "conda-forge-ci-setup 3.32.5 py310h84be057_100",
   "libpng 1.6.39 ha978bb4_0",
   "markupsafe 2.1.3 py310h6729b98_0",
   "xz 5.2.6 h775f41a_0",
   "python-fastjsonschema 2.18.0 pyhd8ed1ab_0",
   "yaml-cpp 0.7.0 hf0c8a7f_2",
   "tzdata 2023c h71feb2d_0",
   "backports 1.0 pyhd8ed1ab_3",
   "bzip2 1.0.8 h0d85af4_4",
   "jupyter_core 5.3.1 py310h2ec42d9_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "tqdm 4.66.1 pyhd8ed1ab_0",
   "py-lief 0.12.3 py310h7a76584_0",
   "attrs 23.1.0 pyh71513ae_1",
   "conda-forge-metadata 0.5.2 pyhd8ed1ab_0",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "zstandard 0.19.0 py310h151724a_2",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "libtiff 4.5.1 hf955e92_1",
   "zipp 3.16.2 pyhd8ed1ab_0",
   "markdown-it-py 3.0.0 pyhd8ed1ab_0",
   "libxcb 1.15 hb7f2c08_0",
   "pycosat 0.6.4 py310h90acd4f_1",
   "clyent 1.2.2 py_1",
   "brotlipy 0.7.0 py310h90acd4f_1005",
   "libsolv 0.7.24 h7d26f99_1",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "lerc 4.0.0 hb486fe8_0",
   "wheel 0.41.1 pyhd8ed1ab_0",
   "backports.functools_lru_cache 1.6.5 pyhd8ed1ab_0",
   "jsonpointer 2.0 py_0",
   "ld64 609 ha02d983_14",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py310h90acd4f_1008",
   "libmambapy 1.4.2 py310hb15139c_0",
   "curl 8.2.1 h5f667d7_0",
   "zstd 1.5.2 h829000d_7",
   "oniguruma 6.9.8 hac89ed1_0",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "c-ares 1.19.1 h0dc2134_0",
   "libiconv 1.17 hac89ed1_0",
   "jsonschema 4.19.0 pyhd8ed1ab_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "lzo 2.10 haf1e3a3_1000",
   "cctools 973.0.1 h40f6528_14",
   "pybind11-abi 4 hd8ed1ab_3",
   "ruamel.yaml.clib 0.2.7 py310h90acd4f_1",
   "json5 0.9.14 pyhd8ed1ab_0",
   "pytz 2023.3 pyhd8ed1ab_0",
   "libllvm16 16.0.6 he4b1e75_2",
   "pycparser 2.21 pyhd8ed1ab_0",
   "conda-libmamba-solver 23.3.0 pyhd8ed1ab_0",
   "tk 8.6.12 h5dbffcc_0",
   "libev 4.33 haf1e3a3_1",
   "idna 3.4 pyhd8ed1ab_0"
  ],
  "summary": "Intel\u00ae Distribution of OpenVINO\u2122 Toolkit",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_13.2.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "c_compiler_version": "15",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "15",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "gflags": "2.2",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.22",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "snappy": "1",
  "target_platform": "osx-64",
  "tbb_devel": "2021",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ],
  "zlib": "1.2"
 },
 "conda_pkg_format": "2",
 "files": [
  "include/ie/c_api/ie_c_api.h",
  "include/ie/cpp/ie_cnn_network.h",
  "include/ie/cpp/ie_executable_network.hpp",
  "include/ie/cpp/ie_infer_request.hpp",
  "include/ie/cpp/ie_memory_state.hpp",
  "include/ie/cpu/cpu_config.hpp",
  "include/ie/details/ie_blob_iterator.hpp",
  "include/ie/details/ie_exception.hpp",
  "include/ie/details/ie_pre_allocator.hpp",
  "include/ie/details/ie_so_loader.h",
  "include/ie/details/ie_so_pointer.hpp",
  "include/ie/gna/gna_config.hpp",
  "include/ie/gpu/details/gpu_context_helpers.hpp",
  "include/ie/gpu/gpu_config.hpp",
  "include/ie/gpu/gpu_context_api_dx.hpp",
  "include/ie/gpu/gpu_context_api_ocl.hpp",
  "include/ie/gpu/gpu_context_api_va.hpp",
  "include/ie/gpu/gpu_ocl_wrapper.hpp",
  "include/ie/gpu/gpu_params.hpp",
  "include/ie/hetero/hetero_plugin_config.hpp",
  "include/ie/ie_allocator.hpp",
  "include/ie/ie_api.h",
  "include/ie/ie_blob.h",
  "include/ie/ie_common.h",
  "include/ie/ie_compound_blob.h",
  "include/ie/ie_core.hpp",
  "include/ie/ie_data.h",
  "include/ie/ie_extension.h",
  "include/ie/ie_icnn_network.hpp",
  "include/ie/ie_iexecutable_network.hpp",
  "include/ie/ie_iextension.h",
  "include/ie/ie_iinfer_request.hpp",
  "include/ie/ie_input_info.hpp",
  "include/ie/ie_layouts.h",
  "include/ie/ie_locked_memory.hpp",
  "include/ie/ie_parallel.hpp",
  "include/ie/ie_parameter.hpp",
  "include/ie/ie_plugin_config.hpp",
  "include/ie/ie_precision.hpp",
  "include/ie/ie_preprocess.hpp",
  "include/ie/ie_remote_blob.hpp",
  "include/ie/ie_remote_context.hpp",
  "include/ie/ie_transformations.hpp",
  "include/ie/ie_version.hpp",
  "include/ie/inference_engine.hpp",
  "include/ie/multi-device/multi_device_config.hpp",
  "include/ie/vpu/hddl_config.hpp",
  "include/ie/vpu/myriad_config.hpp",
  "include/ie/vpu/vpu_config.hpp",
  "include/ngraph/attribute_adapter.hpp",
  "include/ngraph/attribute_visitor.hpp",
  "include/ngraph/axis_set.hpp",
  "include/ngraph/axis_vector.hpp",
  "include/ngraph/check.hpp",
  "include/ngraph/coordinate.hpp",
  "include/ngraph/coordinate_diff.hpp",
  "include/ngraph/deprecated.hpp",
  "include/ngraph/descriptor/input.hpp",
  "include/ngraph/descriptor/output.hpp",
  "include/ngraph/descriptor/tensor.hpp",
  "include/ngraph/dimension.hpp",
  "include/ngraph/distributed.hpp",
  "include/ngraph/enum_names.hpp",
  "include/ngraph/env_util.hpp",
  "include/ngraph/evaluator.hpp",
  "include/ngraph/except.hpp",
  "include/ngraph/factory.hpp",
  "include/ngraph/factory_adapter.hpp",
  "include/ngraph/file_util.hpp",
  "include/ngraph/frontend/onnx_import/core/node.hpp",
  "include/ngraph/frontend/onnx_import/core/null_node.hpp",
  "include/ngraph/frontend/onnx_import/core/operator_set.hpp",
  "include/ngraph/frontend/onnx_import/onnx.hpp",
  "include/ngraph/frontend/onnx_import/onnx_importer_visibility.hpp",
  "include/ngraph/frontend/onnx_import/onnx_utils.hpp",
  "include/ngraph/function.hpp",
  "include/ngraph/graph_util.hpp",
  "include/ngraph/interval.hpp",
  "include/ngraph/log.hpp",
  "include/ngraph/ngraph.hpp",
  "include/ngraph/ngraph_visibility.hpp",
  "include/ngraph/node.hpp",
  "include/ngraph/node_input.hpp",
  "include/ngraph/node_output.hpp",
  "include/ngraph/op/abs.hpp",
  "include/ngraph/op/acos.hpp",
  "include/ngraph/op/acosh.hpp",
  "include/ngraph/op/adaptive_avg_pool.hpp",
  "include/ngraph/op/adaptive_max_pool.hpp",
  "include/ngraph/op/add.hpp",
  "include/ngraph/op/and.hpp",
  "include/ngraph/op/asin.hpp",
  "include/ngraph/op/asinh.hpp",
  "include/ngraph/op/assign.hpp",
  "include/ngraph/op/atan.hpp",
  "include/ngraph/op/atanh.hpp",
  "include/ngraph/op/avg_pool.hpp",
  "include/ngraph/op/batch_norm.hpp",
  "include/ngraph/op/batch_to_space.hpp",
  "include/ngraph/op/binary_convolution.hpp",
  "include/ngraph/op/broadcast.hpp",
  "include/ngraph/op/bucketize.hpp",
  "include/ngraph/op/ceiling.hpp",
  "include/ngraph/op/clamp.hpp",
  "include/ngraph/op/concat.hpp",
  "include/ngraph/op/constant.hpp",
  "include/ngraph/op/convert.hpp",
  "include/ngraph/op/convert_like.hpp",
  "include/ngraph/op/convolution.hpp",
  "include/ngraph/op/cos.hpp",
  "include/ngraph/op/cosh.hpp",
  "include/ngraph/op/ctc_greedy_decoder.hpp",
  "include/ngraph/op/ctc_greedy_decoder_seq_len.hpp",
  "include/ngraph/op/ctc_loss.hpp",
  "include/ngraph/op/cum_sum.hpp",
  "include/ngraph/op/deformable_convolution.hpp",
  "include/ngraph/op/deformable_psroi_pooling.hpp",
  "include/ngraph/op/depth_to_space.hpp",
  "include/ngraph/op/detection_output.hpp",
  "include/ngraph/op/dft.hpp",
  "include/ngraph/op/divide.hpp",
  "include/ngraph/op/einsum.hpp",
  "include/ngraph/op/elu.hpp",
  "include/ngraph/op/embedding_segments_sum.hpp",
  "include/ngraph/op/embeddingbag_offsets_sum.hpp",
  "include/ngraph/op/embeddingbag_packedsum.hpp",
  "include/ngraph/op/equal.hpp",
  "include/ngraph/op/erf.hpp",
  "include/ngraph/op/exp.hpp",
  "include/ngraph/op/experimental_detectron_detection_output.hpp",
  "include/ngraph/op/experimental_detectron_generate_proposals.hpp",
  "include/ngraph/op/experimental_detectron_prior_grid_generator.hpp",
  "include/ngraph/op/experimental_detectron_roi_feature.hpp",
  "include/ngraph/op/experimental_detectron_topkrois.hpp",
  "include/ngraph/op/extractimagepatches.hpp",
  "include/ngraph/op/eye.hpp",
  "include/ngraph/op/fake_quantize.hpp",
  "include/ngraph/op/floor.hpp",
  "include/ngraph/op/floor_mod.hpp",
  "include/ngraph/op/gather.hpp",
  "include/ngraph/op/gather_elements.hpp",
  "include/ngraph/op/gather_nd.hpp",
  "include/ngraph/op/gather_tree.hpp",
  "include/ngraph/op/gelu.hpp",
  "include/ngraph/op/generate_proposals.hpp",
  "include/ngraph/op/greater.hpp",
  "include/ngraph/op/greater_eq.hpp",
  "include/ngraph/op/grid_sample.hpp",
  "include/ngraph/op/grn.hpp",
  "include/ngraph/op/group_conv.hpp",
  "include/ngraph/op/gru_cell.hpp",
  "include/ngraph/op/gru_sequence.hpp",
  "include/ngraph/op/hard_sigmoid.hpp",
  "include/ngraph/op/hsigmoid.hpp",
  "include/ngraph/op/hswish.hpp",
  "include/ngraph/op/i420_to_bgr.hpp",
  "include/ngraph/op/i420_to_rgb.hpp",
  "include/ngraph/op/idft.hpp",
  "include/ngraph/op/if.hpp",
  "include/ngraph/op/interpolate.hpp",
  "include/ngraph/op/irdft.hpp",
  "include/ngraph/op/is_finite.hpp",
  "include/ngraph/op/is_inf.hpp",
  "include/ngraph/op/is_nan.hpp",
  "include/ngraph/op/less.hpp",
  "include/ngraph/op/less_eq.hpp",
  "include/ngraph/op/log.hpp",
  "include/ngraph/op/log_softmax.hpp",
  "include/ngraph/op/loop.hpp",
  "include/ngraph/op/lrn.hpp",
  "include/ngraph/op/lstm_cell.hpp",
  "include/ngraph/op/lstm_sequence.hpp",
  "include/ngraph/op/matmul.hpp",
  "include/ngraph/op/matrix_nms.hpp",
  "include/ngraph/op/max.hpp",
  "include/ngraph/op/max_pool.hpp",
  "include/ngraph/op/maximum.hpp",
  "include/ngraph/op/min.hpp",
  "include/ngraph/op/minimum.hpp",
  "include/ngraph/op/mish.hpp",
  "include/ngraph/op/mod.hpp",
  "include/ngraph/op/multiclass_nms.hpp",
  "include/ngraph/op/multiply.hpp",
  "include/ngraph/op/mvn.hpp",
  "include/ngraph/op/negative.hpp",
  "include/ngraph/op/non_max_suppression.hpp",
  "include/ngraph/op/non_zero.hpp",
  "include/ngraph/op/normalize_l2.hpp",
  "include/ngraph/op/not.hpp",
  "include/ngraph/op/not_equal.hpp",
  "include/ngraph/op/nv12_to_bgr.hpp",
  "include/ngraph/op/nv12_to_rgb.hpp",
  "include/ngraph/op/one_hot.hpp",
  "include/ngraph/op/op.hpp",
  "include/ngraph/op/or.hpp",
  "include/ngraph/op/pad.hpp",
  "include/ngraph/op/parameter.hpp",
  "include/ngraph/op/power.hpp",
  "include/ngraph/op/prelu.hpp",
  "include/ngraph/op/prior_box.hpp",
  "include/ngraph/op/prior_box_clustered.hpp",
  "include/ngraph/op/proposal.hpp",
  "include/ngraph/op/psroi_pooling.hpp",
  "include/ngraph/op/random_uniform.hpp",
  "include/ngraph/op/range.hpp",
  "include/ngraph/op/rdft.hpp",
  "include/ngraph/op/read_value.hpp",
  "include/ngraph/op/reduce_l1.hpp",
  "include/ngraph/op/reduce_l2.hpp",
  "include/ngraph/op/reduce_logical_and.hpp",
  "include/ngraph/op/reduce_logical_or.hpp",
  "include/ngraph/op/reduce_mean.hpp",
  "include/ngraph/op/reduce_prod.hpp",
  "include/ngraph/op/reduce_sum.hpp",
  "include/ngraph/op/region_yolo.hpp",
  "include/ngraph/op/relu.hpp",
  "include/ngraph/op/reorg_yolo.hpp",
  "include/ngraph/op/reshape.hpp",
  "include/ngraph/op/result.hpp",
  "include/ngraph/op/reverse.hpp",
  "include/ngraph/op/reverse_sequence.hpp",
  "include/ngraph/op/rnn_cell.hpp",
  "include/ngraph/op/rnn_sequence.hpp",
  "include/ngraph/op/roi_align.hpp",
  "include/ngraph/op/roi_pooling.hpp",
  "include/ngraph/op/roll.hpp",
  "include/ngraph/op/round.hpp",
  "include/ngraph/op/scatter_elements_update.hpp",
  "include/ngraph/op/scatter_nd_update.hpp",
  "include/ngraph/op/scatter_update.hpp",
  "include/ngraph/op/select.hpp",
  "include/ngraph/op/selu.hpp",
  "include/ngraph/op/shape_of.hpp",
  "include/ngraph/op/shuffle_channels.hpp",
  "include/ngraph/op/sigmoid.hpp",
  "include/ngraph/op/sign.hpp",
  "include/ngraph/op/sin.hpp",
  "include/ngraph/op/sinh.hpp",
  "include/ngraph/op/sink.hpp",
  "include/ngraph/op/slice.hpp",
  "include/ngraph/op/softmax.hpp",
  "include/ngraph/op/softplus.hpp",
  "include/ngraph/op/softsign.hpp",
  "include/ngraph/op/space_to_batch.hpp",
  "include/ngraph/op/space_to_depth.hpp",
  "include/ngraph/op/split.hpp",
  "include/ngraph/op/sqrt.hpp",
  "include/ngraph/op/squared_difference.hpp",
  "include/ngraph/op/squeeze.hpp",
  "include/ngraph/op/strided_slice.hpp",
  "include/ngraph/op/subtract.hpp",
  "include/ngraph/op/swish.hpp",
  "include/ngraph/op/tan.hpp",
  "include/ngraph/op/tanh.hpp",
  "include/ngraph/op/tensor_iterator.hpp",
  "include/ngraph/op/tile.hpp",
  "include/ngraph/op/topk.hpp",
  "include/ngraph/op/transpose.hpp",
  "include/ngraph/op/unique.hpp",
  "include/ngraph/op/unsqueeze.hpp",
  "include/ngraph/op/util/activation_functions.hpp",
  "include/ngraph/op/util/arithmetic_reduction.hpp",
  "include/ngraph/op/util/arithmetic_reductions_keep_dims.hpp",
  "include/ngraph/op/util/attr_types.hpp",
  "include/ngraph/op/util/binary_elementwise_arithmetic.hpp",
  "include/ngraph/op/util/binary_elementwise_comparison.hpp",
  "include/ngraph/op/util/binary_elementwise_logical.hpp",
  "include/ngraph/op/util/broadcast_base.hpp",
  "include/ngraph/op/util/deformable_convolution_base.hpp",
  "include/ngraph/op/util/detection_output_base.hpp",
  "include/ngraph/op/util/elementwise_args.hpp",
  "include/ngraph/op/util/embeddingbag_offsets_base.hpp",
  "include/ngraph/op/util/embeddingbag_packed_base.hpp",
  "include/ngraph/op/util/eval_copy.hpp",
  "include/ngraph/op/util/evaluate_helpers.hpp",
  "include/ngraph/op/util/fft_base.hpp",
  "include/ngraph/op/util/framework_node.hpp",
  "include/ngraph/op/util/gather_base.hpp",
  "include/ngraph/op/util/gather_nd_base.hpp",
  "include/ngraph/op/util/index_reduction.hpp",
  "include/ngraph/op/util/logical_reduction.hpp",
  "include/ngraph/op/util/logical_reduction_keep_dims.hpp",
  "include/ngraph/op/util/max_pool_base.hpp",
  "include/ngraph/op/util/multi_subgraph_base.hpp",
  "include/ngraph/op/util/multiclass_nms_base.hpp",
  "include/ngraph/op/util/op_annotations.hpp",
  "include/ngraph/op/util/op_types.hpp",
  "include/ngraph/op/util/recurrent_sequence.hpp",
  "include/ngraph/op/util/reduction_base.hpp",
  "include/ngraph/op/util/rnn_cell_base.hpp",
  "include/ngraph/op/util/scatter_base.hpp",
  "include/ngraph/op/util/scatter_nd_base.hpp",
  "include/ngraph/op/util/slice_plan.hpp",
  "include/ngraph/op/util/sub_graph_base.hpp",
  "include/ngraph/op/util/unary_elementwise_arithmetic.hpp",
  "include/ngraph/op/util/variable.hpp",
  "include/ngraph/op/util/variable_context.hpp",
  "include/ngraph/op/util/variable_extension.hpp",
  "include/ngraph/op/util/variable_value.hpp",
  "include/ngraph/op/variadic_split.hpp",
  "include/ngraph/op/xor.hpp",
  "include/ngraph/ops.hpp",
  "include/ngraph/opsets/opset.hpp",
  "include/ngraph/opsets/opset1.hpp",
  "include/ngraph/opsets/opset10.hpp",
  "include/ngraph/opsets/opset10_tbl.hpp",
  "include/ngraph/opsets/opset11.hpp",
  "include/ngraph/opsets/opset11_tbl.hpp",
  "include/ngraph/opsets/opset1_tbl.hpp",
  "include/ngraph/opsets/opset2.hpp",
  "include/ngraph/opsets/opset2_tbl.hpp",
  "include/ngraph/opsets/opset3.hpp",
  "include/ngraph/opsets/opset3_tbl.hpp",
  "include/ngraph/opsets/opset4.hpp",
  "include/ngraph/opsets/opset4_tbl.hpp",
  "include/ngraph/opsets/opset5.hpp",
  "include/ngraph/opsets/opset5_tbl.hpp",
  "include/ngraph/opsets/opset6.hpp",
  "include/ngraph/opsets/opset6_tbl.hpp",
  "include/ngraph/opsets/opset7.hpp",
  "include/ngraph/opsets/opset7_tbl.hpp",
  "include/ngraph/opsets/opset8.hpp",
  "include/ngraph/opsets/opset8_tbl.hpp",
  "include/ngraph/opsets/opset9.hpp",
  "include/ngraph/opsets/opset9_tbl.hpp",
  "include/ngraph/output_vector.hpp",
  "include/ngraph/partial_shape.hpp",
  "include/ngraph/pass/constant_folding.hpp",
  "include/ngraph/pass/convert_fp32_to_fp16.hpp",
  "include/ngraph/pass/graph_rewrite.hpp",
  "include/ngraph/pass/low_latency.hpp",
  "include/ngraph/pass/manager.hpp",
  "include/ngraph/pass/pass.hpp",
  "include/ngraph/pass/pass_config.hpp",
  "include/ngraph/pass/serialize.hpp",
  "include/ngraph/pass/validate.hpp",
  "include/ngraph/pass/visualize_tree.hpp",
  "include/ngraph/pattern/matcher.hpp",
  "include/ngraph/pattern/op/any.hpp",
  "include/ngraph/pattern/op/any_of.hpp",
  "include/ngraph/pattern/op/any_output.hpp",
  "include/ngraph/pattern/op/branch.hpp",
  "include/ngraph/pattern/op/capture.hpp",
  "include/ngraph/pattern/op/label.hpp",
  "include/ngraph/pattern/op/or.hpp",
  "include/ngraph/pattern/op/pattern.hpp",
  "include/ngraph/pattern/op/skip.hpp",
  "include/ngraph/pattern/op/true.hpp",
  "include/ngraph/pattern/op/wrap_type.hpp",
  "include/ngraph/rank.hpp",
  "include/ngraph/rt_info.hpp",
  "include/ngraph/runtime/aligned_buffer.hpp",
  "include/ngraph/runtime/host_tensor.hpp",
  "include/ngraph/runtime/shared_buffer.hpp",
  "include/ngraph/runtime/tensor.hpp",
  "include/ngraph/shape.hpp",
  "include/ngraph/shape_util.hpp",
  "include/ngraph/slice_plan.hpp",
  "include/ngraph/specialize_function.hpp",
  "include/ngraph/strides.hpp",
  "include/ngraph/type.hpp",
  "include/ngraph/type/bfloat16.hpp",
  "include/ngraph/type/element_type.hpp",
  "include/ngraph/type/element_type_traits.hpp",
  "include/ngraph/type/float16.hpp",
  "include/ngraph/util.hpp",
  "include/ngraph/validation_util.hpp",
  "include/ngraph/version.hpp",
  "include/ngraph/visibility.hpp",
  "include/openvino/c/auto/properties.h",
  "include/openvino/c/deprecated.h",
  "include/openvino/c/gpu/gpu_plugin_properties.h",
  "include/openvino/c/openvino.h",
  "include/openvino/c/ov_common.h",
  "include/openvino/c/ov_compiled_model.h",
  "include/openvino/c/ov_core.h",
  "include/openvino/c/ov_dimension.h",
  "include/openvino/c/ov_infer_request.h",
  "include/openvino/c/ov_layout.h",
  "include/openvino/c/ov_model.h",
  "include/openvino/c/ov_node.h",
  "include/openvino/c/ov_partial_shape.h",
  "include/openvino/c/ov_prepostprocess.h",
  "include/openvino/c/ov_property.h",
  "include/openvino/c/ov_rank.h",
  "include/openvino/c/ov_remote_context.h",
  "include/openvino/c/ov_shape.h",
  "include/openvino/c/ov_tensor.h",
  "include/openvino/core/any.hpp",
  "include/openvino/core/attribute_adapter.hpp",
  "include/openvino/core/attribute_visitor.hpp",
  "include/openvino/core/axis_set.hpp",
  "include/openvino/core/axis_vector.hpp",
  "include/openvino/core/coordinate.hpp",
  "include/openvino/core/coordinate_diff.hpp",
  "include/openvino/core/core.hpp",
  "include/openvino/core/core_visibility.hpp",
  "include/openvino/core/deprecated.hpp",
  "include/openvino/core/descriptor/input.hpp",
  "include/openvino/core/descriptor/output.hpp",
  "include/openvino/core/descriptor/tensor.hpp",
  "include/openvino/core/dimension.hpp",
  "include/openvino/core/enum_mask.hpp",
  "include/openvino/core/enum_names.hpp",
  "include/openvino/core/except.hpp",
  "include/openvino/core/extension.hpp",
  "include/openvino/core/graph_util.hpp",
  "include/openvino/core/interval.hpp",
  "include/openvino/core/layout.hpp",
  "include/openvino/core/model.hpp",
  "include/openvino/core/node.hpp",
  "include/openvino/core/node_input.hpp",
  "include/openvino/core/node_output.hpp",
  "include/openvino/core/node_vector.hpp",
  "include/openvino/core/op_extension.hpp",
  "include/openvino/core/parallel.hpp",
  "include/openvino/core/partial_shape.hpp",
  "include/openvino/core/preprocess/color_format.hpp",
  "include/openvino/core/preprocess/input_info.hpp",
  "include/openvino/core/preprocess/input_model_info.hpp",
  "include/openvino/core/preprocess/input_tensor_info.hpp",
  "include/openvino/core/preprocess/output_info.hpp",
  "include/openvino/core/preprocess/output_model_info.hpp",
  "include/openvino/core/preprocess/output_tensor_info.hpp",
  "include/openvino/core/preprocess/postprocess_steps.hpp",
  "include/openvino/core/preprocess/pre_post_process.hpp",
  "include/openvino/core/preprocess/preprocess_steps.hpp",
  "include/openvino/core/preprocess/resize_algorithm.hpp",
  "include/openvino/core/rank.hpp",
  "include/openvino/core/rt_info.hpp",
  "include/openvino/core/rtti.hpp",
  "include/openvino/core/runtime_attribute.hpp",
  "include/openvino/core/shape.hpp",
  "include/openvino/core/strides.hpp",
  "include/openvino/core/type.hpp",
  "include/openvino/core/type/bfloat16.hpp",
  "include/openvino/core/type/element_type.hpp",
  "include/openvino/core/type/element_type_traits.hpp",
  "include/openvino/core/type/float16.hpp",
  "include/openvino/core/validation_util.hpp",
  "include/openvino/core/version.hpp",
  "include/openvino/core/visibility.hpp",
  "include/openvino/frontend/decoder.hpp",
  "include/openvino/frontend/exception.hpp",
  "include/openvino/frontend/extension.hpp",
  "include/openvino/frontend/extension/conversion.hpp",
  "include/openvino/frontend/extension/decoder_transformation.hpp",
  "include/openvino/frontend/extension/holder.hpp",
  "include/openvino/frontend/extension/op.hpp",
  "include/openvino/frontend/extension/progress_reporter.hpp",
  "include/openvino/frontend/extension/telemetry.hpp",
  "include/openvino/frontend/frontend.hpp",
  "include/openvino/frontend/input_model.hpp",
  "include/openvino/frontend/manager.hpp",
  "include/openvino/frontend/node_context.hpp",
  "include/openvino/frontend/onnx/extension/conversion.hpp",
  "include/openvino/frontend/onnx/extension/op.hpp",
  "include/openvino/frontend/onnx/frontend.hpp",
  "include/openvino/frontend/onnx/node_context.hpp",
  "include/openvino/frontend/onnx/visibility.hpp",
  "include/openvino/frontend/paddle/decoder.hpp",
  "include/openvino/frontend/paddle/exception.hpp",
  "include/openvino/frontend/paddle/extension/conversion.hpp",
  "include/openvino/frontend/paddle/extension/op.hpp",
  "include/openvino/frontend/paddle/frontend.hpp",
  "include/openvino/frontend/paddle/node_context.hpp",
  "include/openvino/frontend/paddle/visibility.hpp",
  "include/openvino/frontend/place.hpp",
  "include/openvino/frontend/pytorch/decoder.hpp",
  "include/openvino/frontend/pytorch/extension/conversion.hpp",
  "include/openvino/frontend/pytorch/extension/op.hpp",
  "include/openvino/frontend/pytorch/frontend.hpp",
  "include/openvino/frontend/pytorch/node_context.hpp",
  "include/openvino/frontend/pytorch/visibility.hpp",
  "include/openvino/frontend/tensorflow/decoder.hpp",
  "include/openvino/frontend/tensorflow/exception.hpp",
  "include/openvino/frontend/tensorflow/extension/conversion.hpp",
  "include/openvino/frontend/tensorflow/extension/op.hpp",
  "include/openvino/frontend/tensorflow/frontend.hpp",
  "include/openvino/frontend/tensorflow/graph_iterator.hpp",
  "include/openvino/frontend/tensorflow/node_context.hpp",
  "include/openvino/frontend/tensorflow/special_types.hpp",
  "include/openvino/frontend/tensorflow/visibility.hpp",
  "include/openvino/frontend/tensorflow_lite/extension/conversion.hpp",
  "include/openvino/frontend/tensorflow_lite/extension/op.hpp",
  "include/openvino/frontend/tensorflow_lite/frontend.hpp",
  "include/openvino/frontend/tensorflow_lite/node_context.hpp",
  "include/openvino/frontend/tensorflow_lite/visibility.hpp",
  "include/openvino/frontend/visibility.hpp",
  "include/openvino/op/abs.hpp",
  "include/openvino/op/acos.hpp",
  "include/openvino/op/acosh.hpp",
  "include/openvino/op/adaptive_avg_pool.hpp",
  "include/openvino/op/adaptive_max_pool.hpp",
  "include/openvino/op/add.hpp",
  "include/openvino/op/asin.hpp",
  "include/openvino/op/asinh.hpp",
  "include/openvino/op/assign.hpp",
  "include/openvino/op/atan.hpp",
  "include/openvino/op/atanh.hpp",
  "include/openvino/op/avg_pool.hpp",
  "include/openvino/op/batch_norm.hpp",
  "include/openvino/op/batch_to_space.hpp",
  "include/openvino/op/binary_convolution.hpp",
  "include/openvino/op/broadcast.hpp",
  "include/openvino/op/bucketize.hpp",
  "include/openvino/op/ceiling.hpp",
  "include/openvino/op/clamp.hpp",
  "include/openvino/op/concat.hpp",
  "include/openvino/op/constant.hpp",
  "include/openvino/op/convert.hpp",
  "include/openvino/op/convert_like.hpp",
  "include/openvino/op/convolution.hpp",
  "include/openvino/op/cos.hpp",
  "include/openvino/op/cosh.hpp",
  "include/openvino/op/ctc_greedy_decoder.hpp",
  "include/openvino/op/ctc_greedy_decoder_seq_len.hpp",
  "include/openvino/op/ctc_loss.hpp",
  "include/openvino/op/cum_sum.hpp",
  "include/openvino/op/deformable_convolution.hpp",
  "include/openvino/op/deformable_psroi_pooling.hpp",
  "include/openvino/op/depth_to_space.hpp",
  "include/openvino/op/detection_output.hpp",
  "include/openvino/op/dft.hpp",
  "include/openvino/op/divide.hpp",
  "include/openvino/op/einsum.hpp",
  "include/openvino/op/elu.hpp",
  "include/openvino/op/embedding_segments_sum.hpp",
  "include/openvino/op/embeddingbag_offsets_sum.hpp",
  "include/openvino/op/embeddingbag_packedsum.hpp",
  "include/openvino/op/equal.hpp",
  "include/openvino/op/erf.hpp",
  "include/openvino/op/exp.hpp",
  "include/openvino/op/experimental_detectron_detection_output.hpp",
  "include/openvino/op/experimental_detectron_generate_proposals.hpp",
  "include/openvino/op/experimental_detectron_prior_grid_generator.hpp",
  "include/openvino/op/experimental_detectron_roi_feature.hpp",
  "include/openvino/op/experimental_detectron_topkrois.hpp",
  "include/openvino/op/extractimagepatches.hpp",
  "include/openvino/op/eye.hpp",
  "include/openvino/op/fake_quantize.hpp",
  "include/openvino/op/floor.hpp",
  "include/openvino/op/floor_mod.hpp",
  "include/openvino/op/gather.hpp",
  "include/openvino/op/gather_elements.hpp",
  "include/openvino/op/gather_nd.hpp",
  "include/openvino/op/gather_tree.hpp",
  "include/openvino/op/gelu.hpp",
  "include/openvino/op/generate_proposals.hpp",
  "include/openvino/op/greater.hpp",
  "include/openvino/op/greater_eq.hpp",
  "include/openvino/op/grid_sample.hpp",
  "include/openvino/op/grn.hpp",
  "include/openvino/op/group_conv.hpp",
  "include/openvino/op/gru_cell.hpp",
  "include/openvino/op/gru_sequence.hpp",
  "include/openvino/op/hard_sigmoid.hpp",
  "include/openvino/op/hsigmoid.hpp",
  "include/openvino/op/hswish.hpp",
  "include/openvino/op/i420_to_bgr.hpp",
  "include/openvino/op/i420_to_rgb.hpp",
  "include/openvino/op/idft.hpp",
  "include/openvino/op/if.hpp",
  "include/openvino/op/interpolate.hpp",
  "include/openvino/op/irdft.hpp",
  "include/openvino/op/is_finite.hpp",
  "include/openvino/op/is_inf.hpp",
  "include/openvino/op/is_nan.hpp",
  "include/openvino/op/less.hpp",
  "include/openvino/op/less_eq.hpp",
  "include/openvino/op/log.hpp",
  "include/openvino/op/log_softmax.hpp",
  "include/openvino/op/logical_and.hpp",
  "include/openvino/op/logical_not.hpp",
  "include/openvino/op/logical_or.hpp",
  "include/openvino/op/logical_xor.hpp",
  "include/openvino/op/loop.hpp",
  "include/openvino/op/lrn.hpp",
  "include/openvino/op/lstm_cell.hpp",
  "include/openvino/op/lstm_sequence.hpp",
  "include/openvino/op/matmul.hpp",
  "include/openvino/op/matrix_nms.hpp",
  "include/openvino/op/max_pool.hpp",
  "include/openvino/op/maximum.hpp",
  "include/openvino/op/minimum.hpp",
  "include/openvino/op/mish.hpp",
  "include/openvino/op/mod.hpp",
  "include/openvino/op/multiclass_nms.hpp",
  "include/openvino/op/multiply.hpp",
  "include/openvino/op/mvn.hpp",
  "include/openvino/op/negative.hpp",
  "include/openvino/op/non_max_suppression.hpp",
  "include/openvino/op/non_zero.hpp",
  "include/openvino/op/normalize_l2.hpp",
  "include/openvino/op/not_equal.hpp",
  "include/openvino/op/nv12_to_bgr.hpp",
  "include/openvino/op/nv12_to_rgb.hpp",
  "include/openvino/op/one_hot.hpp",
  "include/openvino/op/op.hpp",
  "include/openvino/op/ops.hpp",
  "include/openvino/op/pad.hpp",
  "include/openvino/op/parameter.hpp",
  "include/openvino/op/power.hpp",
  "include/openvino/op/prelu.hpp",
  "include/openvino/op/prior_box.hpp",
  "include/openvino/op/prior_box_clustered.hpp",
  "include/openvino/op/proposal.hpp",
  "include/openvino/op/psroi_pooling.hpp",
  "include/openvino/op/random_uniform.hpp",
  "include/openvino/op/range.hpp",
  "include/openvino/op/rdft.hpp",
  "include/openvino/op/read_value.hpp",
  "include/openvino/op/reduce_l1.hpp",
  "include/openvino/op/reduce_l2.hpp",
  "include/openvino/op/reduce_logical_and.hpp",
  "include/openvino/op/reduce_logical_or.hpp",
  "include/openvino/op/reduce_max.hpp",
  "include/openvino/op/reduce_mean.hpp",
  "include/openvino/op/reduce_min.hpp",
  "include/openvino/op/reduce_prod.hpp",
  "include/openvino/op/reduce_sum.hpp",
  "include/openvino/op/region_yolo.hpp",
  "include/openvino/op/relu.hpp",
  "include/openvino/op/reorg_yolo.hpp",
  "include/openvino/op/reshape.hpp",
  "include/openvino/op/result.hpp",
  "include/openvino/op/reverse.hpp",
  "include/openvino/op/reverse_sequence.hpp",
  "include/openvino/op/rnn_cell.hpp",
  "include/openvino/op/rnn_sequence.hpp",
  "include/openvino/op/roi_align.hpp",
  "include/openvino/op/roi_pooling.hpp",
  "include/openvino/op/roll.hpp",
  "include/openvino/op/round.hpp",
  "include/openvino/op/scatter_elements_update.hpp",
  "include/openvino/op/scatter_nd_update.hpp",
  "include/openvino/op/scatter_update.hpp",
  "include/openvino/op/select.hpp",
  "include/openvino/op/selu.hpp",
  "include/openvino/op/shape_of.hpp",
  "include/openvino/op/shuffle_channels.hpp",
  "include/openvino/op/sigmoid.hpp",
  "include/openvino/op/sign.hpp",
  "include/openvino/op/sin.hpp",
  "include/openvino/op/sinh.hpp",
  "include/openvino/op/sink.hpp",
  "include/openvino/op/slice.hpp",
  "include/openvino/op/softmax.hpp",
  "include/openvino/op/softplus.hpp",
  "include/openvino/op/softsign.hpp",
  "include/openvino/op/space_to_batch.hpp",
  "include/openvino/op/space_to_depth.hpp",
  "include/openvino/op/split.hpp",
  "include/openvino/op/sqrt.hpp",
  "include/openvino/op/squared_difference.hpp",
  "include/openvino/op/squeeze.hpp",
  "include/openvino/op/strided_slice.hpp",
  "include/openvino/op/subtract.hpp",
  "include/openvino/op/swish.hpp",
  "include/openvino/op/tan.hpp",
  "include/openvino/op/tanh.hpp",
  "include/openvino/op/tensor_iterator.hpp",
  "include/openvino/op/tile.hpp",
  "include/openvino/op/topk.hpp",
  "include/openvino/op/transpose.hpp",
  "include/openvino/op/unique.hpp",
  "include/openvino/op/unsqueeze.hpp",
  "include/openvino/op/util/activation_functions.hpp",
  "include/openvino/op/util/arithmetic_reduction.hpp",
  "include/openvino/op/util/arithmetic_reductions_keep_dims.hpp",
  "include/openvino/op/util/assign_base.hpp",
  "include/openvino/op/util/attr_types.hpp",
  "include/openvino/op/util/binary_elementwise_arithmetic.hpp",
  "include/openvino/op/util/binary_elementwise_comparison.hpp",
  "include/openvino/op/util/binary_elementwise_logical.hpp",
  "include/openvino/op/util/broadcast_base.hpp",
  "include/openvino/op/util/convert_color_i420_base.hpp",
  "include/openvino/op/util/convert_color_nv12_base.hpp",
  "include/openvino/op/util/convolution_backprop_base.hpp",
  "include/openvino/op/util/convolution_base.hpp",
  "include/openvino/op/util/deformable_convolution_base.hpp",
  "include/openvino/op/util/detection_output_base.hpp",
  "include/openvino/op/util/elementwise_args.hpp",
  "include/openvino/op/util/embeddingbag_offsets_base.hpp",
  "include/openvino/op/util/embeddingbag_packed_base.hpp",
  "include/openvino/op/util/fft_base.hpp",
  "include/openvino/op/util/framework_node.hpp",
  "include/openvino/op/util/gather_base.hpp",
  "include/openvino/op/util/gather_nd_base.hpp",
  "include/openvino/op/util/index_reduction.hpp",
  "include/openvino/op/util/interpolate_base.hpp",
  "include/openvino/op/util/logical_reduction.hpp",
  "include/openvino/op/util/logical_reduction_keep_dims.hpp",
  "include/openvino/op/util/max_pool_base.hpp",
  "include/openvino/op/util/multi_subgraph_base.hpp",
  "include/openvino/op/util/multiclass_nms_base.hpp",
  "include/openvino/op/util/op_types.hpp",
  "include/openvino/op/util/precision_sensitive_attribute.hpp",
  "include/openvino/op/util/read_value_base.hpp",
  "include/openvino/op/util/reduction_base.hpp",
  "include/openvino/op/util/rnn_cell_base.hpp",
  "include/openvino/op/util/scatter_base.hpp",
  "include/openvino/op/util/scatter_nd_base.hpp",
  "include/openvino/op/util/shape_of_base.hpp",
  "include/openvino/op/util/sub_graph_base.hpp",
  "include/openvino/op/util/topk_base.hpp",
  "include/openvino/op/util/unary_elementwise_arithmetic.hpp",
  "include/openvino/op/util/variable.hpp",
  "include/openvino/op/util/variable_context.hpp",
  "include/openvino/op/util/variable_extension.hpp",
  "include/openvino/op/util/variable_value.hpp",
  "include/openvino/op/variadic_split.hpp",
  "include/openvino/op/xor.hpp",
  "include/openvino/openvino.hpp",
  "include/openvino/opsets/opset.hpp",
  "include/openvino/opsets/opset1.hpp",
  "include/openvino/opsets/opset10.hpp",
  "include/openvino/opsets/opset10_tbl.hpp",
  "include/openvino/opsets/opset11.hpp",
  "include/openvino/opsets/opset11_tbl.hpp",
  "include/openvino/opsets/opset1_tbl.hpp",
  "include/openvino/opsets/opset2.hpp",
  "include/openvino/opsets/opset2_tbl.hpp",
  "include/openvino/opsets/opset3.hpp",
  "include/openvino/opsets/opset3_tbl.hpp",
  "include/openvino/opsets/opset4.hpp",
  "include/openvino/opsets/opset4_tbl.hpp",
  "include/openvino/opsets/opset5.hpp",
  "include/openvino/opsets/opset5_tbl.hpp",
  "include/openvino/opsets/opset6.hpp",
  "include/openvino/opsets/opset6_tbl.hpp",
  "include/openvino/opsets/opset7.hpp",
  "include/openvino/opsets/opset7_tbl.hpp",
  "include/openvino/opsets/opset8.hpp",
  "include/openvino/opsets/opset8_tbl.hpp",
  "include/openvino/opsets/opset9.hpp",
  "include/openvino/opsets/opset9_tbl.hpp",
  "include/openvino/pass/constant_folding.hpp",
  "include/openvino/pass/convert_fp32_to_fp16.hpp",
  "include/openvino/pass/graph_rewrite.hpp",
  "include/openvino/pass/low_latency.hpp",
  "include/openvino/pass/make_stateful.hpp",
  "include/openvino/pass/manager.hpp",
  "include/openvino/pass/pass.hpp",
  "include/openvino/pass/pass_config.hpp",
  "include/openvino/pass/pattern/matcher.hpp",
  "include/openvino/pass/pattern/op/any.hpp",
  "include/openvino/pass/pattern/op/any_of.hpp",
  "include/openvino/pass/pattern/op/any_output.hpp",
  "include/openvino/pass/pattern/op/branch.hpp",
  "include/openvino/pass/pattern/op/capture.hpp",
  "include/openvino/pass/pattern/op/label.hpp",
  "include/openvino/pass/pattern/op/or.hpp",
  "include/openvino/pass/pattern/op/pattern.hpp",
  "include/openvino/pass/pattern/op/skip.hpp",
  "include/openvino/pass/pattern/op/true.hpp",
  "include/openvino/pass/pattern/op/wrap_type.hpp",
  "include/openvino/pass/serialize.hpp",
  "include/openvino/pass/validate.hpp",
  "include/openvino/pass/visualize_tree.hpp",
  "include/openvino/runtime/allocator.hpp",
  "include/openvino/runtime/auto/properties.hpp",
  "include/openvino/runtime/common.hpp",
  "include/openvino/runtime/compiled_model.hpp",
  "include/openvino/runtime/core.hpp",
  "include/openvino/runtime/exception.hpp",
  "include/openvino/runtime/infer_request.hpp",
  "include/openvino/runtime/intel_cpu/properties.hpp",
  "include/openvino/runtime/intel_gna/properties.hpp",
  "include/openvino/runtime/intel_gpu/ocl/dx.hpp",
  "include/openvino/runtime/intel_gpu/ocl/ocl.hpp",
  "include/openvino/runtime/intel_gpu/ocl/ocl_wrapper.hpp",
  "include/openvino/runtime/intel_gpu/ocl/va.hpp",
  "include/openvino/runtime/intel_gpu/properties.hpp",
  "include/openvino/runtime/intel_gpu/remote_properties.hpp",
  "include/openvino/runtime/intel_myriad/hddl_properties.hpp",
  "include/openvino/runtime/intel_myriad/myriad_properties.hpp",
  "include/openvino/runtime/profiling_info.hpp",
  "include/openvino/runtime/properties.hpp",
  "include/openvino/runtime/remote_context.hpp",
  "include/openvino/runtime/remote_tensor.hpp",
  "include/openvino/runtime/runtime.hpp",
  "include/openvino/runtime/tensor.hpp",
  "include/openvino/runtime/variable_state.hpp",
  "lib/cmake/inferenceengine2023.0.1/InferenceEngineConfig-version.cmake",
  "lib/cmake/inferenceengine2023.0.1/InferenceEngineConfig.cmake",
  "lib/cmake/ngraph2023.0.1/ngraphConfig.cmake",
  "lib/cmake/ngraph2023.0.1/ngraphConfigVersion.cmake",
  "lib/cmake/openvino2023.0.1/OpenVINOConfig-version.cmake",
  "lib/cmake/openvino2023.0.1/OpenVINOConfig.cmake",
  "lib/cmake/openvino2023.0.1/OpenVINOTargets-release.cmake",
  "lib/cmake/openvino2023.0.1/OpenVINOTargets.cmake",
  "lib/libopenvino.dylib",
  "lib/libopenvino_c.dylib",
  "lib/libopenvino_onnx_frontend.dylib",
  "lib/libopenvino_paddle_frontend.dylib",
  "lib/libopenvino_pytorch_frontend.dylib",
  "lib/libopenvino_tensorflow_frontend.dylib",
  "lib/libopenvino_tensorflow_lite_frontend.dylib",
  "lib/pkgconfig/openvino.pc"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h9c3aa19_3",
  "build_number": 3,
  "depends": [
   "libopenvino >=2023.0.1,<2023.0.2.0a0",
   "libopenvino-auto-batch-plugin >=2023.0.1,<2023.0.2.0a0",
   "libopenvino-auto-plugin >=2023.0.1,<2023.0.2.0a0",
   "libopenvino-hetero-plugin >=2023.0.1,<2023.0.2.0a0",
   "libopenvino-intel-cpu-plugin >=2023.0.1,<2023.0.2.0a0",
   "libopenvino-ir-frontend >=2023.0.1,<2023.0.2.0a0",
   "libopenvino-onnx-frontend >=2023.0.1,<2023.0.2.0a0",
   "libopenvino-paddle-frontend >=2023.0.1,<2023.0.2.0a0",
   "libopenvino-pytorch-frontend >=2023.0.1,<2023.0.2.0a0",
   "libopenvino-tensorflow-frontend >=2023.0.1,<2023.0.2.0a0",
   "libopenvino-tensorflow-lite-frontend >=2023.0.1,<2023.0.2.0a0",
   "pugixml >=1.13,<1.14.0a0",
   "snappy >=1.1.10,<2.0a0"
  ],
  "license": "Apache-2.0",
  "license_family": "Apache",
  "name": "openvino",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1693295144321,
  "version": "2023.0.1"
 },
 "metadata_version": 1,
 "name": "openvino",
 "raw_recipe": "{% set name = \"openvino\" %}\n{% set version = \"2023.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz\n    sha256: c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651\n    patches:\n    - patches/001-win64-find-ocl.patch  # [win64]\n    - patches/003-lin-arm64-compute-lib.patch  # [aarch64]\n    - patches/004-mha-build-fix.patch  # [arm64]\n    - patches/005-cross-compilation-macos.patch\n    - patches/006-remove-mp.patch  # [win64]\n  - url: https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.02.1.tar.gz  # [aarch64 or arm64]\n    sha256: c3a443e26539f866969242e690cf0651ef629149741ee18732f954c734da6763  # [aarch64 or arm64]\n    folder: src/plugins/intel_cpu/thirdparty/ComputeLibrary  # [aarch64 or arm64]\n  - url: https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz\n    sha256: 7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1\n    folder: thirdparty/xbyak\n  - url: https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz\n    sha256: 52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e\n    folder: src/plugins/intel_cpu/thirdparty/onednn\n  - url: https://github.com/oneapi-src/oneDNN/archive/f27dedbfc093f51032a4580198bb80579440dc15.tar.gz  # [win64 or linux64]\n    sha256: da57c2298a8e001718902f0b65b6d92c4a7897b35467e23bc24996dde43ec47b  # [win64 or linux64]\n    folder: src/plugins/intel_gpu/thirdparty/onednn_gpu  # [win64 or linux64]\n  - url: https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz\n    sha256: db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07\n    folder: thirdparty/ade\n  - url: https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz\n    sha256: 090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e\n    folder: thirdparty/onnx/onnx\n\nbuild:\n  number: 3\n  run_exports:\n    - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}  # [x86_64]\n    - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}  # [aarch64 or arm64]\n    - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}  # [win64 or linux64]\n    - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-ir-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-onnx-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-paddle-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-pytorch-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-tensorflow-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-tensorflow-lite-frontend', max_pin='x.x.x') }}\n  ignore_run_exports_from:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - tbb-devel # libopenvino and libopenvino-*-plugin already depend on tbb\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - git\n    - ninja\n    - pkg-config # to generate openvino.pc on macOS\n    - scons  # [aarch64 or arm64]\n    - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n    - python >=3.7\n    - libprotobuf =3.20.3 # for protoc compiler, libraries are used from libprotobuf-static\n    - flatbuffers =23.3.3\n    - sysroot_linux-64 =2.17  # [linux64]\n  host:\n    - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n    - snappy\n    - ocl-icd  # [linux64]\n    - clhpp  # [linux64 or win64]\n    - khronos-opencl-icd-loader  # [win64]\n    - pugixml >=1.12.1 # starting from this version shared libraries are provided\n    - xbyak >=6.69.1  # [x86_64]\n    - libprotobuf-static =3.20.3  # [not win64]\n    - libprotobuf-static  # [win64]\n  run:\n    - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}  # [x86_64]\n    - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}  # [aarch64 or arm64]\n    - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}  # [win64 or linux64]\n    - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-ir-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-onnx-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-paddle-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-pytorch-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-tensorflow-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-tensorflow-lite-frontend', max_pin='x.x.x') }}\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - ninja\n    - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n    - pkg-config # to find zlib\n    - zlib\n    - nlohmann_json\n    - sysroot_linux-64 =2.17  # [linux64]\n    - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n    - opencv\n    - gflags\n  source_files:\n    - samples\n    - thirdparty/cnpy\n  files:\n    - snippets/\n  commands:\n    - export MACOSX_DEPLOYMENT_TARGET={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx]\n    - export CMAKE_GENERATOR=Ninja  # [unix]\n\n    # check libraries (symlinks)\n    {% set openvino_libs = [] %}\n    {{ openvino_libs.append(\"\") or \"\" }}\n    {{ openvino_libs.append(\"_c\") or \"\" }}\n    {{ openvino_libs.append(\"_paddle_frontend\") or \"\" }}\n    {{ openvino_libs.append(\"_pytorch_frontend\") or \"\" }}\n    {{ openvino_libs.append(\"_onnx_frontend\") or \"\" }}\n    {{ openvino_libs.append(\"_tensorflow_frontend\") or \"\" }}\n    {{ openvino_libs.append(\"_tensorflow_lite_frontend\") or \"\" }}\n    {% for openvino_lib in openvino_libs %}\n    - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}${SHLIB_EXT}  # [unix]\n    - if not exist %LIBRARY_BIN%\\\\openvino{{ openvino_lib }}%SHLIB_EXT% exit 1  # [win]\n    {% endfor %}\n\n    # C++ samples on Unix\n    - mkdir -p samples/cpp/thirdparty  # [unix]\n    - cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy  # [unix]\n    - cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin  # [unix]\n    - cmake --build samples_cpp_build --config Release --verbose  # [unix]\n    - ./samples_cpp_build/bin/hello_query_device  # [unix]\n\n    # C samples on Unix\n    - cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt  # [unix]\n    - cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin  # [unix]\n    - cmake --build samples_c_build --config Release --verbose  # [unix]\n\n    # C++ samples on Windows\n    - mkdir -p samples\\\\cpp\\\\thirdparty  # [win]\n    - cp -R thirdparty\\\\cnpy samples\\\\cpp\\\\thirdparty\\\\cnpy  # [win]\n    - cmake -S samples\\\\cpp -B samples_cpp_build -DBIN_FOLDER=bin  # [win]\n    - cmake --build samples_cpp_build --config Release --verbose  # [win]\n    - .\\\\samples_cpp_build\\\\bin\\\\Release\\\\hello_query_device.exe  # [win]\n\n    # C samples on Windows\n    - cp samples\\\\cpp\\\\CMakeLists.txt samples\\\\c\\\\CMakeLists.txt  # [win]\n    - cmake -S samples\\\\c -B samples_c_build -DBIN_FOLDER=bin  # [win]\n    - cmake --build samples_c_build --config Release --verbose  # [win]\n\n    # check that devices are found using OpenVINO C API\n    - $CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test  # [unix]\n    - if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi  # [unix]\n\n    # check that frontends are found using OpenVINO C++ API\n    - cmake -S snippets -B snippets_build\n    - cmake --build snippets_build --config Release --verbose\n    - if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi  # [unix]\n\n\noutputs:\n  - name: libopenvino\n    version: {{ version }}\n    script: install/install.sh\n    about:\n      summary: OpenVINO Core Runtime library\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - tbb-devel =2021.5  # starting from this version TBB uses hwloc in conda\n    test:\n      commands:\n        {% set openvino_libs = [] %}\n        {{ openvino_libs.append(\"\") or \"\" }}\n        {{ openvino_libs.append(\"_c\") or \"\" }}\n        {% for openvino_lib in openvino_libs %}\n        - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino{{ openvino_lib }}%SHLIB_EXT% exit 1  # [win]\n        {% endfor %}\n\n  - name: libopenvino-ir-frontend\n    version: {{ version }}\n    script: install/install_ir.sh\n    about:\n      summary: OpenVINO IR Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_ir_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_ir_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-onnx-frontend\n    version: {{ version }}\n    script: install/install_onnx.sh\n    about:\n      summary: OpenVINO ONNX Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_onnx_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-paddle-frontend\n    version: {{ version }}\n    script: install/install_paddle.sh\n    about:\n      summary: OpenVINO Paddle Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_paddle_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-pytorch-frontend\n    version: {{ version }}\n    script: install/install_pytorch.sh\n    about:\n      summary: OpenVINO Pytorch Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_pytorch_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-tensorflow-frontend\n    version: {{ version }}\n    script: install/install_tensorflow.sh\n    about:\n      summary: OpenVINO TensorFlow Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n        - snappy =1.1.10\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_tensorflow_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-tensorflow-lite-frontend\n    version: {{ version }}\n    script: install/install_tensorflow_lite.sh\n    about:\n      summary: OpenVINO TensorFlow Lite Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-intel-cpu-plugin\n    version: {{ version }}\n    script: install/install_cpu.sh\n    about:\n      summary: OpenVINO Intel\u00ae CPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not x86_64]\n      run_exports:\n        - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_intel_cpu_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_intel_cpu_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-arm-cpu-plugin\n    version: {{ version }}\n    script: install/install_cpu.sh\n    about:\n      summary: OpenVINO ARM\u00ae CPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not aarch64 and not arm64]\n      run_exports:\n        - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_arm_cpu_plugin.so\n\n  - name: libopenvino-intel-gpu-plugin\n    version: {{ version }}\n    script: install/install_gpu.sh\n    about:\n      summary: OpenVINO Intel\u00ae GPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not linux64 and not win64]\n      run_exports:\n        - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n        - ocl-icd  # [linux64]\n        - clhpp\n        - khronos-opencl-icd-loader  # [win64]\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n        - ocl-icd-system  # [linux64]\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_intel_gpu_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_intel_gpu_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-auto-plugin\n    version: {{ version }}\n    script: install/install_auto.sh\n    about:\n      summary: OpenVINO Auto plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_auto_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_auto_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-auto-batch-plugin\n    version: {{ version }}\n    script: install/install_batch.sh\n    about:\n      summary: OpenVINO Auto Batch plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_auto_batch_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_auto_batch_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-hetero-plugin\n    version: {{ version }}\n    script: install/install_hetero.sh\n    about:\n      summary: OpenVINO Hetero plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_hetero_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_hetero_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: openvino\n    script: install/install_dev.sh\n\nabout:\n  home: https://github.com/openvinotoolkit/openvino\n  summary: 'Intel\u00ae Distribution of OpenVINO\u2122 Toolkit'\n  description: |\n    Intel\u00ae Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\n    optimizing and deploying AI inference. It can be used to develop\n    applications and solutions based on deep learning tasks, such as:\n    emulation of human vision, automatic speech recognition, natural\n    language processing, recommendation systems, etc. It provides\n    high-performance and rich deployment options, from edge to cloud\n\n    Installing OpenVINO Runtime from Conda Forge is recommended for C++ developers,\n    as it provides only the C++ / C Runtime API.\n    If you work with Python, consider other OpenVINO distribution channels:\n    https://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n  license: Apache-2.0\n  license_family: Apache\n  license_file:\n    - LICENSE\n    - third-party-programs.txt\n    - onednn_third-party-programs.txt\n    - runtime-third-party-programs.txt\n  doc_url: https://docs.openvino.ai/latest/index.html\n  dev_url: https://github.com/openvinotoolkit/openvino\n\nextra:\n  recipe-maintainers:\n    - ilya-lavrenov\n    - artanokhov\n    - evgenytalanin-intel\n    - RaguzovaTatyana\n",
 "rendered_recipe": {
  "about": {
   "description": "Intel\u00ae Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n\nInstalling OpenVINO Runtime from Conda Forge is recommended for C++ developers,\nas it provides only the C++ / C Runtime API.\nIf you work with Python, consider other OpenVINO distribution channels:\nhttps://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt",
    "third-party-programs.txt"
   ],
   "summary": "Intel\u00ae Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "ignore_run_exports_from": [
    "clang_osx-64 15.*",
    "clangxx_osx-64 15.*",
    "tbb-devel"
   ],
   "number": "3",
   "run_exports": [
    "libopenvino >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-auto-batch-plugin >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-auto-plugin >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-hetero-plugin >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-intel-cpu-plugin >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-ir-frontend >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-onnx-frontend >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-paddle-frontend >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-pytorch-frontend >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-tensorflow-frontend >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-tensorflow-lite-frontend >=2023.0.1,<2023.0.2.0a0"
   ],
   "string": "h9c3aa19_3"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "RaguzovaTatyana",
    "artanokhov",
    "evgenytalanin-intel",
    "ilya-lavrenov"
   ]
  },
  "package": {
   "name": "openvino",
   "version": "2023.0.1"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 h0d85af4_4",
    "c-ares 1.19.1 h0dc2134_0",
    "ca-certificates 2023.7.22 h8857fd0_0",
    "cctools_osx-64 973.0.1 habff3f6_14",
    "clang 15.0.7 h694c41f_3",
    "clang-15 15.0.7 default_hdb78580_3",
    "clang_osx-64 15.0.7 h03d6864_3",
    "clangxx 15.0.7 default_hdb78580_3",
    "clangxx_osx-64 15.0.7 h2133e9c_3",
    "cmake 3.26.4 hf40c264_0",
    "compiler-rt 15.0.7 he1888fc_1",
    "compiler-rt_osx-64 15.0.7 he1888fc_1",
    "curl 8.2.1 h5f667d7_0",
    "expat 2.5.0 hf0c8a7f_1",
    "flatbuffers 23.3.3 hf0c8a7f_1",
    "gettext 0.21.1 h8a4c099_0",
    "git 2.42.0 pl5321hbb4c4ee_0",
    "icu 73.2 hf5e326d_0",
    "krb5 1.21.2 hb884880_0",
    "ld64_osx-64 609 h0fd476b_14",
    "libclang-cpp15 15.0.7 default_hdb78580_3",
    "libcurl 8.2.1 h5f667d7_0",
    "libcxx 16.0.6 hd57cbcb_0",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libexpat 2.5.0 hf0c8a7f_1",
    "libffi 3.4.2 h0d85af4_5",
    "libiconv 1.17 hac89ed1_0",
    "libllvm15 15.0.7 he4b1e75_3",
    "libnghttp2 1.52.0 he2ab024_0",
    "libprotobuf 3.20.3 hbc0c0cd_0",
    "libsqlite 3.43.0 h58db7d2_0",
    "libssh2 1.11.0 hd019ec5_0",
    "libuv 1.44.2 h0dc2134_1",
    "libxml2 2.11.5 h3346baf_1",
    "libzlib 1.2.13 h8a1eda9_5",
    "llvm-tools 15.0.7 he4b1e75_3",
    "ncurses 6.4 hf0c8a7f_0",
    "ninja 1.11.1 hb8565cd_0",
    "openssl 3.1.2 h8a1eda9_0",
    "pcre2 10.40 h1c4e4bc_0",
    "perl 5.32.1 4_h0dc2134_perl5",
    "pkg-config 0.29.2 ha3d46e9_1008",
    "python 3.11.5 h30d4d87_0_cpython",
    "readline 8.2 h9e318b2_1",
    "rhash 1.4.3 h0dc2134_1",
    "sigtool 0.1.3 h88f4db0_0",
    "tapi 1100.0.11 h9ce4665_0",
    "tk 8.6.12 h5dbffcc_0",
    "tzdata 2023c h71feb2d_0",
    "xz 5.2.6 h775f41a_0",
    "zlib 1.2.13 h8a1eda9_5",
    "zstd 1.5.5 h829000d_0"
   ],
   "host": [
    "libcxx 16.0.6 hd57cbcb_0",
    "libprotobuf 3.20.3 hbc0c0cd_0",
    "libprotobuf-static 3.20.3 hbc0c0cd_0",
    "libzlib 1.2.13 h8a1eda9_5",
    "pugixml 1.13 he965462_1",
    "snappy 1.1.10 h225ccf5_0",
    "tbb 2021.5.0 hb8565cd_5",
    "tbb-devel 2021.5.0 hb8565cd_5",
    "xbyak 6.73 he965462_0"
   ],
   "run": [
    "libopenvino >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-auto-batch-plugin >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-auto-plugin >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-hetero-plugin >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-intel-cpu-plugin >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-ir-frontend >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-onnx-frontend >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-paddle-frontend >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-pytorch-frontend >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-tensorflow-frontend >=2023.0.1,<2023.0.2.0a0",
    "libopenvino-tensorflow-lite-frontend >=2023.0.1,<2023.0.2.0a0",
    "pugixml >=1.13,<1.14.0a0",
    "snappy >=1.1.10,<2.0a0"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/005-cross-compilation-macos.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CMAKE_GENERATOR=Ninja",
    "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
    "mkdir -p samples/cpp/thirdparty",
    "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
    "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    "./samples_cpp_build/bin/hello_query_device",
    "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
    "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
    "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose",
    "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
   ],
   "files": [
    "snippets/"
   ],
   "requires": [
    "clang_osx-64 15.*",
    "clangxx_osx-64 15.*",
    "cmake >=3.15",
    "gflags",
    "ninja",
    "nlohmann_json",
    "opencv",
    "pkg-config",
    "tbb-devel =2021.5",
    "zlib"
   ],
   "source_files": [
    "samples",
    "thirdparty/cnpy"
   ]
  }
 },
 "version": "2023.0.1"
}