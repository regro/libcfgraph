{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge/osx-64",
   "https://conda.anaconda.org/conda-forge/noarch",
   "https://repo.continuum.io/pkgs/free/osx-64",
   "https://repo.continuum.io/pkgs/free/noarch",
   "https://repo.continuum.io/pkgs/pro/osx-64",
   "https://repo.continuum.io/pkgs/pro/noarch"
  ],
  "conda_build_version": "2.1.4",
  "conda_env_version": "4.2.13",
  "conda_private": false,
  "conda_version": "4.2.13",
  "description": "The gridDataFormats package provides classes to unify reading and\nwriting n-dimensional datasets. One can read grid data from files,\nmake them available as a `Grid`_ object, and write out the data again.\n",
  "dev_url": "https://github.com/MDAnalysis/GridDataFormats",
  "doc_url": "http://www.mdanalysis.org/GridDataFormats/",
  "env_vars": {
   "CIO_TEST": "<not set>",
   "CONDA_DEFAULT_ENV": "root",
   "CONDA_ENVS_PATH": "<not set>",
   "DYLD_LIBRARY_PATH": "<not set>",
   "PATH": "/Users/travis/miniconda3/bin:/Users/travis/.rvm/gems/ruby-2.0.0-p643/bin:/Users/travis/.rvm/gems/ruby-2.0.0-p643@global/bin:/Users/travis/.rvm/rubies/ruby-2.0.0-p643/bin:/Users/travis/.rvm/bin:/Users/travis/bin:/Users/travis/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin",
   "PYTHONHOME": "<not set>",
   "PYTHONPATH": "<not set>"
  },
  "home": "http://github.com/MDAnalysis/GridDataFormats",
  "license": "LGPLv3",
  "offline": false,
  "root_pkgs": [
   "anaconda-client-1.6.2-py36_0",
   "conda-forge::beautifulsoup4-4.5.3-py36_0",
   "cffi-1.9.1-py36_0",
   "conda-forge::chardet-2.3.0-py36_0",
   "clyent-1.2.2-py36_0",
   "conda-forge::conda-4.2.13-py36_0",
   "conda-forge::conda-build-2.1.4-py36_1",
   "conda-forge::conda-env-2.6.0-0",
   "conda-forge::conda-forge-build-setup-4.4.1-0",
   "conda-verify-2.0.0-py36_0",
   "cryptography-1.7.1-py36_0",
   "conda-forge::filelock-2.0.6-py36_0",
   "idna-2.2-py36_0",
   "conda-forge::jinja2-2.9.5-py36_0",
   "conda-forge::markupsafe-0.23-py36_1",
   "openssl-1.0.2k-0",
   "pip-9.0.1-py36_1",
   "conda-forge::pkginfo-1.2.1-py36_0",
   "pyasn1-0.1.9-py36_0",
   "pycosat-0.6.1-py36_1",
   "pycparser-2.17-py36_0",
   "pycrypto-2.6.1-py36_4",
   "pyopenssl-16.2.0-py36_0",
   "python-3.6.0-0",
   "conda-forge::python-dateutil-2.6.0-py36_0",
   "conda-forge::pytz-2016.10-py36_0",
   "conda-forge::pyyaml-3.12-py36_0",
   "readline-6.2-2",
   "requests-2.12.4-py36_0",
   "ruamel_yaml-0.11.14-py36_1",
   "setuptools-27.2.0-py36_0",
   "six-1.10.0-py36_0",
   "sqlite-3.13.0-0",
   "tk-8.5.18-0",
   "wheel-0.29.0-py36_0",
   "xz-5.2.2-1",
   "yaml-0.1.6-0",
   "zlib-1.2.8-3"
  ],
  "summary": "Reading and writing of data on regular grids in Python"
 },
 "conda_build_config": {},
 "files": [
  "lib/python3.6/site-packages/gridData/CCP4.py",
  "lib/python3.6/site-packages/GridDataFormats-0.3.3-py3.6.egg-info/PKG-INFO",
  "lib/python3.6/site-packages/gridData/tests/test_grid.py",
  "lib/python3.6/site-packages/gridData/testing/tempdir.py",
  "lib/python3.6/site-packages/gridData/tests/test.ccp4",
  "lib/python3.6/site-packages/gridData/OpenDX.py",
  "lib/python3.6/site-packages/gridData/tests/test_dx.py",
  "lib/python3.6/site-packages/gridData/__init__.py",
  "lib/python3.6/site-packages/gridData/gOpenMol.py",
  "lib/python3.6/site-packages/GridDataFormats-0.3.3-py3.6.egg-info/pbr.json",
  "lib/python3.6/site-packages/gridData/core.py",
  "lib/python3.6/site-packages/gridData/tests/test_ccp4.py",
  "lib/python3.6/site-packages/GridDataFormats-0.3.3-py3.6.egg-info/zip-safe",
  "lib/python3.6/site-packages/gridData/tests/__init__.py",
  "lib/python3.6/site-packages/gridData/tests/test.dx",
  "lib/python3.6/site-packages/gridData/testing/__init__.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py36_0",
  "build_number": 0,
  "depends": [
   "numpy",
   "python 3.6*",
   "scipy",
   "six"
  ],
  "license": "LGPLv3",
  "name": "griddataformats",
  "platform": "osx",
  "subdir": "osx-64",
  "version": "0.3.3"
 },
 "metadata_version": 1,
 "name": "griddataformats",
 "raw_recipe": "{% set name = \"GridDataFormats\" %}\n{% set version = \"0.3.3\" %}\n{% set sha256 = \"938f0efcb3bc2f58ec85048b933942da8a52c134170acc97cb095f09d3698fbd\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script: python setup.py install --single-version-externally-managed --record record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n    - six\n    - numpy\n    - scipy\n\ntest:\n  imports:\n    - gridData\n\nabout:\n  home: http://github.com/MDAnalysis/GridDataFormats\n  license: LGPLv3\n  license_file: COPYING.LESSER\n  summary: 'Reading and writing of data on regular grids in Python'\n  description: |\n    The gridDataFormats package provides classes to unify reading and\n    writing n-dimensional datasets. One can read grid data from files,\n    make them available as a `Grid`_ object, and write out the data again.\n  doc_url: http://www.mdanalysis.org/GridDataFormats/\n  dev_url: https://github.com/MDAnalysis/GridDataFormats\n\nextra:\n  recipe-maintainers:\n    - kain88-de\n    - orbeckst\n    - richardjgowers\n",
 "rendered_recipe": {
  "about": {
   "description": "The gridDataFormats package provides classes to unify reading and\nwriting n-dimensional datasets. One can read grid data from files,\nmake them available as a `Grid`_ object, and write out the data again.\n",
   "dev_url": "https://github.com/MDAnalysis/GridDataFormats",
   "doc_url": "http://www.mdanalysis.org/GridDataFormats/",
   "home": "http://github.com/MDAnalysis/GridDataFormats",
   "license": "LGPLv3",
   "license_file": "COPYING.LESSER",
   "summary": "Reading and writing of data on regular grids in Python"
  },
  "build": {
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "py36_0"
  },
  "extra": {
   "recipe-maintainers": [
    "kain88-de",
    "orbeckst",
    "richardjgowers"
   ]
  },
  "package": {
   "name": "griddataformats",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [],
   "run": [
    "python",
    "six",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "fn": "GridDataFormats-0.3.3.tar.gz",
   "sha256": "938f0efcb3bc2f58ec85048b933942da8a52c134170acc97cb095f09d3698fbd",
   "url": "https://pypi.io/packages/source/G/GridDataFormats/GridDataFormats-0.3.3.tar.gz"
  },
  "test": {
   "imports": [
    "gridData"
   ]
  }
 },
 "version": "0.3.3"
}